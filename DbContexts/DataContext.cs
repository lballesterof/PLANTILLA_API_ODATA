using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PLANTILLA_API_ODATA.Models;

#nullable disable

namespace PLANTILLA_API_ODATA.DbContexts
{
    public partial class DataContext : DbContext
    {
        public DataContext()
        {
        }

        public DataContext(DbContextOptions<DataContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AcaCronogramaPagoAlumno> AcaCronogramaPagoAlumnos { get; set; }
        public virtual DbSet<AcaMatricula> AcaMatriculas { get; set; }
        public virtual DbSet<AcaMatriculaCurso> AcaMatriculaCursos { get; set; }
        public virtual DbSet<AcaPensionAlumno> AcaPensionAlumnos { get; set; }
        public virtual DbSet<AfiActivoFijo> AfiActivoFijos { get; set; }
        public virtual DbSet<AfiDepreciacion> AfiDepreciacions { get; set; }
        public virtual DbSet<AleVwPago> AleVwPagos { get; set; }
        public virtual DbSet<BiAllCotizacionVentum> BiAllCotizacionVenta { get; set; }
        public virtual DbSet<BiAllVentum> BiAllVenta { get; set; }
        public virtual DbSet<BiCuotaAllVentum> BiCuotaAllVenta { get; set; }
        public virtual DbSet<BiDetalleTabla> BiDetalleTablas { get; set; }
        public virtual DbSet<BiListaCotizacion> BiListaCotizacions { get; set; }
        public virtual DbSet<BiListaPedido> BiListaPedidos { get; set; }
        public virtual DbSet<BiQuery> BiQueries { get; set; }
        public virtual DbSet<BiTabla> BiTablas { get; set; }
        public virtual DbSet<BivDetalleTabla> BivDetalleTablas { get; set; }
        public virtual DbSet<Categorium> Categoria { get; set; }
        public virtual DbSet<CliCitum> CliCita { get; set; }
        public virtual DbSet<CliHistoriaPaciente> CliHistoriaPacientes { get; set; }
        public virtual DbSet<ComComisionFact> ComComisionFacts { get; set; }
        public virtual DbSet<ConfAlertum> ConfAlerta { get; set; }
        public virtual DbSet<ConfAlu> ConfAlus { get; set; }
        public virtual DbSet<ConfCondicion> ConfCondicions { get; set; }
        public virtual DbSet<ConfDetalleCondicion> ConfDetalleCondicions { get; set; }
        public virtual DbSet<ConfDisenoDocumento> ConfDisenoDocumentos { get; set; }
        public virtual DbSet<ConfDocumento> ConfDocumentos { get; set; }
        public virtual DbSet<ConfEce> ConfEces { get; set; }
        public virtual DbSet<ConfGenCod> ConfGenCods { get; set; }
        public virtual DbSet<ConfParametro> ConfParametros { get; set; }
        public virtual DbSet<ConfQuery> ConfQueries { get; set; }
        public virtual DbSet<ConfServidorBd> ConfServidorBds { get; set; }
        public virtual DbSet<ConfSwtMd> ConfSwtMds { get; set; }
        public virtual DbSet<ConfUsal> ConfUsals { get; set; }
        public virtual DbSet<ConfUsuarioAlertum> ConfUsuarioAlerta { get; set; }
        public virtual DbSet<ConfVigencium> ConfVigencia { get; set; }
        public virtual DbSet<ContaAnalitica> ContaAnaliticas { get; set; }
        public virtual DbSet<ContaDetalleModelo> ContaDetalleModelos { get; set; }
        public virtual DbSet<ContaDetalleVouche> ContaDetalleVouches { get; set; }
        public virtual DbSet<ContaDlineaEsfi> ContaDlineaEsfis { get; set; }
        public virtual DbSet<ContaLineaEsfi> ContaLineaEsfis { get; set; }
        public virtual DbSet<ContaModelo> ContaModelos { get; set; }
        public virtual DbSet<ContaPlanCuentum> ContaPlanCuenta { get; set; }
        public virtual DbSet<ContaProcesoGestion> ContaProcesoGestions { get; set; }
        public virtual DbSet<ContaProdCtum> ContaProdCta { get; set; }
        public virtual DbSet<ContaRubroEsfi> ContaRubroEsfis { get; set; }
        public virtual DbSet<ContaSaldo> ContaSaldos { get; set; }
        public virtual DbSet<ContaSaldosa> ContaSaldosas { get; set; }
        public virtual DbSet<ContaSaldosag> ContaSaldosags { get; set; }
        public virtual DbSet<ContaSaldoscg> ContaSaldoscgs { get; set; }
        public virtual DbSet<ContaSaldosd> ContaSaldosds { get; set; }
        public virtual DbSet<ContaSaldosdg> ContaSaldosdgs { get; set; }
        public virtual DbSet<ContaSaldosg> ContaSaldosgs { get; set; }
        public virtual DbSet<ContaTipoCambio> ContaTipoCambios { get; set; }
        public virtual DbSet<ContaTipoOperacion> ContaTipoOperacions { get; set; }
        public virtual DbSet<ContaVouche> ContaVouches { get; set; }
        public virtual DbSet<ContavwBalCmpCtum> ContavwBalCmpCta { get; set; }
        public virtual DbSet<ContavwCierreAnual> ContavwCierreAnuals { get; set; }
        public virtual DbSet<ContavwCierreAnual2> ContavwCierreAnual2s { get; set; }
        public virtual DbSet<ContavwDetVouche> ContavwDetVouches { get; set; }
        public virtual DbSet<ContavwDetVoucheCc> ContavwDetVoucheCcs { get; set; }
        public virtual DbSet<ContavwDetVoucheCc2At> ContavwDetVoucheCc2Ats { get; set; }
        public virtual DbSet<ContavwDetVoucheCcAt> ContavwDetVoucheCcAts { get; set; }
        public virtual DbSet<ContavwDetVoucheCtag> ContavwDetVoucheCtags { get; set; }
        public virtual DbSet<ContavwDetVoucheCtao> ContavwDetVoucheCtaos { get; set; }
        public virtual DbSet<ContavwDetVoucheCtum> ContavwDetVoucheCta { get; set; }
        public virtual DbSet<ContavwLibroDiario> ContavwLibroDiarios { get; set; }
        public virtual DbSet<ContavwLibroMayor> ContavwLibroMayors { get; set; }
        public virtual DbSet<CrmAnexoSeguimiento> CrmAnexoSeguimientos { get; set; }
        public virtual DbSet<CrmAplazarAviso> CrmAplazarAvisos { get; set; }
        public virtual DbSet<CrmAviso> CrmAvisos { get; set; }
        public virtual DbSet<CrmCampana> CrmCampanas { get; set; }
        public virtual DbSet<CrmCampanaCliente> CrmCampanaClientes { get; set; }
        public virtual DbSet<CrmListaMarketing> CrmListaMarketings { get; set; }
        public virtual DbSet<CrmListaMktIntegrante> CrmListaMktIntegrantes { get; set; }
        public virtual DbSet<CrmSeguimiento> CrmSeguimientos { get; set; }
        public virtual DbSet<FeDetalleResumenBaja> FeDetalleResumenBajas { get; set; }
        public virtual DbSet<FeError> FeErrors { get; set; }
        public virtual DbSet<FeResumenBaja> FeResumenBajas { get; set; }
        public virtual DbSet<GetDataRequisicione> GetDataRequisiciones { get; set; }
        public virtual DbSet<Hoja1> Hoja1s { get; set; }
        public virtual DbSet<LogAplicacion> LogAplicacions { get; set; }
        public virtual DbSet<LogCambioCampo> LogCambioCampos { get; set; }
        public virtual DbSet<Loteserie> Loteseries { get; set; }
        public virtual DbSet<OpeAlmacenzona> OpeAlmacenzonas { get; set; }
        public virtual DbSet<OpeAnexoCotizacion> OpeAnexoCotizacions { get; set; }
        public virtual DbSet<OpeAnexoCotizacionc> OpeAnexoCotizacioncs { get; set; }
        public virtual DbSet<OpeAnexoDocumentoCompra> OpeAnexoDocumentoCompras { get; set; }
        public virtual DbSet<OpeAnexoPedido> OpeAnexoPedidos { get; set; }
        public virtual DbSet<OpeAnticipo> OpeAnticipos { get; set; }
        public virtual DbSet<OpeAnticipop> OpeAnticipops { get; set; }
        public virtual DbSet<OpeAperturaCaja> OpeAperturaCajas { get; set; }
        public virtual DbSet<OpeArchivoPresupuesto> OpeArchivoPresupuestos { get; set; }
        public virtual DbSet<OpeArqueoCaja> OpeArqueoCajas { get; set; }
        public virtual DbSet<OpeAsignacionActivoFijo> OpeAsignacionActivoFijos { get; set; }
        public virtual DbSet<OpeAzfilacolumna> OpeAzfilacolumnas { get; set; }
        public virtual DbSet<OpeAzfilacolumnaprod> OpeAzfilacolumnaprods { get; set; }
        public virtual DbSet<OpeBloqueoDesblo> OpeBloqueoDesblos { get; set; }
        public virtual DbSet<OpeCaja> OpeCajas { get; set; }
        public virtual DbSet<OpeCaja2> OpeCaja2s { get; set; }
        public virtual DbSet<OpeCajab> OpeCajabs { get; set; }
        public virtual DbSet<OpeCarpetaImportacion> OpeCarpetaImportacions { get; set; }
        public virtual DbSet<OpeCheckinout> OpeCheckinouts { get; set; }
        public virtual DbSet<OpeCierreDiarioCaja> OpeCierreDiarioCajas { get; set; }
        public virtual DbSet<OpeCierreMe> OpeCierreMes { get; set; }
        public virtual DbSet<OpeClienteProducto> OpeClienteProductos { get; set; }
        public virtual DbSet<OpeClistaPrecio> OpeClistaPrecios { get; set; }
        public virtual DbSet<OpeCofprProducto> OpeCofprProductos { get; set; }
        public virtual DbSet<OpeComisionContrato> OpeComisionContratos { get; set; }
        public virtual DbSet<OpeComisionVentaPersona> OpeComisionVentaPersonas { get; set; }
        public virtual DbSet<OpeCompElec> OpeCompElecs { get; set; }
        public virtual DbSet<OpeCompromiso> OpeCompromisos { get; set; }
        public virtual DbSet<OpeConsumo> OpeConsumos { get; set; }
        public virtual DbSet<OpeContrato> OpeContratos { get; set; }
        public virtual DbSet<OpeContratoCuotaParqueo> OpeContratoCuotaParqueos { get; set; }
        public virtual DbSet<OpeContratoParqueo> OpeContratoParqueos { get; set; }
        public virtual DbSet<OpeContratoPlacaParqueo> OpeContratoPlacaParqueos { get; set; }
        public virtual DbSet<OpeControlGarantium> OpeControlGarantia { get; set; }
        public virtual DbSet<OpeControlMaquina> OpeControlMaquinas { get; set; }
        public virtual DbSet<OpeConvenioLab> OpeConvenioLabs { get; set; }
        public virtual DbSet<OpeConvenioPrueba> OpeConvenioPruebas { get; set; }
        public virtual DbSet<OpeCorrelativo> OpeCorrelativos { get; set; }
        public virtual DbSet<OpeCosteoImportacion> OpeCosteoImportacions { get; set; }
        public virtual DbSet<OpeCostoProm> OpeCostoProms { get; set; }
        public virtual DbSet<OpeCostoRealOf> OpeCostoRealOfs { get; set; }
        public virtual DbSet<OpeCotizacionVentum> OpeCotizacionVenta { get; set; }
        public virtual DbSet<OpeCotizacionc> OpeCotizacioncs { get; set; }
        public virtual DbSet<OpeCrequerimiento> OpeCrequerimientos { get; set; }
        public virtual DbSet<OpeCrequerimientoNumero> OpeCrequerimientoNumeros { get; set; }
        public virtual DbSet<OpeCuentaCorrienteCliente> OpeCuentaCorrienteClientes { get; set; }
        public virtual DbSet<OpeCuentaCorrienteProveedor> OpeCuentaCorrienteProveedors { get; set; }
        public virtual DbSet<OpeCuotaCondpago> OpeCuotaCondpagos { get; set; }
        public virtual DbSet<OpeCuotaDocumentoventum> OpeCuotaDocumentoventa { get; set; }
        public virtual DbSet<OpeCuotaPedido> OpeCuotaPedidos { get; set; }
        public virtual DbSet<OpeCuotaVendedor> OpeCuotaVendedors { get; set; }
        public virtual DbSet<OpeDetalleActivoFijo> OpeDetalleActivoFijos { get; set; }
        public virtual DbSet<OpeDetalleCaja> OpeDetalleCajas { get; set; }
        public virtual DbSet<OpeDetalleCheckinout> OpeDetalleCheckinouts { get; set; }
        public virtual DbSet<OpeDetalleCompromiso> OpeDetalleCompromisos { get; set; }
        public virtual DbSet<OpeDetalleConsumo> OpeDetalleConsumos { get; set; }
        public virtual DbSet<OpeDetalleCotizacion> OpeDetalleCotizacions { get; set; }
        public virtual DbSet<OpeDetalleCpresupuesto> OpeDetalleCpresupuestos { get; set; }
        public virtual DbSet<OpeDetalleDocumentoCompra> OpeDetalleDocumentoCompras { get; set; }
        public virtual DbSet<OpeDetalleDocumentoCompra2> OpeDetalleDocumentoCompra2s { get; set; }
        public virtual DbSet<OpeDetalleDocumentoVentum> OpeDetalleDocumentoVenta { get; set; }
        public virtual DbSet<OpeDetalleEntre> OpeDetalleEntres { get; set; }
        public virtual DbSet<OpeDetalleFre> OpeDetalleFres { get; set; }
        public virtual DbSet<OpeDetalleGuia2> OpeDetalleGuia2s { get; set; }
        public virtual DbSet<OpeDetalleGuia3> OpeDetalleGuia3s { get; set; }
        public virtual DbSet<OpeDetalleGuia4> OpeDetalleGuia4s { get; set; }
        public virtual DbSet<OpeDetalleGuiaubicacion> OpeDetalleGuiaubicacions { get; set; }
        public virtual DbSet<OpeDetalleHabitacion> OpeDetalleHabitacions { get; set; }
        public virtual DbSet<OpeDetalleInventarioFisico> OpeDetalleInventarioFisicos { get; set; }
        public virtual DbSet<OpeDetalleLetraCliente> OpeDetalleLetraClientes { get; set; }
        public virtual DbSet<OpeDetalleLetraProveedor> OpeDetalleLetraProveedors { get; set; }
        public virtual DbSet<OpeDetalleLibbco> OpeDetalleLibbcos { get; set; }
        public virtual DbSet<OpeDetalleLiquidacionm> OpeDetalleLiquidacionms { get; set; }
        public virtual DbSet<OpeDetalleNumeroDocumento> OpeDetalleNumeroDocumentos { get; set; }
        public virtual DbSet<OpeDetalleOrdenCompra> OpeDetalleOrdenCompras { get; set; }
        public virtual DbSet<OpeDetalleOrdenFabricacion> OpeDetalleOrdenFabricacions { get; set; }
        public virtual DbSet<OpeDetalleOrdenServicio> OpeDetalleOrdenServicios { get; set; }
        public virtual DbSet<OpeDetalleOrdenTrabajo> OpeDetalleOrdenTrabajos { get; set; }
        public virtual DbSet<OpeDetallePagoCliente> OpeDetallePagoClientes { get; set; }
        public virtual DbSet<OpeDetallePagoProveedor> OpeDetallePagoProveedors { get; set; }
        public virtual DbSet<OpeDetallePartidaPresupuesto> OpeDetallePartidaPresupuestos { get; set; }
        public virtual DbSet<OpeDetallePedido> OpeDetallePedidos { get; set; }
        public virtual DbSet<OpeDetallePlanFabricacion> OpeDetallePlanFabricacions { get; set; }
        public virtual DbSet<OpeDetallePlantillaRecetum> OpeDetallePlantillaReceta { get; set; }
        public virtual DbSet<OpeDetallePresupuesto> OpeDetallePresupuestos { get; set; }
        public virtual DbSet<OpeDetallePresupuesto2> OpeDetallePresupuesto2s { get; set; }
        public virtual DbSet<OpeDetalleProgramacionPago> OpeDetalleProgramacionPagos { get; set; }
        public virtual DbSet<OpeDetalleRecetum> OpeDetalleReceta { get; set; }
        public virtual DbSet<OpeDetalleReqitem> OpeDetalleReqitems { get; set; }
        public virtual DbSet<OpeDetalleRequisicion> OpeDetalleRequisicions { get; set; }
        public virtual DbSet<OpeDetalleReserva> OpeDetalleReservas { get; set; }
        public virtual DbSet<OpeDetalleSolicitudDocumento> OpeDetalleSolicitudDocumentos { get; set; }
        public virtual DbSet<OpeDetalleSolicitudRequerimiento> OpeDetalleSolicitudRequerimientos { get; set; }
        public virtual DbSet<OpeDetalleSolicitudVjevto> OpeDetalleSolicitudVjevtos { get; set; }
        public virtual DbSet<OpeDetalleTabla> OpeDetalleTablas { get; set; }
        public virtual DbSet<OpeDetallecc> OpeDetalleccs { get; set; }
        public virtual DbSet<OpeDistGastImportacion> OpeDistGastImportacions { get; set; }
        public virtual DbSet<OpeDocntDoc> OpeDocntDocs { get; set; }
        public virtual DbSet<OpeDocumentoCompra> OpeDocumentoCompras { get; set; }
        public virtual DbSet<OpeDocumentoCompra2> OpeDocumentoCompra2s { get; set; }
        public virtual DbSet<OpeDocumentoGuia2> OpeDocumentoGuia2s { get; set; }
        public virtual DbSet<OpeDocumentoGuium> OpeDocumentoGuia { get; set; }
        public virtual DbSet<OpeDocumentoVentaContrato> OpeDocumentoVentaContratos { get; set; }
        public virtual DbSet<OpeDocumentoVentaPedido> OpeDocumentoVentaPedidos { get; set; }
        public virtual DbSet<OpeDocumentoVentum> OpeDocumentoVenta { get; set; }
        public virtual DbSet<OpeDsctoCantidadProducto> OpeDsctoCantidadProductos { get; set; }
        public virtual DbSet<OpeEmpresa> OpeEmpresas { get; set; }
        public virtual DbSet<OpeEntre> OpeEntres { get; set; }
        public virtual DbSet<OpeEntre2> OpeEntre2s { get; set; }
        public virtual DbSet<OpeEquipoPresupuesto> OpeEquipoPresupuestos { get; set; }
        public virtual DbSet<OpeEstablecimiento> OpeEstablecimientos { get; set; }
        public virtual DbSet<OpeEstadoEquipoFre> OpeEstadoEquipoFres { get; set; }
        public virtual DbSet<OpeEstadoHabitacion> OpeEstadoHabitacions { get; set; }
        public virtual DbSet<OpeFcDiario> OpeFcDiarios { get; set; }
        public virtual DbSet<OpeForm> OpeForms { get; set; }
        public virtual DbSet<OpeFormatoLab> OpeFormatoLabs { get; set; }
        public virtual DbSet<OpeFormatoLabvalor> OpeFormatoLabvalors { get; set; }
        public virtual DbSet<OpeFre> OpeFres { get; set; }
        public virtual DbSet<OpeGastoAdicional> OpeGastoAdicionals { get; set; }
        public virtual DbSet<OpeGgPresupuesto> OpeGgPresupuestos { get; set; }
        public virtual DbSet<OpeHabitacion> OpeHabitacions { get; set; }
        public virtual DbSet<OpeImpPresupuesto> OpeImpPresupuestos { get; set; }
        public virtual DbSet<OpeImpProdWeb> OpeImpProdWebs { get; set; }
        public virtual DbSet<OpeIngresoImportacion> OpeIngresoImportacions { get; set; }
        public virtual DbSet<OpeInventarioFisico> OpeInventarioFisicos { get; set; }
        public virtual DbSet<OpeKardex> OpeKardices { get; set; }
        public virtual DbSet<OpeLabFre> OpeLabFres { get; set; }
        public virtual DbSet<OpeLetraCliente> OpeLetraClientes { get; set; }
        public virtual DbSet<OpeLetraProveedor> OpeLetraProveedors { get; set; }
        public virtual DbSet<OpeLibbco> OpeLibbcos { get; set; }
        public virtual DbSet<OpeLimpiezaHabitacion> OpeLimpiezaHabitacions { get; set; }
        public virtual DbSet<OpeLiquidacionm> OpeLiquidacionms { get; set; }
        public virtual DbSet<OpeListaPrecio> OpeListaPrecios { get; set; }
        public virtual DbSet<OpeListaPrecio2> OpeListaPrecio2s { get; set; }
        public virtual DbSet<OpeLote> OpeLotes { get; set; }
        public virtual DbSet<OpeMaquina> OpeMaquinas { get; set; }
        public virtual DbSet<OpeMesa> OpeMesas { get; set; }
        public virtual DbSet<OpeMovbcoReq> OpeMovbcoReqs { get; set; }
        public virtual DbSet<OpeMovimientoDinero> OpeMovimientoDineros { get; set; }
        public virtual DbSet<OpeMpDocven> OpeMpDocvens { get; set; }
        public virtual DbSet<OpeMpPedven> OpeMpPedvens { get; set; }
        public virtual DbSet<OpeNiGastoImportacion> OpeNiGastoImportacions { get; set; }
        public virtual DbSet<OpeNotaCobranza> OpeNotaCobranzas { get; set; }
        public virtual DbSet<OpeNotaProyecto> OpeNotaProyectos { get; set; }
        public virtual DbSet<OpeNotasReq> OpeNotasReqs { get; set; }
        public virtual DbSet<OpeNumeroDocumento> OpeNumeroDocumentos { get; set; }
        public virtual DbSet<OpeOcdcProrrateo> OpeOcdcProrrateos { get; set; }
        public virtual DbSet<OpeOdocumentoCompra> OpeOdocumentoCompras { get; set; }
        public virtual DbSet<OpeOfprProducto> OpeOfprProductos { get; set; }
        public virtual DbSet<OpeOrdenCompra> OpeOrdenCompras { get; set; }
        public virtual DbSet<OpeOrdenFabricacion> OpeOrdenFabricacions { get; set; }
        public virtual DbSet<OpeOrdenFabricacionSerielote> OpeOrdenFabricacionSerielotes { get; set; }
        public virtual DbSet<OpeOrdenServicio> OpeOrdenServicios { get; set; }
        public virtual DbSet<OpeOrdenTrabajo> OpeOrdenTrabajos { get; set; }
        public virtual DbSet<OpeOtPedido> OpeOtPedidos { get; set; }
        public virtual DbSet<OpePagoCliente> OpePagoClientes { get; set; }
        public virtual DbSet<OpePagoTrabajador> OpePagoTrabajadors { get; set; }
        public virtual DbSet<OpeParametro> OpeParametros { get; set; }
        public virtual DbSet<OpeParqueoVehiculo> OpeParqueoVehiculos { get; set; }
        public virtual DbSet<OpePedido> OpePedidos { get; set; }
        public virtual DbSet<OpePedidoGiroIcomplementarium> OpePedidoGiroIcomplementaria { get; set; }
        public virtual DbSet<OpePedidoMesa> OpePedidoMesas { get; set; }
        public virtual DbSet<OpePedidoPagoIhoy> OpePedidoPagoIhoys { get; set; }
        public virtual DbSet<OpePedidoPuntaje> OpePedidoPuntajes { get; set; }
        public virtual DbSet<OpePermisoPersona> OpePermisoPersonas { get; set; }
        public virtual DbSet<OpePersona> OpePersonas { get; set; }
        public virtual DbSet<OpePlanFabricacion> OpePlanFabricacions { get; set; }
        public virtual DbSet<OpePlanFactGasto> OpePlanFactGastos { get; set; }
        public virtual DbSet<OpePlanFacturacionOc> OpePlanFacturacionOcs { get; set; }
        public virtual DbSet<OpePlantillaRecetum> OpePlantillaReceta { get; set; }
        public virtual DbSet<OpePresupuesto> OpePresupuestos { get; set; }
        public virtual DbSet<OpePresupuesto2> OpePresupuesto2s { get; set; }
        public virtual DbSet<OpeProducto> OpeProductos { get; set; }
        public virtual DbSet<OpeProductoImagen> OpeProductoImagens { get; set; }
        public virtual DbSet<OpeProductoSucursal> OpeProductoSucursals { get; set; }
        public virtual DbSet<OpeProgramacionMn> OpeProgramacionMns { get; set; }
        public virtual DbSet<OpeProgramacionPago> OpeProgramacionPagos { get; set; }
        public virtual DbSet<OpePromocionProducto> OpePromocionProductos { get; set; }
        public virtual DbSet<OpeProspecto> OpeProspectos { get; set; }
        public virtual DbSet<OpeProveedorProducto> OpeProveedorProductos { get; set; }
        public virtual DbSet<OpePuntosVentum> OpePuntosVenta { get; set; }
        public virtual DbSet<OpeRecetum> OpeReceta { get; set; }
        public virtual DbSet<OpeReferenciaAdelanto> OpeReferenciaAdelantos { get; set; }
        public virtual DbSet<OpeReferenciaBancarium> OpeReferenciaBancaria { get; set; }
        public virtual DbSet<OpeReferenciaPersona> OpeReferenciaPersonas { get; set; }
        public virtual DbSet<OpeReprogramacionOc> OpeReprogramacionOcs { get; set; }
        public virtual DbSet<OpeReqitem> OpeReqitems { get; set; }
        public virtual DbSet<OpeRequerimiento> OpeRequerimientos { get; set; }
        public virtual DbSet<OpeRequisicion> OpeRequisicions { get; set; }
        public virtual DbSet<OpeRequisicionAnexo> OpeRequisicionAnexos { get; set; }
        public virtual DbSet<OpeReserva> OpeReservas { get; set; }
        public virtual DbSet<OpeResultadoFinalLab> OpeResultadoFinalLabs { get; set; }
        public virtual DbSet<OpeResultadoProducto> OpeResultadoProductos { get; set; }
        public virtual DbSet<OpeRlk> OpeRlks { get; set; }
        public virtual DbSet<OpeSeguimientoCoti> OpeSeguimientoCotis { get; set; }
        public virtual DbSet<OpeSeguimientoImportacion> OpeSeguimientoImportacions { get; set; }
        public virtual DbSet<OpeSeguimientoPedi> OpeSeguimientoPedis { get; set; }
        public virtual DbSet<OpeSolicitudAnticipoProveedor> OpeSolicitudAnticipoProveedors { get; set; }
        public virtual DbSet<OpeSolicitudDinero> OpeSolicitudDineros { get; set; }
        public virtual DbSet<OpeSolicitudDocumento> OpeSolicitudDocumentos { get; set; }
        public virtual DbSet<OpeSolicitudRequerimiento> OpeSolicitudRequerimientos { get; set; }
        public virtual DbSet<OpeSolicitudVjevto> OpeSolicitudVjevtos { get; set; }
        public virtual DbSet<OpeStockLote> OpeStockLotes { get; set; }
        public virtual DbSet<OpeStockProducto> OpeStockProductos { get; set; }
        public virtual DbSet<OpeSucursal> OpeSucursals { get; set; }
        public virtual DbSet<OpeTabla> OpeTablas { get; set; }
        public virtual DbSet<OpeTarifa> OpeTarifas { get; set; }
        public virtual DbSet<OpeTarifaHabitacion> OpeTarifaHabitacions { get; set; }
        public virtual DbSet<OpeTarifaPrecio> OpeTarifaPrecios { get; set; }
        public virtual DbSet<OpeTarifaTemporadum> OpeTarifaTemporada { get; set; }
        public virtual DbSet<OpeTarifaTipoHabitacion> OpeTarifaTipoHabitacions { get; set; }
        public virtual DbSet<OpeTarjetaEquipo> OpeTarjetaEquipos { get; set; }
        public virtual DbSet<OpeTdocApertura> OpeTdocAperturas { get; set; }
        public virtual DbSet<OpeTdocPuntoVentum> OpeTdocPuntoVenta { get; set; }
        public virtual DbSet<OpeTempComandum> OpeTempComanda { get; set; }
        public virtual DbSet<OpeTemporadum> OpeTemporada { get; set; }
        public virtual DbSet<OpeTicket> OpeTickets { get; set; }
        public virtual DbSet<OpeTipoCambio> OpeTipoCambios { get; set; }
        public virtual DbSet<OpeTmovTdoc> OpeTmovTdocs { get; set; }
        public virtual DbSet<OpeTransferencium> OpeTransferencia { get; set; }
        public virtual DbSet<OpeUsuario> OpeUsuarios { get; set; }
        public virtual DbSet<OpeUsuarioForm> OpeUsuarioForms { get; set; }
        public virtual DbSet<OpeValorizacion> OpeValorizacions { get; set; }
        public virtual DbSet<OpevwCajab> OpevwCajabs { get; set; }
        public virtual DbSet<OpevwCcom> OpevwCcoms { get; set; }
        public virtual DbSet<OpevwCobranzaCliente> OpevwCobranzaClientes { get; set; }
        public virtual DbSet<OpevwComprasCentroCosto> OpevwComprasCentroCostos { get; set; }
        public virtual DbSet<OpevwComprasCentroCosto2> OpevwComprasCentroCosto2s { get; set; }
        public virtual DbSet<OpevwConPla> OpevwConPlas { get; set; }
        public virtual DbSet<OpevwConsultaInventario> OpevwConsultaInventarios { get; set; }
        public virtual DbSet<OpevwCotizacionKit> OpevwCotizacionKits { get; set; }
        public virtual DbSet<OpevwCvtum> OpevwCvta { get; set; }
        public virtual DbSet<OpevwDetalleSalof> OpevwDetalleSalofs { get; set; }
        public virtual DbSet<OpevwDetalleSalof2> OpevwDetalleSalof2s { get; set; }
        public virtual DbSet<OpevwDevueltoReq> OpevwDevueltoReqs { get; set; }
        public virtual DbSet<OpevwDocumentoInventario> OpevwDocumentoInventarios { get; set; }
        public virtual DbSet<OpevwDpstock> OpevwDpstocks { get; set; }
        public virtual DbSet<OpevwDpstockCcc> OpevwDpstockCccs { get; set; }
        public virtual DbSet<OpevwDpstockFv> OpevwDpstockFvs { get; set; }
        public virtual DbSet<OpevwDpstockLote> OpevwDpstockLotes { get; set; }
        public virtual DbSet<OpevwDpstockSerie> OpevwDpstockSeries { get; set; }
        public virtual DbSet<OpevwDpstockubi> OpevwDpstockubis { get; set; }
        public virtual DbSet<OpevwDpstockubi2> OpevwDpstockubi2s { get; set; }
        public virtual DbSet<OpevwDstock> OpevwDstocks { get; set; }
        public virtual DbSet<OpevwDstockCcc> OpevwDstockCccs { get; set; }
        public virtual DbSet<OpevwDstockFv> OpevwDstockFvs { get; set; }
        public virtual DbSet<OpevwDstockLote> OpevwDstockLotes { get; set; }
        public virtual DbSet<OpevwDstockSerie> OpevwDstockSeries { get; set; }
        public virtual DbSet<OpevwEgreso> OpevwEgresos { get; set; }
        public virtual DbSet<OpevwGastoCatproducto> OpevwGastoCatproductos { get; set; }
        public virtual DbSet<OpevwGastoCc> OpevwGastoCcs { get; set; }
        public virtual DbSet<OpevwGuiaDremision> OpevwGuiaDremisions { get; set; }
        public virtual DbSet<OpevwGuiaDremisionp> OpevwGuiaDremisionps { get; set; }
        public virtual DbSet<OpevwGuiaFechaalmacenguium> OpevwGuiaFechaalmacenguia { get; set; }
        public virtual DbSet<OpevwItemsProyecto> OpevwItemsProyectos { get; set; }
        public virtual DbSet<OpevwKardex> OpevwKardices { get; set; }
        public virtual DbSet<OpevwLineaGastoCompra> OpevwLineaGastoCompras { get; set; }
        public virtual DbSet<OpevwLineaPresupuesto> OpevwLineaPresupuestos { get; set; }
        public virtual DbSet<OpevwListadoProducto> OpevwListadoProductos { get; set; }
        public virtual DbSet<OpevwMeproyecto> OpevwMeproyectos { get; set; }
        public virtual DbSet<OpevwMovimienoValorizado> OpevwMovimienoValorizados { get; set; }
        public virtual DbSet<OpevwMovimientoImportacion> OpevwMovimientoImportacions { get; set; }
        public virtual DbSet<OpevwMovimientoUbicacion> OpevwMovimientoUbicacions { get; set; }
        public virtual DbSet<OpevwNsGuiasRemision> OpevwNsGuiasRemisions { get; set; }
        public virtual DbSet<OpevwObtenerConsumoProducto2> OpevwObtenerConsumoProducto2s { get; set; }
        public virtual DbSet<OpevwObtenerDocumento> OpevwObtenerDocumentos { get; set; }
        public virtual DbSet<OpevwObtenerDocumento2> OpevwObtenerDocumento2s { get; set; }
        public virtual DbSet<OpevwObtenerDocumentoCompra> OpevwObtenerDocumentoCompras { get; set; }
        public virtual DbSet<OpevwObtenerKitDocumentoVentum> OpevwObtenerKitDocumentoVenta { get; set; }
        public virtual DbSet<OpevwObtenerVentaMasiva> OpevwObtenerVentaMasivas { get; set; }
        public virtual DbSet<OpevwObtenerVentaMasiva2> OpevwObtenerVentaMasiva2s { get; set; }
        public virtual DbSet<OpevwObtenerVentaMasiva3> OpevwObtenerVentaMasiva3s { get; set; }
        public virtual DbSet<OpevwObtenerVentaMasivaConsolidado> OpevwObtenerVentaMasivaConsolidados { get; set; }
        public virtual DbSet<OpevwOrdenCompra> OpevwOrdenCompras { get; set; }
        public virtual DbSet<OpevwPagoBanco> OpevwPagoBancos { get; set; }
        public virtual DbSet<OpevwPagoProveedor> OpevwPagoProveedors { get; set; }
        public virtual DbSet<OpevwPorcentajeCotizacion> OpevwPorcentajeCotizacions { get; set; }
        public virtual DbSet<OpevwPorcentajeCotizacion2> OpevwPorcentajeCotizacion2s { get; set; }
        public virtual DbSet<OpevwProductoMasVendido> OpevwProductoMasVendidos { get; set; }
        public virtual DbSet<OpevwProductoMasVendidoMonto> OpevwProductoMasVendidoMontos { get; set; }
        public virtual DbSet<OpevwProyectoServ> OpevwProyectoServs { get; set; }
        public virtual DbSet<OpevwResumenCierreDiario> OpevwResumenCierreDiarios { get; set; }
        public virtual DbSet<OpevwResumenCierreDiario2> OpevwResumenCierreDiario2s { get; set; }
        public virtual DbSet<OpevwSalInvPorMov> OpevwSalInvPorMovs { get; set; }
        public virtual DbSet<OpevwSalInvPorMov2> OpevwSalInvPorMov2s { get; set; }
        public virtual DbSet<OpevwSalInvPorMov3> OpevwSalInvPorMov3s { get; set; }
        public virtual DbSet<OpevwSalInvPorMovCc> OpevwSalInvPorMovCcs { get; set; }
        public virtual DbSet<OpevwSolReq> OpevwSolReqs { get; set; }
        public virtual DbSet<OpevwStock> OpevwStocks { get; set; }
        public virtual DbSet<OpevwStock2> OpevwStock2s { get; set; }
        public virtual DbSet<OpevwStockIntermedio> OpevwStockIntermedios { get; set; }
        public virtual DbSet<OpevwStockaLp> OpevwStockaLps { get; set; }
        public virtual DbSet<OpevwStockaLpag> OpevwStockaLpags { get; set; }
        public virtual DbSet<OpevwStockall> OpevwStockalls { get; set; }
        public virtual DbSet<OpevwStockcproyecto> OpevwStockcproyectos { get; set; }
        public virtual DbSet<OpevwStockrestum> OpevwStockresta { get; set; }
        public virtual DbSet<OpevwSumrecetum> OpevwSumreceta { get; set; }
        public virtual DbSet<OpevwVentaCentroCosto> OpevwVentaCentroCostos { get; set; }
        public virtual DbSet<OpevwVentaComensal> OpevwVentaComensals { get; set; }
        public virtual DbSet<OpevwVentaRentabilidad> OpevwVentaRentabilidads { get; set; }
        public virtual DbSet<OpevwVentaRentabilidadVv> OpevwVentaRentabilidadVvs { get; set; }
        public virtual DbSet<OpevwVentaRentabilidadce> OpevwVentaRentabilidadces { get; set; }
        public virtual DbSet<OpevwVentaRentabilidaduc> OpevwVentaRentabilidaducs { get; set; }
        public virtual DbSet<PlanDetallePresupuesto> PlanDetallePresupuestos { get; set; }
        public virtual DbSet<PlanPresupuesto> PlanPresupuestos { get; set; }
        public virtual DbSet<QueryDocumentoCliente> QueryDocumentoClientes { get; set; }
        public virtual DbSet<QueryDocumentoProveedor> QueryDocumentoProveedors { get; set; }
        public virtual DbSet<QueryKardex> QueryKardices { get; set; }
        public virtual DbSet<QueryKardexSeries> QueryKardexSeries { get; set; }
        public virtual DbSet<RepVwAnticiposCliente> RepVwAnticiposClientes { get; set; }
        public virtual DbSet<RepVwAsignacionActivoFijo> RepVwAsignacionActivoFijos { get; set; }
        public virtual DbSet<RepVwAtencionTicket> RepVwAtencionTickets { get; set; }
        public virtual DbSet<RepVwCajaChica> RepVwCajaChicas { get; set; }
        public virtual DbSet<RepVwComandaAnulado> RepVwComandaAnulados { get; set; }
        public virtual DbSet<RepVwComisionesVentum> RepVwComisionesVenta { get; set; }
        public virtual DbSet<RepVwCompromisoFinanciero> RepVwCompromisoFinancieros { get; set; }
        public virtual DbSet<RepVwConsumoComensal> RepVwConsumoComensals { get; set; }
        public virtual DbSet<RepVwConsumoComensal2> RepVwConsumoComensal2s { get; set; }
        public virtual DbSet<RepVwContabilidad> RepVwContabilidads { get; set; }
        public virtual DbSet<RepVwContrato> RepVwContratos { get; set; }
        public virtual DbSet<RepVwCostoValorventum> RepVwCostoValorventa { get; set; }
        public virtual DbSet<RepVwDaotVentum> RepVwDaotVenta { get; set; }
        public virtual DbSet<RepVwDetalleDocumentoCompra> RepVwDetalleDocumentoCompras { get; set; }
        public virtual DbSet<RepVwDetalleEntregaRendir> RepVwDetalleEntregaRendirs { get; set; }
        public virtual DbSet<RepVwDocumentoCompraFe> RepVwDocumentoCompraves { get; set; }
        public virtual DbSet<RepVwDocumentoCompraPercepcion> RepVwDocumentoCompraPercepcions { get; set; }
        public virtual DbSet<RepVwDocumentoVenta2> RepVwDocumentoVenta2s { get; set; }
        public virtual DbSet<RepVwDocumentoVentum> RepVwDocumentoVenta { get; set; }
        public virtual DbSet<RepVwEntregaRendir> RepVwEntregaRendirs { get; set; }
        public virtual DbSet<RepVwGastosCompra> RepVwGastosCompras { get; set; }
        public virtual DbSet<RepVwInventario> RepVwInventarios { get; set; }
        public virtual DbSet<RepVwLetraCliente> RepVwLetraClientes { get; set; }
        public virtual DbSet<RepVwLetraCliente2> RepVwLetraCliente2s { get; set; }
        public virtual DbSet<RepVwLog> RepVwLogs { get; set; }
        public virtual DbSet<RepVwObtenerRegistroVentum> RepVwObtenerRegistroVenta { get; set; }
        public virtual DbSet<RepVwObtenerVentaUtil> RepVwObtenerVentaUtils { get; set; }
        public virtual DbSet<RepVwOrdenPedidoLetra> RepVwOrdenPedidoLetras { get; set; }
        public virtual DbSet<RepVwPagoConsumoComensal> RepVwPagoConsumoComensals { get; set; }
        public virtual DbSet<RepVwPagoProveedor> RepVwPagoProveedors { get; set; }
        public virtual DbSet<RepVwPorcotizacion> RepVwPorcotizacions { get; set; }
        public virtual DbSet<RepVwProducto> RepVwProductos { get; set; }
        public virtual DbSet<RepVwProducto2> RepVwProducto2s { get; set; }
        public virtual DbSet<RepVwProductoNoInventariable> RepVwProductoNoInventariables { get; set; }
        public virtual DbSet<RepVwReqOcCc> RepVwReqOcCcs { get; set; }
        public virtual DbSet<RepVwReqOpCob> RepVwReqOpCobs { get; set; }
        public virtual DbSet<RepVwRq> RepVwRqs { get; set; }
        public virtual DbSet<RepVwSaldoKardex> RepVwSaldoKardices { get; set; }
        public virtual DbSet<RepVwSaldoNegativo> RepVwSaldoNegativos { get; set; }
        public virtual DbSet<RepVwServicioOt> RepVwServicioOts { get; set; }
        public virtual DbSet<RepVwStockUbicacion> RepVwStockUbicacions { get; set; }
        public virtual DbSet<RepVwTesoreriaDet> RepVwTesoreriaDets { get; set; }
        public virtual DbSet<RepVwTesorerium> RepVwTesoreria { get; set; }
        public virtual DbSet<RepVwValorizacionProd> RepVwValorizacionProds { get; set; }
        public virtual DbSet<RepVwVentaExportar> RepVwVentaExportars { get; set; }
        public virtual DbSet<RepVwutilAlmacen> RepVwutilAlmacens { get; set; }
        public virtual DbSet<RepVwutilCompra> RepVwutilCompras { get; set; }
        public virtual DbSet<ReqAlmacen> ReqAlmacens { get; set; }
        public virtual DbSet<ReqOc> ReqOcs { get; set; }
        public virtual DbSet<RqDetalleCcPresupuesto> RqDetalleCcPresupuestos { get; set; }
        public virtual DbSet<RqDetallePresupuesto> RqDetallePresupuestos { get; set; }
        public virtual DbSet<RqPresupuesto> RqPresupuestos { get; set; }
        public virtual DbSet<RrhhAnexoPersonal> RrhhAnexoPersonals { get; set; }
        public virtual DbSet<RrhhAsignacionRecurso> RrhhAsignacionRecursos { get; set; }
        public virtual DbSet<RrhhCapacitacion> RrhhCapacitacions { get; set; }
        public virtual DbSet<RrhhConceptoPersona> RrhhConceptoPersonas { get; set; }
        public virtual DbSet<RrhhConsolidadoAsistenciaTareo> RrhhConsolidadoAsistenciaTareos { get; set; }
        public virtual DbSet<RrhhConsolidadoAsistencium> RrhhConsolidadoAsistencia { get; set; }
        public virtual DbSet<RrhhContrato> RrhhContratos { get; set; }
        public virtual DbSet<RrhhControlVacacion> RrhhControlVacacions { get; set; }
        public virtual DbSet<RrhhCta5taCat> RrhhCta5taCats { get; set; }
        public virtual DbSet<RrhhCtaCteTrabajador> RrhhCtaCteTrabajadors { get; set; }
        public virtual DbSet<RrhhDerechoHabiente> RrhhDerechoHabientes { get; set; }
        public virtual DbSet<RrhhDetalleHorario> RrhhDetalleHorarios { get; set; }
        public virtual DbSet<RrhhDetalleIncidenciaMemo> RrhhDetalleIncidenciaMemos { get; set; }
        public virtual DbSet<RrhhDetallePlanilla> RrhhDetallePlanillas { get; set; }
        public virtual DbSet<RrhhDetallePrestamo> RrhhDetallePrestamos { get; set; }
        public virtual DbSet<RrhhDistribucionCentrocosto> RrhhDistribucionCentrocostos { get; set; }
        public virtual DbSet<RrhhHorario> RrhhHorarios { get; set; }
        public virtual DbSet<RrhhIncidenciaMemo> RrhhIncidenciaMemos { get; set; }
        public virtual DbSet<RrhhMarcacionAsistencium> RrhhMarcacionAsistencia { get; set; }
        public virtual DbSet<RrhhPermisoSancion> RrhhPermisoSancions { get; set; }
        public virtual DbSet<RrhhPlanilla> RrhhPlanillas { get; set; }
        public virtual DbSet<RrhhPrestamo> RrhhPrestamos { get; set; }
        public virtual DbSet<RrhhRecordVacacional> RrhhRecordVacacionals { get; set; }
        public virtual DbSet<RrhhReferenciaCuentum> RrhhReferenciaCuenta { get; set; }
        public virtual DbSet<RrhhReferenciaTrabajador> RrhhReferenciaTrabajadors { get; set; }
        public virtual DbSet<RrhhSemana> RrhhSemanas { get; set; }
        public virtual DbSet<RrhhUtil> RrhhUtils { get; set; }
        public virtual DbSet<RrhhVigenciaReintegro> RrhhVigenciaReintegros { get; set; }
        public virtual DbSet<ServActividadProyecto> ServActividadProyectos { get; set; }
        public virtual DbSet<ServActividadTecnico> ServActividadTecnicos { get; set; }
        public virtual DbSet<ServContrato> ServContratos { get; set; }
        public virtual DbSet<ServControlCalidadProyecto> ServControlCalidadProyectos { get; set; }
        public virtual DbSet<ServDetalleContrato> ServDetalleContratos { get; set; }
        public virtual DbSet<ServDetallePlantillaCc> ServDetallePlantillaCcs { get; set; }
        public virtual DbSet<ServDetalleServicioTecnico> ServDetalleServicioTecnicos { get; set; }
        public virtual DbSet<ServEquipoMaterialProyecto> ServEquipoMaterialProyectos { get; set; }
        public virtual DbSet<ServItemsProyecto> ServItemsProyectos { get; set; }
        public virtual DbSet<ServPlanFacturacionContrato> ServPlanFacturacionContratos { get; set; }
        public virtual DbSet<ServPlanFacturacionProyecto> ServPlanFacturacionProyectos { get; set; }
        public virtual DbSet<ServPlantillaCc> ServPlantillaCcs { get; set; }
        public virtual DbSet<ServProyecto> ServProyectos { get; set; }
        public virtual DbSet<ServServicioTecnico> ServServicioTecnicos { get; set; }
        public virtual DbSet<ServServicioTecnicoImagen> ServServicioTecnicoImagens { get; set; }
        public virtual DbSet<ServTareaProyecto> ServTareaProyectos { get; set; }
        public virtual DbSet<ServTareo> ServTareos { get; set; }
        public virtual DbSet<ServTransporteProyecto> ServTransporteProyectos { get; set; }
        public virtual DbSet<SiFiltroIndicador> SiFiltroIndicadors { get; set; }
        public virtual DbSet<SiIndicador> SiIndicadors { get; set; }
        public virtual DbSet<SptApp> SptApps { get; set; }
        public virtual DbSet<TPleCompra> TPleCompras { get; set; }
        public virtual DbSet<TPleComprasNd> TPleComprasNds { get; set; }
        public virtual DbSet<TPleComprasV1> TPleComprasV1s { get; set; }
        public virtual DbSet<TbAccesoEmpresa> TbAccesoEmpresas { get; set; }
        public virtual DbSet<TbAccesoOpcion> TbAccesoOpcions { get; set; }
        public virtual DbSet<TbCampoDocumento> TbCampoDocumentos { get; set; }
        public virtual DbSet<TbCatalogo> TbCatalogos { get; set; }
        public virtual DbSet<TbCatalogoDetalle> TbCatalogoDetalles { get; set; }
        public virtual DbSet<TbConfigAdic> TbConfigAdics { get; set; }
        public virtual DbSet<TbConfigDocumento> TbConfigDocumentos { get; set; }
        public virtual DbSet<TbCsrv> TbCsrvs { get; set; }
        public virtual DbSet<TbDocumento> TbDocumentos { get; set; }
        public virtual DbSet<TbDocumentoBkp> TbDocumentoBkps { get; set; }
        public virtual DbSet<TbDocumentoSunat> TbDocumentoSunats { get; set; }
        public virtual DbSet<TbDocumentoSunatBkerror> TbDocumentoSunatBkerrors { get; set; }
        public virtual DbSet<TbEmpresa> TbEmpresas { get; set; }
        public virtual DbSet<TbGrupoUsuario> TbGrupoUsuarios { get; set; }
        public virtual DbSet<TbOpcion> TbOpcions { get; set; }
        public virtual DbSet<TbPassCliente> TbPassClientes { get; set; }
        public virtual DbSet<TbUsuario> TbUsuarios { get; set; }
        public virtual DbSet<TbWsrv> TbWsrvs { get; set; }
        public virtual DbSet<TempLibmayor> TempLibmayors { get; set; }
        public virtual DbSet<TempNumero> TempNumeros { get; set; }
        public virtual DbSet<TempPleVenta> TempPleVentas { get; set; }
        public virtual DbSet<TempPleVentasv1> TempPleVentasv1s { get; set; }
        public virtual DbSet<UtilFiltro> UtilFiltros { get; set; }
        public virtual DbSet<UtilMp> UtilMps { get; set; }
        public virtual DbSet<VwEstructuraRemunerativa> VwEstructuraRemunerativas { get; set; }
        public virtual DbSet<VwFaelBaja> VwFaelBajas { get; set; }
        public virtual DbSet<VwFaelBajaV01> VwFaelBajaV01s { get; set; }
        public virtual DbSet<VwFaelBoletaV02> VwFaelBoletaV02s { get; set; }
        public virtual DbSet<VwFaelBoletaV03> VwFaelBoletaV03s { get; set; }
        public virtual DbSet<VwFaelBoletaV04> VwFaelBoletaV04s { get; set; }
        public virtual DbSet<VwFaelBoletaV04a> VwFaelBoletaV04as { get; set; }
        public virtual DbSet<VwFaelBoletaV04sunat> VwFaelBoletaV04sunats { get; set; }
        public virtual DbSet<VwFaelBoletum> VwFaelBoleta { get; set; }
        public virtual DbSet<VwFaelContingencium> VwFaelContingencia { get; set; }
        public virtual DbSet<VwFaelFactura> VwFaelFacturas { get; set; }
        public virtual DbSet<VwFaelFacturaV02> VwFaelFacturaV02s { get; set; }
        public virtual DbSet<VwFaelFacturaV03> VwFaelFacturaV03s { get; set; }
        public virtual DbSet<VwFaelFacturaV04> VwFaelFacturaV04s { get; set; }
        public virtual DbSet<VwFaelFacturaV04a> VwFaelFacturaV04as { get; set; }
        public virtual DbSet<VwFaelFacturaV04sunat> VwFaelFacturaV04sunats { get; set; }
        public virtual DbSet<VwFaelGr> VwFaelGrs { get; set; }
        public virtual DbSet<VwFaelGrsunat> VwFaelGrsunats { get; set; }
        public virtual DbSet<VwFaelNc> VwFaelNcs { get; set; }
        public virtual DbSet<VwFaelNcBo> VwFaelNcBos { get; set; }
        public virtual DbSet<VwFaelNcBoV02> VwFaelNcBoV02s { get; set; }
        public virtual DbSet<VwFaelNcBoV02a> VwFaelNcBoV02as { get; set; }
        public virtual DbSet<VwFaelNcV02> VwFaelNcV02s { get; set; }
        public virtual DbSet<VwFaelNcV03> VwFaelNcV03s { get; set; }
        public virtual DbSet<VwFaelNcV03a> VwFaelNcV03as { get; set; }
        public virtual DbSet<VwFaelNd> VwFaelNds { get; set; }
        public virtual DbSet<VwFaelNdBo> VwFaelNdBos { get; set; }
        public virtual DbSet<VwFaelNdBoV02> VwFaelNdBoV02s { get; set; }
        public virtual DbSet<VwFaelNdBoV02a> VwFaelNdBoV02as { get; set; }
        public virtual DbSet<VwFaelNdV02> VwFaelNdV02s { get; set; }
        public virtual DbSet<VwFaelNdV03> VwFaelNdV03s { get; set; }
        public virtual DbSet<VwFaelNdV03a> VwFaelNdV03as { get; set; }
        public virtual DbSet<VwFaelPv> VwFaelPvs { get; set; }
        public virtual DbSet<VwFaelResuman> VwFaelResumen { get; set; }
        public virtual DbSet<VwFaelResumen2> VwFaelResumen2s { get; set; }
        public virtual DbSet<VwFaelResumen2V02> VwFaelResumen2V02s { get; set; }
        public virtual DbSet<VwFaelResumen3> VwFaelResumen3s { get; set; }
        public virtual DbSet<VwFaelResumen3V02> VwFaelResumen3V02s { get; set; }
        public virtual DbSet<VwFaelResumenV02> VwFaelResumenV02s { get; set; }
        public virtual DbSet<VwNetoPagar> VwNetoPagars { get; set; }
        public virtual DbSet<VwGetstockAllwarehousePricelist> VwGetstockAllwarehousePricelists { get; set; }
        //        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        //        {
        //            if (!optionsBuilder.IsConfigured)
        //            {
        //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        //                optionsBuilder.UseSqlServer("Server=localhost;Database=dbUSArteusSAC;User Id=sa;Password=Qz0966lb;");
        //            }
        //        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<AcaCronogramaPagoAlumno>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.NumModalidad, e.IdPersona, e.IdProducto, e.Secuencia });

                entity.ToTable("ACA_CRONOGRAMA_PAGO_ALUMNO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.NumModalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MODALIDAD");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImportePagar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGAR");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<AcaMatricula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACA_MATRICULA");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Aula)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AULA");

                entity.Property(e => e.DireccionAlumno)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_ALUMNO");

                entity.Property(e => e.DireccionApoderado)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_APODERADO");

                entity.Property(e => e.DniAlumno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DNI_ALUMNO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.GradoAcademico)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GRADO_ACADEMICO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.NivelAcademico)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NombreAlumno)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ALUMNO");

                entity.Property(e => e.NombreApoderado)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_APODERADO");

                entity.Property(e => e.NumModalidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MODALIDAD");

                entity.Property(e => e.SeccionAcademico)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SECCION_ACADEMICO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<AcaMatriculaCurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACA_MATRICULA_CURSO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.NumCurso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CURSO");

                entity.Property(e => e.NumModalidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MODALIDAD");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<AcaPensionAlumno>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.NumModalidad, e.IdProducto })
                    .HasName("PK_ACA_PENSION_ALUMNO_1");

                entity.ToTable("ACA_PENSION_ALUMNO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.NumModalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MODALIDAD");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Inicial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INICIAL");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Primaria)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRIMARIA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Secundaria)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SECUNDARIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<AfiActivoFijo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AFI_ACTIVO_FIJO");

                entity.Property(e => e.AjusteInflacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUSTE_INFLACION")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MARCA");

                entity.Property(e => e.CdgModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MODELO");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Depreciable)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DEPRECIABLE")
                    .IsFixedLength(true);

                entity.Property(e => e.Depreciacion)
                    .HasColumnType("numeric(6, 4)")
                    .HasColumnName("DEPRECIACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.MesesDepre)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("MESES_DEPRE");

                entity.Property(e => e.MetodoDepreciacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("METODO_DEPRECIACION");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NroSerie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_SERIE");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.SerieGenerada)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.Situacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SITUACION")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<AfiDepreciacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AFI_DEPRECIACION");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CentroCosto)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ImpOtro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_OTRO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NroSerie)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_SERIE");

                entity.Property(e => e.SerieGenerada)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<AleVwPago>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ALE_VW_PAGO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_bco");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.FecVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("fec_venc");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.Imp)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("imp");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumComp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_comp");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("num_cta");

                entity.Property(e => e.NumItm).HasColumnName("num_itm");

                entity.Property(e => e.Numdocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMDOCU");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(2033)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Solicitante)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITANTE");

                entity.Property(e => e.Tdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");
            });

            modelBuilder.Entity<BiAllCotizacionVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_ALL_COTIZACION_VENTA");

                entity.Property(e => e.Al30)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_30");

                entity.Property(e => e.Al50)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_50");

                entity.Property(e => e.Al80)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_80");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoCierre)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_CIERRE");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesCierre)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_CIERRE")
                    .IsFixedLength(true);

                entity.Property(e => e.Motivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VentaRealNetaUsd)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("VENTA_REAL_NETA_USD");
            });

            modelBuilder.Entity<BiAllVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_ALL_VENTA");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VentaRealNetaUsd)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("VENTA_REAL_NETA_USD");
            });

            modelBuilder.Entity<BiCuotaAllVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_CUOTA_ALL_VENTA");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<BiDetalleTabla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_DETALLE_TABLA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia10)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA10");

                entity.Property(e => e.Referencia11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA11");

                entity.Property(e => e.Referencia12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA12");

                entity.Property(e => e.Referencia13)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA13");

                entity.Property(e => e.Referencia14)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA14");

                entity.Property(e => e.Referencia15)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA15");

                entity.Property(e => e.Referencia16)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA16");

                entity.Property(e => e.Referencia17)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA17");

                entity.Property(e => e.Referencia18)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA18");

                entity.Property(e => e.Referencia19)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA19");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia20)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA20");

                entity.Property(e => e.Referencia21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA21");

                entity.Property(e => e.Referencia22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA22");

                entity.Property(e => e.Referencia23)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA23");

                entity.Property(e => e.Referencia24)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA24");

                entity.Property(e => e.Referencia25)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA25");

                entity.Property(e => e.Referencia26)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA26");

                entity.Property(e => e.Referencia27)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA27");

                entity.Property(e => e.Referencia28)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA28");

                entity.Property(e => e.Referencia29)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA29");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia30)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA30");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.Referencia6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA6");

                entity.Property(e => e.Referencia7)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA7");

                entity.Property(e => e.Referencia8)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA8");

                entity.Property(e => e.Referencia9)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA9");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<BiListaCotizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_LISTA_COTIZACION");

                entity.Property(e => e.Al30)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_30");

                entity.Property(e => e.Al50)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_50");

                entity.Property(e => e.Al80)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("AL_80");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CONDICION_PAGO");

                entity.Property(e => e.CdgEstado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.CdgMotivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MOTIVO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Coti)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTI");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCU");

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_VENDEDOR");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Recibido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECIBIDO");

                entity.Property(e => e.Simbolo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SIMBOLO");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VentaRealNetaUsd)
                    .HasColumnType("numeric(33, 19)")
                    .HasColumnName("VENTA_REAL_NETA_USD");
            });

            modelBuilder.Entity<BiListaPedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_LISTA_PEDIDO");

                entity.Property(e => e.Al30).HasColumnName("AL_30");

                entity.Property(e => e.Al50).HasColumnName("AL_50");

                entity.Property(e => e.Al80).HasColumnName("AL_80");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CONDICION_PAGO");

                entity.Property(e => e.CdgEstado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.CdgMotivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MOTIVO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Coti)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTI");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCU");

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_VENDEDOR");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Recibido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECIBIDO");

                entity.Property(e => e.Simbolo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SIMBOLO");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VentaRealNetaUsd)
                    .HasColumnType("numeric(33, 19)")
                    .HasColumnName("VENTA_REAL_NETA_USD");
            });

            modelBuilder.Entity<BiQuery>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_QUERY");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.OrigenBd)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ORIGEN_BD");

                entity.Property(e => e.Vista)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VISTA");
            });

            modelBuilder.Entity<BiTabla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_TABLA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<BivDetalleTabla>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BIV_DETALLE_TABLA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");
            });

            modelBuilder.Entity<Categorium>(entity =>
            {
                entity.HasKey(e => e.IdCategoria);

                entity.Property(e => e.IdCategoria)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModifcacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFCACION");

                entity.Property(e => e.IdParent).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCorto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreImagen)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioMoficacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MOFICACION");
            });

            modelBuilder.Entity<CliCitum>(entity =>
            {
                entity.HasKey(e => e.IdCita);

                entity.ToTable("CLI_CITA");

                entity.Property(e => e.IdCita)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CITA");

                entity.Property(e => e.Detalle)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("DETALLE");

                entity.Property(e => e.Especialidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIALIDAD");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCita)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CITA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaProgramada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROGRAMADA");

                entity.Property(e => e.Horario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HORARIO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Turno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<CliHistoriaPaciente>(entity =>
            {
                entity.HasKey(e => e.IdHistoria);

                entity.ToTable("CLI_HISTORIA_PACIENTE");

                entity.Property(e => e.IdHistoria)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_HISTORIA");

                entity.Property(e => e.DiagnosticoHecha)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("DIAGNOSTICO_HECHA");

                entity.Property(e => e.Especialdad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIALDAD");

                entity.Property(e => e.ExploracionHecha)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("EXPLORACION_HECHA");

                entity.Property(e => e.FechaAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ATENCION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Medico)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("MEDICO");

                entity.Property(e => e.ObservacionHecha)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION_HECHA");

                entity.Property(e => e.TratamientoHecha)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("TRATAMIENTO_HECHA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ComComisionFact>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_COMISION_FACT");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cobranza)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COBRANZA");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionPagar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_PAGAR");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.PorCumplimiento)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_CUMPLIMIENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");

                entity.Property(e => e.ValorNeto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_NETO");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<ConfAlertum>(entity =>
            {
                entity.HasKey(e => e.Alerta);

                entity.ToTable("CONF_ALERTA");

                entity.Property(e => e.Alerta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERTA");

                entity.Property(e => e.NombreAlerta)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ALERTA");
            });

            modelBuilder.Entity<ConfAlu>(entity =>
            {
                entity.HasKey(e => e.Alerta);

                entity.ToTable("CONF_ALUS");

                entity.Property(e => e.Alerta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERTA");

                entity.Property(e => e.AvisarAntes)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("AVISAR_ANTES");

                entity.Property(e => e.AvisarHasta)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("AVISAR_HASTA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Frecuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("FRECUENCIA");

                entity.Property(e => e.Mensaje)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("MENSAJE")
                    .IsFixedLength(true);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Usuarios)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("USUARIOS");
            });

            modelBuilder.Entity<ConfCondicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_CONDICION");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<ConfDetalleCondicion>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Codigo2, e.Moneda, e.Referencia1 });

                entity.ToTable("CONF_DETALLE_CONDICION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Codigo2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO2");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ConfDisenoDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_DISENO_DOCUMENTO");

                entity.Property(e => e.Alineacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ALINEACION")
                    .IsFixedLength(true);

                entity.Property(e => e.Estilo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ESTILO");

                entity.Property(e => e.Fuente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FUENTE");

                entity.Property(e => e.Longitud).HasColumnName("LONGITUD");

                entity.Property(e => e.NombreColumna)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_COLUMNA");

                entity.Property(e => e.NroDecimal).HasColumnName("NRO_DECIMAL");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.SaltoLinea)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SALTO_LINEA")
                    .IsFixedLength(true);

                entity.Property(e => e.Tamano)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TAMANO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<ConfDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_DOCUMENTO");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Comentario)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.NombreEmpresa)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_EMPRESA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia10)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA10");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.Referencia6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA6");

                entity.Property(e => e.Referencia7)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA7");

                entity.Property(e => e.Referencia8)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA8");

                entity.Property(e => e.Referencia9)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA9");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ConfEce>(entity =>
            {
                entity.HasKey(e => e.Nombre);

                entity.ToTable("CONF_ECE");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Referencia1)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ConfGenCod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_GEN_COD");

                entity.Property(e => e.Prefijo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PREFIJO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<ConfParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_PARAMETRO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Ref1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REF1");
            });

            modelBuilder.Entity<ConfQuery>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_QUERY");

                entity.Property(e => e.Consulta)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONSULTA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Modulo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MODULO");
            });

            modelBuilder.Entity<ConfServidorBd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_SERVIDOR_BD");

                entity.Property(e => e.BaseDato)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("BASE_DATO");

                entity.Property(e => e.Contrasena)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONTRASENA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.NomServidor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SERVIDOR");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.RutaBaseDato)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("RUTA_BASE_DATO");

                entity.Property(e => e.Servidor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SERVIDOR");

                entity.Property(e => e.TipoSeguridad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_SEGURIDAD");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ConfSwtMd>(entity =>
            {
                entity.HasKey(e => e.Md);

                entity.ToTable("CONF_SWT_MD");

                entity.Property(e => e.Md)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MD");

                entity.Property(e => e.CntMd)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MD");

                entity.Property(e => e.FcCr)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FC_CR");

                entity.Property(e => e.SwtMd)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("SWT_MD");

                entity.Property(e => e.UsCr)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("US_CR");
            });

            modelBuilder.Entity<ConfUsal>(entity =>
            {
                entity.HasKey(e => e.Alerta);

                entity.ToTable("CONF_USAL");

                entity.Property(e => e.Alerta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERTA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Frecuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("FRECUENCIA");

                entity.Property(e => e.Mensaje)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("MENSAJE")
                    .IsFixedLength(true);

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Usuarios)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("USUARIOS");
            });

            modelBuilder.Entity<ConfUsuarioAlertum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_USUARIO_ALERTA");

                entity.Property(e => e.Alerta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ALERTA");

                entity.Property(e => e.Aprobar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("APROBAR")
                    .IsFixedLength(true);

                entity.Property(e => e.Liberar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIBERAR")
                    .IsFixedLength(true);

                entity.Property(e => e.Rechazar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECHAZAR")
                    .IsFixedLength(true);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");
            });

            modelBuilder.Entity<ConfVigencium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONF_VIGENCIA");

                entity.Property(e => e.CdgParam)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARAM");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaVigencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VIGENCIA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<ContaAnalitica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_ANALITICA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("codigo");

                entity.Property(e => e.CodigoAnalitico)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codigo_analitico");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ContaDetalleModelo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_DETALLE_MODELO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgCcto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_ccto");

                entity.Property(e => e.CdgCope)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cope");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tmov");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tope");

                entity.Property(e => e.Debe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("debe");

                entity.Property(e => e.Haber)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("haber");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_cor");

                entity.Property(e => e.ProFin)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("pro_fin");

                entity.Property(e => e.ProIni)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("pro_ini");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .HasDefaultValueSql("('C')")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");
            });

            modelBuilder.Entity<ContaDetalleVouche>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_DETALLE_VOUCHE");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_vouc")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cct");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tas");

                entity.Property(e => e.CdgTas2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS2");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tdoc");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TOPE");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ext");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_nac");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fec_docu");

                entity.Property(e => e.GlsVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("gls_vouc");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ext");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_nac");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_vouc")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("num_docu");

                entity.Property(e => e.NumReg)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("num_reg");

                entity.Property(e => e.NumSec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_sec");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_vouc");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.SwtAma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ama")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtVouc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_vouc")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("vct_docu");
            });

            modelBuilder.Entity<ContaDlineaEsfi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_DLINEA_ESFI");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgLin)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_lin");

                entity.Property(e => e.CdgRub)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_rub");

                entity.Property(e => e.DesCta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("des_cta");

                entity.Property(e => e.SwtEf)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ef")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContaLineaEsfi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_LINEA_ESFI");

                entity.Property(e => e.CdgLin)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_lin");

                entity.Property(e => e.CdgRub)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_rub");

                entity.Property(e => e.DesLin)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("des_lin");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.OrdLin)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ord_lin");

                entity.Property(e => e.SwtEf)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ef")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFn)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_fn")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtLin)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_lin")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ContaModelo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_MODELO");

                entity.Property(e => e.CdgTas)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tas");

                entity.Property(e => e.CdgTope)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tope");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<ContaPlanCuentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_PLAN_CUENTA");

                entity.Property(e => e.ContaAcrededora)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_acrededora")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_cambio")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCentroCosto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_centro_costo")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCodigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_codigo");

                entity.Property(e => e.ContaCodigoEq)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_codigo_eq");

                entity.Property(e => e.ContaCodigoParent)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_codigo_parent");

                entity.Property(e => e.ContaCtaCierre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_cta_cierre")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCtaCte)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_cta_cte")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCtaDebe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_cta_debe");

                entity.Property(e => e.ContaCtaFlujo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_cta_flujo")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaCtaHaber)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_cta_haber");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("conta_descripcion");

                entity.Property(e => e.ContaDeudora)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_deudora")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaEstado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_estado")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaGanancia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_ganancia");

                entity.Property(e => e.ContaMoneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("conta_moneda");

                entity.Property(e => e.ContaMonetaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_monetaria")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaMonetariaEspecial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_monetaria_especial")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaMovimiento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_movimiento")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaNivelCuenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_nivel_cuenta")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaOficial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_oficial")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaPatrimonial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_patrimonial")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaPerdida)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_perdida");

                entity.Property(e => e.ContaPrcGst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_prc_gst")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalisis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_tipo_analisis")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalitica)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("conta_tipo_analitica");

                entity.Property(e => e.ContaTipoCuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("conta_tipo_cuenta")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ContaProcesoGestion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_PROCESO_GESTION");

                entity.Property(e => e.ContaCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_cc");

                entity.Property(e => e.ContaCodigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_codigo");

                entity.Property(e => e.ContaDebe)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_debe");

                entity.Property(e => e.ContaHaber)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("conta_haber");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<ContaProdCtum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_PROD_CTA");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CuentaCompra)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_compra");

                entity.Property(e => e.CuentaCostoVenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_costo_venta");

                entity.Property(e => e.CuentaDevCompra)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_dev_compra");

                entity.Property(e => e.CuentaDevCon)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_dev_con");

                entity.Property(e => e.CuentaDevOf)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_dev_of");

                entity.Property(e => e.CuentaDevVta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_dev_vta");

                entity.Property(e => e.CuentaExistencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_existencia");

                entity.Property(e => e.CuentaIngrProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_ingr_producto");

                entity.Property(e => e.CuentaProcProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_proc_producto");

                entity.Property(e => e.CuentaPuente)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_puente");

                entity.Property(e => e.CuentaRecibir)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_recibir");

                entity.Property(e => e.CuentaSalCon)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_sal_con");

                entity.Property(e => e.CuentaSalOf)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_sal_of");

                entity.Property(e => e.CuentaVarExi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_var_exi");

                entity.Property(e => e.CuentaVenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_venta");

                entity.Property(e => e.CuentaVtaDiferida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cuenta_vta_diferida");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_producto");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<ContaRubroEsfi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_RUBRO_ESFI");

                entity.Property(e => e.CdgRub)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_rub");

                entity.Property(e => e.DesRub)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("des_rub");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.FtrRub)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ftr_rub");

                entity.Property(e => e.OrdRub)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ord_rub");

                entity.Property(e => e.SwtAp)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("swt_ap");

                entity.Property(e => e.SwtEf)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ef")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFn)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_fn")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtRub)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_rub")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ContaSaldo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOS");

                entity.Property(e => e.AnoSld)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.Compra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("compra");

                entity.Property(e => e.DebOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ofi");

                entity.Property(e => e.DebPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_pat");

                entity.Property(e => e.DebSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_sld");

                entity.Property(e => e.HabOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ofi");

                entity.Property(e => e.HabPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_pat");

                entity.Property(e => e.HabSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_sld");

                entity.Property(e => e.MesSld)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("venta");
            });

            modelBuilder.Entity<ContaSaldosa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSA");

                entity.Property(e => e.AnoSld)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgCct)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cct");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.Compra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("compra");

                entity.Property(e => e.DebOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ofi");

                entity.Property(e => e.DebPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_pat");

                entity.Property(e => e.DebSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_sld");

                entity.Property(e => e.HabOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ofi");

                entity.Property(e => e.HabPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_pat");

                entity.Property(e => e.HabSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_sld");

                entity.Property(e => e.MesSld)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("venta");
            });

            modelBuilder.Entity<ContaSaldosag>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSAG");

                entity.Property(e => e.AnoSld)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgCct)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cct");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.Compra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("compra");

                entity.Property(e => e.DebOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ofi");

                entity.Property(e => e.DebPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_pat");

                entity.Property(e => e.DebSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_sld");

                entity.Property(e => e.HabOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ofi");

                entity.Property(e => e.HabPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_pat");

                entity.Property(e => e.HabSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_sld");

                entity.Property(e => e.MesSld)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("venta");
            });

            modelBuilder.Entity<ContaSaldoscg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSCG");

                entity.Property(e => e.AnoSld)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.Compra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("compra");

                entity.Property(e => e.DebOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ofi");

                entity.Property(e => e.DebPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_pat");

                entity.Property(e => e.DebSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_sld");

                entity.Property(e => e.HabOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ofi");

                entity.Property(e => e.HabPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_pat");

                entity.Property(e => e.HabSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_sld");

                entity.Property(e => e.MesSld)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("venta");
            });

            modelBuilder.Entity<ContaSaldosd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSD");

                entity.Property(e => e.AnoSld)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgCct)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cct");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tdoc");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ext");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_nac");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ext");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_nac");

                entity.Property(e => e.MesSld)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_docu");

                entity.Property(e => e.SwtEst)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_est")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");
            });

            modelBuilder.Entity<ContaSaldosdg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSDG");

                entity.Property(e => e.AnoSld)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgCct)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cct");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgTana)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tdoc");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ext");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_nac");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ext");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_nac");

                entity.Property(e => e.MesSld)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("num_docu");

                entity.Property(e => e.SwtEst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_est")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");
            });

            modelBuilder.Entity<ContaSaldosg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_SALDOSG");

                entity.Property(e => e.AnoSld)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cta");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.Compra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("compra");

                entity.Property(e => e.DebOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_ofi");

                entity.Property(e => e.DebPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_pat");

                entity.Property(e => e.DebSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_sld");

                entity.Property(e => e.HabOfi)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_ofi");

                entity.Property(e => e.HabPat)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_pat");

                entity.Property(e => e.HabSld)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_sld");

                entity.Property(e => e.MesSld)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_sld")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("venta");
            });

            modelBuilder.Entity<ContaTipoCambio>(entity =>
            {
                entity.HasKey(e => new { e.Moneda, e.FechaRegistro });

                entity.ToTable("CONTA_TIPO_CAMBIO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorComercial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMERCIAL");

                entity.Property(e => e.ValorCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMPRA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<ContaTipoOperacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_TIPO_OPERACION");

                entity.Property(e => e.CamCope)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("cam_cope");

                entity.Property(e => e.Cambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cambio")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCope)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_cope");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tdoc");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tope");

                entity.Property(e => e.CndCope)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("cnd_cope");

                entity.Property(e => e.DesCope)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("des_cope");

                entity.Property(e => e.FecCope)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fec_cope");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("grupo");

                entity.Property(e => e.MonCope)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("mon_cope");

                entity.Property(e => e.PrdCope)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("prd_cope");

                entity.Property(e => e.SwtCope)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_cope")
                    .IsFixedLength(true);

                entity.Property(e => e.TabCope)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tab_cope");

                entity.Property(e => e.TmvCope)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tmv_cope");
            });

            modelBuilder.Entity<ContaVouche>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTA_VOUCHE");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano_vouc")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tas");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tope");

                entity.Property(e => e.DebText)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_text");

                entity.Property(e => e.DebTnac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("deb_tnac");

                entity.Property(e => e.DesVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("des_vouc");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("fec_vouc");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.HabText)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_text");

                entity.Property(e => e.HabTnac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("hab_tnac");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes_vouc")
                    .IsFixedLength(true);

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_vouc");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ofi")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_pat")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPre)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_pre")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtVouc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_vouc")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ContavwBalCmpCtum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_BAL_CMP_CTA");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.ContaMovimiento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_MOVIMIENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalisis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_ANALISIS")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoCuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_CUENTA")
                    .IsFixedLength(true);

                entity.Property(e => e.DebeAd)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_AD");

                entity.Property(e => e.DebeAs)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_AS");

                entity.Property(e => e.DebeD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_D");

                entity.Property(e => e.DebeS)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_S");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VOUC");

                entity.Property(e => e.HaberAd)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_AD");

                entity.Property(e => e.HaberAs)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_AS");

                entity.Property(e => e.HaberD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_D");

                entity.Property(e => e.HaberS)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_S");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI");

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT");

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("VCT_DOCU");
            });

            modelBuilder.Entity<ContavwCierreAnual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_CIERRE_ANUAL");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.ContaMonetaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_MONETARIA")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaMonetariaEspecial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("conta_monetaria_especial")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaMovimiento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_MOVIMIENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalisis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_ANALISIS")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalitica)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_ANALITICA");

                entity.Property(e => e.ContaTipoCuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_CUENTA")
                    .IsFixedLength(true);

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VOUC");

                entity.Property(e => e.GlsVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLS_VOUC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumReg)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG");

                entity.Property(e => e.SwtAma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_ama")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("VCT_DOCU");
            });

            modelBuilder.Entity<ContavwCierreAnual2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_CIERRE_ANUAL_2");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.ContaMonetaria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_MONETARIA")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaMovimiento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_MOVIMIENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalisis)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_ANALISIS")
                    .IsFixedLength(true);

                entity.Property(e => e.ContaTipoAnalitica)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_ANALITICA");

                entity.Property(e => e.ContaTipoCuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_TIPO_CUENTA")
                    .IsFixedLength(true);

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VOUC");

                entity.Property(e => e.GlsVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLS_VOUC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumReg)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG");

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("VCT_DOCU");
            });

            modelBuilder.Entity<ContavwDetVouche>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CcNombre)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CC_NOMBRE");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwDetVoucheCc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CC");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CcNombre)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CC_NOMBRE");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwDetVoucheCc2At>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CC2_AT");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");
            });

            modelBuilder.Entity<ContavwDetVoucheCcAt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CC_AT");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CcNombre)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CC_NOMBRE");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwDetVoucheCtag>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CTAG");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwDetVoucheCtao>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CTAO");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwDetVoucheCtum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_DET_VOUCHE_CTA");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.DebExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_EXT");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.HabExt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_EXT");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ContavwLibroDiario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_LIBRO_DIARIO");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgLibro)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CDG_LIBRO");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.CdgTas2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS2");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TOPE");

                entity.Property(e => e.ContaCodigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_CODIGO");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VOUC");

                entity.Property(e => e.GlsVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLS_VOUC");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumReg)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG");

                entity.Property(e => e.NumReg2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG2");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("VCT_DOCU");
            });

            modelBuilder.Entity<ContavwLibroMayor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CONTAVW_LIBRO_MAYOR");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgLibro)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CDG_LIBRO");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTas)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS");

                entity.Property(e => e.CdgTas2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TAS2");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTope)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TOPE");

                entity.Property(e => e.ContaCodigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_CODIGO");

                entity.Property(e => e.ContaDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTA_DESCRIPCION");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.DebNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEB_NAC");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VOUC");

                entity.Property(e => e.GlsVouc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLS_VOUC");

                entity.Property(e => e.HabNac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HAB_NAC");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumReg)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG");

                entity.Property(e => e.NumReg2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REG2");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtOfi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OFI")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAT")
                    .IsFixedLength(true);

                entity.Property(e => e.VctDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("VCT_DOCU");
            });

            modelBuilder.Entity<CrmAnexoSeguimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CRM_ANEXO_SEGUIMIENTO");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdSeguimiento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_SEGUIMIENTO");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<CrmAplazarAviso>(entity =>
            {
                entity.HasKey(e => e.IdAplazar);

                entity.ToTable("CRM_APLAZAR_AVISO");

                entity.Property(e => e.IdAplazar)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_APLAZAR");

                entity.Property(e => e.Asunto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ASUNTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAviso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AVISO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraAviso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_AVISO")
                    .IsFixedLength(true);

                entity.Property(e => e.IdAviso)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_AVISO");

                entity.Property(e => e.Tiempo)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("TIEMPO");

                entity.Property(e => e.UnidadTiempo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_TIEMPO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<CrmAviso>(entity =>
            {
                entity.HasKey(e => e.IdAviso);

                entity.ToTable("CRM_AVISO");

                entity.Property(e => e.IdAviso)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_AVISO");

                entity.Property(e => e.Asunto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ASUNTO");

                entity.Property(e => e.DeUsuario)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DE_USUARIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAviso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AVISO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraAviso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_AVISO")
                    .IsFixedLength(true);

                entity.Property(e => e.IdSeguimiento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_SEGUIMIENTO");

                entity.Property(e => e.ParaUsuarioGrupo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PARA_USUARIO_GRUPO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoEvento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_EVENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<CrmCampana>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CRM_CAMPANA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<CrmCampanaCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CRM_CAMPANA_CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdLista)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_LISTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<CrmListaMarketing>(entity =>
            {
                entity.HasKey(e => e.IdLista);

                entity.ToTable("CRM_LISTA_MARKETING");

                entity.Property(e => e.IdLista)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_LISTA");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<CrmListaMktIntegrante>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CRM_LISTA_MKT_INTEGRANTE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdLista)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_LISTA");

                entity.Property(e => e.IdProspecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROSPECTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<CrmSeguimiento>(entity =>
            {
                entity.HasKey(e => e.IdSeguimiento);

                entity.ToTable("CRM_SEGUIMIENTO");

                entity.Property(e => e.IdSeguimiento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SEGUIMIENTO");

                entity.Property(e => e.AnoCierre)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_CIERRE");

                entity.Property(e => e.Asunto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ASUNTO");

                entity.Property(e => e.CodigoCampana)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAMPANA");

                entity.Property(e => e.Competencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COMPETENCIA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EtapaVenta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ETAPA_VENTA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaFinalizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FINALIZACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRef1)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REF1");

                entity.Property(e => e.HoraFin)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_FIN")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraFinalizacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_FINALIZACION")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraInicio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_INICIO")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraRef1)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_REF1")
                    .IsFixedLength(true);

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdClienteCampana)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE_CAMPANA");

                entity.Property(e => e.IdMainParent)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_MAIN_PARENT");

                entity.Property(e => e.IdParent)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PARENT");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ImporteEstimado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_ESTIMADO");

                entity.Property(e => e.Lugar)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR");

                entity.Property(e => e.MesCierre)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CIERRE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoPerdida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_PERDIDA");

                entity.Property(e => e.Nota)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.NotaPerdida)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_PERDIDA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.Prioridad)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PRIORIDAD");

                entity.Property(e => e.Procedencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROCEDENCIA");

                entity.Property(e => e.Ref1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REF1");

                entity.Property(e => e.Sitio)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SITIO");

                entity.Property(e => e.Situacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SITUACION");

                entity.Property(e => e.Solucion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SOLUCION");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.Tecnico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TECNICO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoEvento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_EVENTO");

                entity.Property(e => e.TipoSolucion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_SOLUCION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioFinalizacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_FINALIZACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.UsuarioPara)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_PARA");

                entity.Property(e => e.UsuarioRef1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_REF1");
            });

            modelBuilder.Entity<FeDetalleResumenBaja>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.TipoDocu, e.NumeDocu, e.NumItem });

                entity.ToTable("FE_DETALLE_RESUMEN_BAJA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumItem)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NUM_ITEM");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Numdoc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMDOC");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.Tdoc)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<FeError>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FE_ERROR");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Mensaje)
                    .HasMaxLength(255)
                    .HasColumnName("MENSAJE");
            });

            modelBuilder.Entity<FeResumenBaja>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.TipoDocu, e.NumeDocu });

                entity.ToTable("FE_RESUMEN_BAJA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.EstReg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EST_REG")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaEnvio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVIO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioEnvio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_ENVIO");
            });

            modelBuilder.Entity<GetDataRequisicione>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("GET_DATA_REQUISICIONES");

                entity.Property(e => e.Afecto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano)
                    .HasMaxLength(30)
                    .HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CentroCosto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Concepto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.EstadoPago)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_PAGO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IgvDolar)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("IGV_DOLAR");

                entity.Property(e => e.IgvSoles)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("IGV_SOLES");

                entity.Property(e => e.Imes).HasColumnName("IMES");

                entity.Property(e => e.ImpDolar)
                    .HasColumnType("numeric(33, 14)")
                    .HasColumnName("IMP_DOLAR");

                entity.Property(e => e.ImpSoles)
                    .HasColumnType("numeric(33, 14)")
                    .HasColumnName("IMP_SOLES");

                entity.Property(e => e.IncluyeIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INCLUYE_IGV");

                entity.Property(e => e.Mes)
                    .HasMaxLength(30)
                    .HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumGasto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_GASTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Persona)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioDolar)
                    .HasColumnType("numeric(30, 16)")
                    .HasColumnName("PRECIO_DOLAR");

                entity.Property(e => e.PrecioSoles)
                    .HasColumnType("numeric(30, 16)")
                    .HasColumnName("PRECIO_SOLES");

                entity.Property(e => e.StotalDolar)
                    .HasColumnType("numeric(38, 15)")
                    .HasColumnName("STOTAL_DOLAR");

                entity.Property(e => e.StotalSoles)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("STOTAL_SOLES");

                entity.Property(e => e.SubtotalDolar)
                    .HasColumnType("numeric(38, 17)")
                    .HasColumnName("SUBTOTAL_DOLAR");

                entity.Property(e => e.SubtotalSoles)
                    .HasColumnType("numeric(38, 17)")
                    .HasColumnName("SUBTOTAL_SOLES");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoConcepto)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CONCEPTO");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.TotalDolar)
                    .HasColumnType("numeric(38, 15)")
                    .HasColumnName("TOTAL_DOLAR");

                entity.Property(e => e.TotalSoles)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("TOTAL_SOLES");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<Hoja1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Hoja1");

                entity.Property(e => e.CodAlm)
                    .HasMaxLength(10)
                    .HasColumnName("COD_ALM")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<LogAplicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LOG_APLICACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Nota)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<LogCambioCampo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LOG_CAMBIO_CAMPOS");

                entity.Property(e => e.Campo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CAMPO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdItem)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_ITEM");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tabla)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TABLA");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<Loteserie>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("loteserie");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CodAlm)
                    .HasMaxLength(225)
                    .HasColumnName("COD_ALM");

                entity.Property(e => e.CodArt)
                    .HasMaxLength(225)
                    .HasColumnName("COD_ART");

                entity.Property(e => e.Lote)
                    .HasMaxLength(225)
                    .HasColumnName("LOTE");

                entity.Property(e => e.NroSerLote)
                    .HasMaxLength(225)
                    .HasColumnName("NRO_SER_LOTE");

                entity.Property(e => e.TpTransac)
                    .HasMaxLength(225)
                    .HasColumnName("TP_TRANSAC");
            });

            modelBuilder.Entity<OpeAlmacenzona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ALMACENZONA");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.CodigoZona)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ZONA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreZona)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ZONA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeAnexoCotizacion>(entity =>
            {
                entity.HasKey(e => new { e.IdCotizacion, e.Secuencia });

                entity.ToTable("OPE_ANEXO_COTIZACION");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.HasOne(d => d.IdCotizacionNavigation)
                    .WithMany(p => p.OpeAnexoCotizacions)
                    .HasForeignKey(d => d.IdCotizacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_ANEXO_COTIZACION_OPE_COTIZACION_VENTA");
            });

            modelBuilder.Entity<OpeAnexoCotizacionc>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Secuencia });

                entity.ToTable("OPE_ANEXO_COTIZACIONC");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeAnexoDocumentoCompra>(entity =>
            {
                entity.HasKey(e => new { e.IdDocumento, e.Secuencia });

                entity.ToTable("OPE_ANEXO_DOCUMENTO_COMPRA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Extension)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.Ruta)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("RUTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeAnexoPedido>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.Secuencia });

                entity.ToTable("OPE_ANEXO_PEDIDO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.HasOne(d => d.IdPedidoNavigation)
                    .WithMany(p => p.OpeAnexoPedidos)
                    .HasForeignKey(d => d.IdPedido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_ANEXO_PEDIDO_OPE_PEDIDO");
            });

            modelBuilder.Entity<OpeAnticipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ANTICIPO");

                entity.Property(e => e.NumeroDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU");

                entity.Property(e => e.NumeroDocu2)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU2");

                entity.Property(e => e.RucCli)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CLI");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoDocumento2)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO2");

                entity.Property(e => e.ValorAplicado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_APLICADO");

                entity.Property(e => e.ValorOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_ORIGINAL");
            });

            modelBuilder.Entity<OpeAnticipop>(entity =>
            {
                entity.HasKey(e => new { e.TipoDocumento, e.NumeroDocu, e.TipoDocumento2, e.NumeroDocu2, e.RucPrv })
                    .HasName("PK__OPE_ANTI__EDCAB248A7097F2D");

                entity.ToTable("OPE_ANTICIPOP");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.NumeroDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU");

                entity.Property(e => e.TipoDocumento2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO2");

                entity.Property(e => e.NumeroDocu2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU2");

                entity.Property(e => e.RucPrv)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.ValorAplicado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_APLICADO");

                entity.Property(e => e.ValorOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_ORIGINAL");
            });

            modelBuilder.Entity<OpeAperturaCaja>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.CodigoCaja, e.FechaApertura });

                entity.ToTable("OPE_APERTURA_CAJA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoCaja)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJA");

                entity.Property(e => e.FechaApertura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APERTURA");

                entity.Property(e => e.CdgLista)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_LISTA");

                entity.Property(e => e.CodigoCajero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJERO");

                entity.Property(e => e.CodigoImpresora)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_IMPRESORA");

                entity.Property(e => e.CodigoTurno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TURNO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO2")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraApertura)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("HORA_APERTURA")
                    .IsFixedLength(true);

                entity.Property(e => e.ImporteApertura)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_APERTURA");

                entity.Property(e => e.ImporteAperturad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_APERTURAD");

                entity.Property(e => e.ImporteCierre)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRE");

                entity.Property(e => e.ImporteCierreOtro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRE_OTRO");

                entity.Property(e => e.ImporteCierreOtrod)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRE_OTROD");

                entity.Property(e => e.ImporteCierreTarj)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRE_TARJ");

                entity.Property(e => e.ImporteCierreTarjd)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRE_TARJD");

                entity.Property(e => e.ImporteCierred)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_CIERRED");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeroMaquina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_MAQUINA");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.NumeroSerieFact)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE_FACT");

                entity.Property(e => e.RutaImpresora)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_IMPRESORA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vendedores)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDORES");
            });

            modelBuilder.Entity<OpeArchivoPresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ARCHIVO_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto).HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.ImagenRef)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_REF");
            });

            modelBuilder.Entity<OpeArqueoCaja>(entity =>
            {
                entity.HasKey(e => e.IdArqueo);

                entity.ToTable("OPE_ARQUEO_CAJA");

                entity.Property(e => e.IdArqueo)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_ARQUEO");

                entity.Property(e => e.Billete10).HasColumnName("BILLETE10");

                entity.Property(e => e.Billete100).HasColumnName("BILLETE100");

                entity.Property(e => e.Billete20).HasColumnName("BILLETE20");

                entity.Property(e => e.Billete200).HasColumnName("BILLETE200");

                entity.Property(e => e.Billete50).HasColumnName("BILLETE50");

                entity.Property(e => e.CobradoPorCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COBRADO_POR_CREDITO");

                entity.Property(e => e.CodigoCajero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJERO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Contado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CONTADO");

                entity.Property(e => e.Credito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CREDITO");

                entity.Property(e => e.Efectivo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("EFECTIVO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaArqueo)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ARQUEO");

                entity.Property(e => e.FechaCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Maquina)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MAQUINA");

                entity.Property(e => e.Mastercard)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MASTERCARD");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Moneda001).HasColumnName("MONEDA001");

                entity.Property(e => e.Moneda005).HasColumnName("MONEDA005");

                entity.Property(e => e.Moneda010).HasColumnName("MONEDA010");

                entity.Property(e => e.Moneda05).HasColumnName("MONEDA05");

                entity.Property(e => e.Moneda1).HasColumnName("MONEDA1");

                entity.Property(e => e.Moneda5).HasColumnName("MONEDA5");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Otros)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("OTROS");

                entity.Property(e => e.Ripley)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RIPLEY");

                entity.Property(e => e.Saga)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SAGA");

                entity.Property(e => e.SaldoInicial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO_INICIAL");

                entity.Property(e => e.TotalBillete)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_BILLETE");

                entity.Property(e => e.TotalIngreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_INGRESO");

                entity.Property(e => e.TotalMoneda)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_MONEDA");

                entity.Property(e => e.TotalRetiro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_RETIRO");

                entity.Property(e => e.TotalSistema)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_SISTEMA");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Visa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VISA");
            });

            modelBuilder.Entity<OpeAsignacionActivoFijo>(entity =>
            {
                entity.HasKey(e => e.IdAsignacion);

                entity.ToTable("OPE_ASIGNACION_ACTIVO_FIJO");

                entity.Property(e => e.IdAsignacion).HasColumnName("ID_ASIGNACION");

                entity.Property(e => e.DafId)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("daf_id");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");

                entity.HasOne(d => d.Daf)
                    .WithMany(p => p.OpeAsignacionActivoFijos)
                    .HasForeignKey(d => d.DafId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_ASIGNACION_ACTIVO_FIJO_OPE_DETALLE_ACTIVO_FIJO");
            });

            modelBuilder.Entity<OpeAzfilacolumna>(entity =>
            {
                entity.HasKey(e => new { e.CodigoSucursal, e.CodigoZona, e.Fila, e.Columna });

                entity.ToTable("OPE_AZFILACOLUMNA");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.CodigoZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ZONA");

                entity.Property(e => e.Fila)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FILA");

                entity.Property(e => e.Columna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COLUMNA");

                entity.Property(e => e.Area)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("AREA");

                entity.Property(e => e.CantItems)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("CANT_ITEMS")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeAzfilacolumnaprod>(entity =>
            {
                entity.HasKey(e => new { e.CodigoSucursal, e.CodigoZona, e.Fila, e.Columna, e.IdProducto });

                entity.ToTable("OPE_AZFILACOLUMNAPROD");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.CodigoZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ZONA");

                entity.Property(e => e.Fila)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FILA");

                entity.Property(e => e.Columna)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COLUMNA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeBloqueoDesblo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_BLOQUEO_DESBLO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.Habitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HABITACION");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeCaja>(entity =>
            {
                entity.HasKey(e => new { e.CdgArea, e.NumCaja });

                entity.ToTable("OPE_CAJA");

                entity.Property(e => e.CdgArea)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AREA");

                entity.Property(e => e.NumCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.FecCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ImpCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CAJA");

                entity.Property(e => e.MaxCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MAX_CAJA");

                entity.Property(e => e.NumCheq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.SldCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SLD_CAJA");

                entity.Property(e => e.SwtCaja)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CAJA")
                    .IsFixedLength(true);

                entity.Property(e => e.TotCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOT_CAJA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCaja2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CAJA2");

                entity.Property(e => e.CdgArea)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AREA");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.FecCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ImpCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CAJA");

                entity.Property(e => e.MaxCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MAX_CAJA");

                entity.Property(e => e.NumCaja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.NumCheq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCorcaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CORCAJA");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.SldCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SLD_CAJA");

                entity.Property(e => e.SwtCaja)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CAJA")
                    .IsFixedLength(true);

                entity.Property(e => e.TotCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOT_CAJA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCajab>(entity =>
            {
                entity.HasKey(e => e.IdMovimiento);

                entity.ToTable("OPE_CAJAB");

                entity.Property(e => e.IdMovimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_MOVIMIENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaTc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_TC");

                entity.Property(e => e.GiraDetalle)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GIRA_DETALLE");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.RefChop)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REF_CHOP");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCarpetaImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CARPETA_IMPORTACION");

                entity.Property(e => e.CiCodigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ci_codigo");

                entity.Property(e => e.CiNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ci_nombre");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .HasDefaultValueSql("('A')")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<OpeCheckinout>(entity =>
            {
                entity.HasKey(e => e.IdCheckinout);

                entity.ToTable("OPE_CHECKINOUT");

                entity.Property(e => e.IdCheckinout)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CHECKINOUT");

                entity.Property(e => e.Adulto)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ADULTO");

                entity.Property(e => e.Bebe)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("BEBE");

                entity.Property(e => e.CantNoches)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CANT_NOCHES");

                entity.Property(e => e.Comida)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COMIDA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTRADA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaSalidaPrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SALIDA_PREVISTA");

                entity.Property(e => e.Habitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HABITACION");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraSalida)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_SALIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdAgencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_AGENCIA");

                entity.Property(e => e.IdCheckinoutParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CHECKINOUT_PARENT");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdClienteFacturar)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE_FACTURAR");

                entity.Property(e => e.IdEmpresa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_EMPRESA");

                entity.Property(e => e.IdReserva)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_RESERVA");

                entity.Property(e => e.IdTourOperador)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TOUR_OPERADOR");

                entity.Property(e => e.Nino)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("NINO");

                entity.Property(e => e.NoPresentado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NO_PRESENTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Regimen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN");

                entity.Property(e => e.SwtCheckinout)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CHECKINOUT")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtTipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_TIPO_HABITACION")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_HABITACION");

                entity.Property(e => e.TipoTarifa)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TARIFA");

                entity.Property(e => e.Turno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCierreDiarioCaja>(entity =>
            {
                entity.HasKey(e => new { e.CodigoSucursal, e.FechaCaja, e.CdgCaja });

                entity.ToTable("OPE_CIERRE_DIARIO_CAJA");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CAJA");

                entity.Property(e => e.CdgCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CAJA")
                    .HasDefaultValueSql("('0001')");

                entity.Property(e => e.CodigoCajero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJERO");

                entity.Property(e => e.CodigoMoneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MONEDA");

                entity.Property(e => e.CodigoTurno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TURNO");

                entity.Property(e => e.Egreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("EGRESO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("('A')")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.SaldoAnterior)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO_ANTERIOR");

                entity.Property(e => e.SaldoFinal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO_FINAL");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCierreMe>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.CodigoModulo, e.Ano, e.Mes, e.FechaCierre, e.Tipo });

                entity.ToTable("OPE_CIERRE_MES");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoModulo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MODULO");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Mes)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MES");

                entity.Property(e => e.FechaCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CIERRE");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IMes).HasColumnName("iMes");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeClienteProducto>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.IdPersona, e.IdProducto });

                entity.ToTable("OPE_CLIENTE_PRODUCTO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FlagP1)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_P1")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.FlagP2)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_P2")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.FlagP3)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_P3")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.FlagP4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_P4")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeClistaPrecio>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("OPE_CLISTA_PRECIO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBase)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BASE");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.GrupoUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_USUARIO");

                entity.Property(e => e.MetodoRedondeo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("METODO_REDONDEO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.SwtWeb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WEB")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CLIENTE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCofprProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COFPR_PRODUCTO");

                entity.Property(e => e.CdgListaPrecio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_LISTA_PRECIO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeComisionContrato>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.CdgCargo });

                entity.ToTable("OPE_COMISION_CONTRATO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.CdgCargo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CARGO");

                entity.Property(e => e.FechaCalculo)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CALCULO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImporteComision)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_COMISION");

                entity.Property(e => e.Porcentaje1)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORCENTAJE1");

                entity.Property(e => e.Porcentaje2)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORCENTAJE2");

                entity.Property(e => e.TotalContrato)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_CONTRATO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeComisionVentaPersona>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.IdPersona, e.CdgCargo });

                entity.ToTable("OPE_COMISION_VENTA_PERSONA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.CdgCargo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CARGO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeCompElec>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COMP_ELEC");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODI_EMPR");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Vventa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VVENTA");
            });

            modelBuilder.Entity<OpeCompromiso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COMPROMISO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ano")
                    .IsFixedLength(true);

                entity.Property(e => e.Beneficiario)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("beneficiario");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_bco");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_mon");

                entity.Property(e => e.CdgPla)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_pla");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tmov");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fec_docu");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.FechaPlazo)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_plazo");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_vencimiento");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("importe");

                entity.Property(e => e.Mes)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("mes")
                    .IsFixedLength(true);

                entity.Property(e => e.NumComp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_comp");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("num_cta");

                entity.Property(e => e.Obs)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("obs");

                entity.Property(e => e.SwtEst)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_est")
                    .IsFixedLength(true);

                entity.Property(e => e.Tea)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tea");

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeConsumo>(entity =>
            {
                entity.HasKey(e => e.IdConsumo);

                entity.ToTable("OPE_CONSUMO");

                entity.Property(e => e.IdConsumo).HasColumnName("ID_CONSUMO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CONTRATO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadG)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_G");

                entity.Property(e => e.CantidadOt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_OT");

                entity.Property(e => e.CantidadRp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_RP");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Factura)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FACTURA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaFinG)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_G");

                entity.Property(e => e.FechaFinOt)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_OT");

                entity.Property(e => e.FechaFinRp)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_RP");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaInicioG)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_G");

                entity.Property(e => e.FechaInicioOt)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_OT");

                entity.Property(e => e.FechaInicioRp)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_RP");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdPersonaArrendador)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA_ARRENDADOR");

                entity.Property(e => e.IdPersonaCopropietario)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA_COPROPIETARIO");

                entity.Property(e => e.IdPersonaGarante)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA_GARANTE");

                entity.Property(e => e.IdPersonaOtro)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA_OTRO");

                entity.Property(e => e.IdPersonaResponsablePago)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA_RESPONSABLE_PAGO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteG)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_G");

                entity.Property(e => e.ImporteOt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_OT");

                entity.Property(e => e.ImporteRp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_RP");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Operador)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OPERADOR");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioG)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_G");

                entity.Property(e => e.PrecioOt)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_OT");

                entity.Property(e => e.PrecioRp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_RP");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeContratoCuotaParqueo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CONTRATO_CUOTA_PARQUEO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeContratoParqueo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CONTRATO_PARQUEO");

                entity.Property(e => e.AnoInicio)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_INICIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraFin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_FIN");

                entity.Property(e => e.HoraInicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_INICIO");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteProrrateo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PRORRATEO");

                entity.Property(e => e.MesInicio)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_INICIO");

                entity.Property(e => e.NroCuota)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_CUOTA");

                entity.Property(e => e.NumEspacio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_ESPACIO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.TipoTarifa)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_TARIFA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoVechiculo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VECHICULO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeContratoPlacaParqueo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CONTRATO_PLACA_PARQUEO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.NumeroPlaca)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PLACA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeControlGarantium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CONTROL_GARANTIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdCliente).HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdGuia).HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Nota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Recordatorio).HasColumnName("RECORDATORIO");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieReem)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_REEM");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeControlMaquina>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.Numero, e.Fecha, e.HoraInicio, e.HoraFin });

                entity.ToTable("OPE_CONTROL_MAQUINA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Numero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.HoraInicio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_INICIO")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraFin)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_FIN")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeConvenioLab>(entity =>
            {
                entity.HasKey(e => e.IdConvenio);

                entity.ToTable("OPE_CONVENIO_LAB");

                entity.Property(e => e.IdConvenio)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CONVENIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.NumGarantia)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_GARANTIA");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeConvenioPrueba>(entity =>
            {
                entity.HasKey(e => new { e.IdConvenio, e.IdProducto, e.NumSec });

                entity.ToTable("OPE_CONVENIO_PRUEBA");

                entity.Property(e => e.IdConvenio)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONVENIO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NumSec)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_SEC");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ATENCION");

                entity.Property(e => e.IdMedico)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_MEDICO");
            });

            modelBuilder.Entity<OpeCorrelativo>(entity =>
            {
                entity.HasKey(e => new { e.TipoDocumento, e.Numero });

                entity.ToTable("OPE_CORRELATIVO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCosteoImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COSTEO_IMPORTACION");

                entity.Property(e => e.CdgCosteo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdg_costeo");

                entity.Property(e => e.CiAno)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ci_ano");

                entity.Property(e => e.CiCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_cantidad");

                entity.Property(e => e.CiCostoTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_costo_total");

                entity.Property(e => e.CiCostoTotalD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_costo_total_d");

                entity.Property(e => e.CiEstado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ci_estado")
                    .HasDefaultValueSql("('0')")
                    .IsFixedLength(true);

                entity.Property(e => e.CiFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("ci_fecha");

                entity.Property(e => e.CiFileImportacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ci_file_importacion");

                entity.Property(e => e.CiIncrementoReal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_incremento_real");

                entity.Property(e => e.CiIncrementoRealD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_incremento_real_d");

                entity.Property(e => e.CiMes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("ci_mes");

                entity.Property(e => e.CiNumeroIngreso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ci_numero_ingreso");

                entity.Property(e => e.CiPorcentajeFob)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("ci_porcentaje_fob");

                entity.Property(e => e.CiPrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_precio_compra");

                entity.Property(e => e.CiPrecioEstandar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_precio_estandar");

                entity.Property(e => e.CiPrecioReal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_precio_real");

                entity.Property(e => e.CiPrecioRealD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ci_precio_real_d");

                entity.Property(e => e.CiRatioImportacion)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("ci_ratio_importacion");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeCostoProm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COSTO_PROM");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Costof)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTOF");

                entity.Property(e => e.Costol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTOL");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO");
            });

            modelBuilder.Entity<OpeCostoRealOf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_COSTO_REAL_OF");

                entity.Property(e => e.Anomes)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("anomes")
                    .IsFixedLength(true);

                entity.Property(e => e.CantidadInsumo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("cantidad_insumo");

                entity.Property(e => e.CantidadProducidad)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("cantidad_producidad");

                entity.Property(e => e.CostoDol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_dol");

                entity.Property(e => e.CostoSol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_sol");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("id_guia");

                entity.Property(e => e.IdGuiaIng)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("id_guia_ing");

                entity.Property(e => e.IdInsumo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("id_insumo");

                entity.Property(e => e.IdOf)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("id_of");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("id_producto");

                entity.Property(e => e.SaldoGuia)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("saldo_guia");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<OpeCotizacionVentum>(entity =>
            {
                entity.HasKey(e => e.IdCotizacion);

                entity.ToTable("OPE_COTIZACION_VENTA");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoCpago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CPAGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MONEDA");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR");

                entity.Property(e => e.CodigoVendedorAsignado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR_ASIGNADO");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Competencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COMPETENCIA");

                entity.Property(e => e.Contacto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONTACTO");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.DiasEntrega).HasColumnName("DIAS_ENTREGA");

                entity.Property(e => e.DiasEntrega2).HasColumnName("DIAS_ENTREGA2");

                entity.Property(e => e.EmailContacto)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaAutorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AUTORIZACION");

                entity.Property(e => e.FechaCotizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COTIZACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdClienteFactura)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE_FACTURA");

                entity.Property(e => e.IdCotizacionParent)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_COTIZACION_PARENT");

                entity.Property(e => e.IdOportunidad)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OPORTUNIDAD");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.ImporteDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DESCUENTO");

                entity.Property(e => e.ImporteIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_IGV");

                entity.Property(e => e.ImporteIsc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_ISC");

                entity.Property(e => e.ImporteStot)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_STOT");

                entity.Property(e => e.ImporteTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_TOTAL");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.MotivoPerdida)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_PERDIDA");

                entity.Property(e => e.NotaPerdida)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_PERDIDA");

                entity.Property(e => e.NumeroCotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COTIZACION");

                entity.Property(e => e.NumeroOcliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_OCLIENTE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.PorcentajeDescuento)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("PORCENTAJE_DESCUENTO");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Redondeo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REDONDEO")
                    .HasDefaultValueSql("('0')")
                    .IsFixedLength(true);

                entity.Property(e => e.SepararStock)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEPARAR_STOCK")
                    .IsFixedLength(true);

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.SwtVisado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_VISADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Telefonos)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONOS");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDscto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DSCTO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoEntrega)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ENTREGA")
                    .HasDefaultValueSql("((1))")
                    .HasComment("1:DIAS:2:SEMANAS");

                entity.Property(e => e.TipoFechaEntrega)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_FECHA_ENTREGA")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_AUTORIZA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Validez)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALIDEZ");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpeCotizacionc>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("OPE_COTIZACIONC");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.PorcentajeDscto)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("PORCENTAJE_DSCTO");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SwtCoti)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_COTI")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMPRA");
            });

            modelBuilder.Entity<OpeCrequerimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CREQUERIMIENTO");

                entity.Property(e => e.AgenciaTransporte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AGENCIA_TRANSPORTE");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.CodigoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REQUERIMIENTO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DniContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DNI_CONTACTO1");

                entity.Property(e => e.DniContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DNI_CONTACTO2");

                entity.Property(e => e.Entregado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENTREGADO")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaAgencia)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_AGENCIA");

                entity.Property(e => e.FechaAtendido)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_ATENDIDO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaProgramaAlmacen)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROGRAMA_ALMACEN");

                entity.Property(e => e.FechaProgramada)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_PROGRAMADA");

                entity.Property(e => e.FechaRequerida)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_REQUERIDA");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_SOLICITUD");

                entity.Property(e => e.FechaTransito)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_TRANSITO");

                entity.Property(e => e.HoraAgencia)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_AGENCIA");

                entity.Property(e => e.HoraAtendido)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_ATENDIDO");

                entity.Property(e => e.HoraProgramada)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_PROGRAMADA");

                entity.Property(e => e.HoraRequerida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_REQUERIDA");

                entity.Property(e => e.HoraSolicitud)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_SOLICITUD");

                entity.Property(e => e.HoraTransito)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HORA_TRANSITO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");

                entity.Property(e => e.Manager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MANAGER");

                entity.Property(e => e.NodoDespacho)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NODO_DESPACHO");

                entity.Property(e => e.NombreContacto1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO1");

                entity.Property(e => e.NombreContacto2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO2");

                entity.Property(e => e.NombreSite)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SITE");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Prioridad)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIDAD");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Site)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SITE");

                entity.Property(e => e.SolicitadoPor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITADO_POR");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR");

                entity.Property(e => e.SwtReq)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_REQ")
                    .HasDefaultValueSql("('A')")
                    .IsFixedLength(true);

                entity.Property(e => e.TelefonoContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO1");

                entity.Property(e => e.TelefonoContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO2");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_REQUERIMIENTO");

                entity.Property(e => e.TipoTransporte)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRANSPORTE");

                entity.Property(e => e.Transporte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRANSPORTE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.UsuarioProgramaAlmacen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_PROGRAMA_ALMACEN");
            });

            modelBuilder.Entity<OpeCrequerimientoNumero>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CREQUERIMIENTO_NUMEROS");

                entity.Property(e => e.CodigoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REQUERIMIENTO");

                entity.Property(e => e.NumAlu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ALU");

                entity.Property(e => e.NumeroReferencia)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_REFERENCIA");
            });

            modelBuilder.Entity<OpeCuentaCorrienteCliente>(entity =>
            {
                entity.HasKey(e => new { e.TipoDocumento, e.NumeroSerie, e.RucCliente, e.CodigoEmpresa });

                entity.ToTable("OPE_CUENTA_CORRIENTE_CLIENTE");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.NumeroSerie)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.RucCliente)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.PagoDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_DOCUMENTO");

                entity.Property(e => e.PuntoVenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PUNTO_VENTA")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.Refletra)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("REFLETRA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCuentaCorrienteProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CUENTA_CORRIENTE_PROVEEDOR");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.PagoDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_DOCUMENTO");

                entity.Property(e => e.RucProv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PROV");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeCuotaCondpago>(entity =>
            {
                entity.HasKey(e => new { e.NumCopa, e.NumCuota });

                entity.ToTable("OPE_CUOTA_CONDPAGO");

                entity.Property(e => e.NumCopa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COPA");

                entity.Property(e => e.NumCuota)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NUM_CUOTA");

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("DIAS");

                entity.Property(e => e.PorCuota)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_CUOTA");
            });

            modelBuilder.Entity<OpeCuotaDocumentoventum>(entity =>
            {
                entity.HasKey(e => new { e.IdDocumento, e.NumCuota });

                entity.ToTable("OPE_CUOTA_DOCUMENTOVENTA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.NumCuota)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_CUOTA");

                entity.Property(e => e.FechaVcto)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");
            });

            modelBuilder.Entity<OpeCuotaPedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_CUOTA_PEDIDO");

                entity.Property(e => e.Amortizacion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("AMORTIZACION");

                entity.Property(e => e.CapitalAmortizado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CAPITAL_AMORTIZADO");

                entity.Property(e => e.CapitalFinal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CAPITAL_FINAL");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Dias).HasColumnName("DIAS");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Igv50)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV50");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteInteres)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("IMPORTE_INTERES");

                entity.Property(e => e.ImporteTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_TOTAL");

                entity.Property(e => e.Interes)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("INTERES");

                entity.Property(e => e.InteresSigv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INTERES_SIGV");

                entity.Property(e => e.Letra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LETRA");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorAfecto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_AFECTO");

                entity.Property(e => e.ValorInafecto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_INAFECTO");
            });

            modelBuilder.Entity<OpeCuotaVendedor>(entity =>
            {
                entity.HasKey(e => new { e.Vendedor, e.Ano, e.Mes });

                entity.ToTable("OPE_CUOTA_VENDEDOR");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeDetalleActivoFijo>(entity =>
            {
                entity.HasKey(e => e.DafId);

                entity.ToTable("OPE_DETALLE_ACTIVO_FIJO");

                entity.Property(e => e.DafId)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("daf_id");

                entity.Property(e => e.DafCantidad).HasColumnName("daf_cantidad");

                entity.Property(e => e.DafClase)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_clase");

                entity.Property(e => e.DafEstadoFisico)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_estado_fisico");

                entity.Property(e => e.DafFechaAdquisicion)
                    .HasColumnType("datetime")
                    .HasColumnName("daf_fecha_adquisicion");

                entity.Property(e => e.DafFechaCapitalizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("daf_fecha_capitalizacion");

                entity.Property(e => e.DafMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_marca");

                entity.Property(e => e.DafModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_modelo");

                entity.Property(e => e.DafNivelAbsolescencia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_nivel_absolescencia");

                entity.Property(e => e.DafNumeroFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("daf_numero_factura");

                entity.Property(e => e.DafSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("daf_serie");

                entity.Property(e => e.DafUso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("daf_uso");

                entity.Property(e => e.DafValorAdquisicion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("daf_valor_adquisicion");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdMoneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("id_moneda");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ProveedorCodigo).HasColumnName("proveedor_codigo");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeDetalleCaja>(entity =>
            {
                entity.HasKey(e => new { e.CdgArea, e.NumCaja, e.NumCor });

                entity.ToTable("OPE_DETALLE_CAJA");

                entity.Property(e => e.CdgArea)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AREA");

                entity.Property(e => e.NumCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgMcja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MCJA");

                entity.Property(e => e.CdgPedido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PEDIDO");

                entity.Property(e => e.CdgSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SUCURSAL")
                    .HasDefaultValueSql("('0008')");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CncDcja)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CNC_DCJA");

                entity.Property(e => e.DocDcja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DOC_DCJA");

                entity.Property(e => e.FecDcja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DCJA");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaLiquida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_LIQUIDA");

                entity.Property(e => e.IdCc)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CC");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.IdSd)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_SD");

                entity.Property(e => e.ImpDcja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DCJA");

                entity.Property(e => e.ImpPag)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAG");

                entity.Property(e => e.MonCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_CAJA");

                entity.Property(e => e.MonDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_DOCU");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.RucPrv)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.SwtAct)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ACT")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.HasOne(d => d.OpeCaja)
                    .WithMany(p => p.OpeDetalleCajas)
                    .HasForeignKey(d => new { d.CdgArea, d.NumCaja })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLE_CAJA_OPE_CAJA");
            });

            modelBuilder.Entity<OpeDetalleCheckinout>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_CHECKINOUT");

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("DIAS");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.IdCheckinout)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CHECKINOUT");

                entity.Property(e => e.IdConcepto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_CONCEPTO");

                entity.Property(e => e.IdHabitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_HABITACION");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Suplemento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUPLEMENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_AUTO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFact)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FACT")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleCompromiso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_COMPROMISO");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_anal");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_bco");

                entity.Property(e => e.CdgFpag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_fpag");

                entity.Property(e => e.CdgGara)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_gara");

                entity.Property(e => e.CdgPla)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_pla");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tana");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tdoc");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tmov");

                entity.Property(e => e.CdgTmovParent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cdg_tmov_parent");

                entity.Property(e => e.CorCren)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cor_cren");

                entity.Property(e => e.FecVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("fec_venc");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Imp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("imp");

                entity.Property(e => e.NumComp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_comp");

                entity.Property(e => e.NumCompParent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_comp_parent");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("num_cor");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("num_cta");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_docu");

                entity.Property(e => e.NumItm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_itm");

                entity.Property(e => e.SwtEst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("swt_est")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");
            });

            modelBuilder.Entity<OpeDetalleConsumo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_CONSUMO");

                entity.Property(e => e.Baja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("BAJA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdConsumo).HasColumnName("ID_CONSUMO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Vendido)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VENDIDO");
            });

            modelBuilder.Entity<OpeDetalleCotizacion>(entity =>
            {
                entity.HasKey(e => new { e.IdCotizacion, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_COTIZACION");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.AfectoIgv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_IGV")
                    .IsFixedLength(true);

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.CdgServ)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.CostoAdic)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_ADIC");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.FechaVen)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VEN");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImagenRef)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_REF");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteDscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("IMPORTE_DSCTO");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Observacion)
                    .HasColumnType("ntext")
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .HasColumnType("ntext")
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Percepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PERCEPCION");

                entity.Property(e => e.PorDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_DETRACCION");

                entity.Property(e => e.PorPercepcion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_PERCEPCION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_ORIGINAL");

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPigv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PIGV")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .HasComment("1:PRODUCTO;2:PRD PROMOCION;P:PRESUPUESTO");

                entity.Property(e => e.TipoItem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ITEM")
                    .IsFixedLength(true);

                entity.Property(e => e.UnidVen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNID_VEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorVen)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("VALOR_VEN");
            });

            modelBuilder.Entity<OpeDetalleCpresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_CPRESUPUESTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Horas)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HORAS");

                entity.Property(e => e.IdItem)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_ITEM");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<OpeDetalleDocumentoCompra>(entity =>
            {
                entity.HasKey(e => e.IdDetallle);

                entity.ToTable("OPE_DETALLE_DOCUMENTO_COMPRA");

                entity.Property(e => e.IdDetallle)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DETALLLE");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadInout)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INOUT");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ZONA");

                entity.Property(e => e.CodigoUnidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.Columna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COLUMNA");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Costod)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOD");

                entity.Property(e => e.Costof)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOF");

                entity.Property(e => e.Costol)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOL");

                entity.Property(e => e.DescripcionExtendida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_EXTENDIDA");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.DescuentoPorcentaje)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("DESCUENTO_PORCENTAJE");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(14, 6)")
                    .HasColumnName("FACTOR")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fila)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FILA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdReceta)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_RECETA");

                entity.Property(e => e.IdSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ID_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.IgvPorcentaje)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("IGV_PORCENTAJE");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioComprad)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_COMPRAD");

                entity.Property(e => e.Req)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REQ");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.SecReceta)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SEC_RECETA");

                entity.Property(e => e.SecReq).HasColumnName("SEC_REQ");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.UnidadEqui)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_EQUI");

                //entity.HasOne(d => d.IdDocumentoNavigation)
                //    .WithMany(p => p.OpeDetalleDocumentoCompras)
                //    .HasForeignKey(d => d.IdDocumento)
                //    .OnDelete(DeleteBehavior.ClientSetNull)
                //    .HasConstraintName("FK_OPE_DETALLE_DOCUMENTO_COMPRA_OPE_DOCUMENTO_COMPRA");

                //entity.HasOne(d => d.IdProductoNavigation)
                //    .WithMany(p => p.OpeDetalleDocumentoCompras)
                //    .HasForeignKey(d => d.IdProducto)
                //    .OnDelete(DeleteBehavior.ClientSetNull)
                //    .HasConstraintName("FK_OPE_DETALLE_DOCUMENTO_COMPRA_OPE_PRODUCTO");
            });

            modelBuilder.Entity<OpeDetalleDocumentoCompra2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_DOCUMENTO_COMPRA2");

                entity.Property(e => e.Afina)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AFINA");

                entity.Property(e => e.BasPor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BAS_POR")
                    .IsFixedLength(true);

                entity.Property(e => e.CanDfac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CAN_DFAC");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgGasto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_GASTO");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgUnidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD");

                entity.Property(e => e.CodigoAlmacen)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ALMACEN");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DctDfac)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DCT_DFAC");

                entity.Property(e => e.DescripcionProd)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_PROD");

                entity.Property(e => e.EstPoli)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EST_POLI")
                    .IsFixedLength(true);

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdOc).HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ImpDfac)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("IMP_DFAC");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteAjuste)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_AJUSTE");

                entity.Property(e => e.ImporteOtro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_OTRO");

                entity.Property(e => e.ItemPf)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("ITEM_PF");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumPoli)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_POLI");

                entity.Property(e => e.NumSec)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NUM_SEC");

                entity.Property(e => e.OrdProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORD_PROD");

                entity.Property(e => e.OrdServ)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORD_SERV");

                entity.Property(e => e.PreDfac)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("PRE_DFAC");

                entity.Property(e => e.PreInv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRE_INV");

                entity.Property(e => e.PreSigv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRE_SIGV");

                entity.Property(e => e.PrecioAjuste)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_AJUSTE");

                entity.Property(e => e.PrecioIgv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRECIO_IGV")
                    .IsFixedLength(true);

                entity.Property(e => e.PrecioOtro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_OTRO");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.TipProv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIP_PROV");

                entity.Property(e => e.ValValor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_VALOR");
            });

            modelBuilder.Entity<OpeDetalleDocumentoVentum>(entity =>
            {
                entity.HasKey(e => new { e.IdDetallle, e.IdDocumento, e.IdProducto, e.Secuencia, e.Tipo });

                entity.ToTable("OPE_DETALLE_DOCUMENTO_VENTA");

                entity.Property(e => e.IdDetallle)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DETALLLE");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgTipoDetr)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TIPO_DETR");

                entity.Property(e => e.CdgVend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VEND");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.FechaVen)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VEN");

                entity.Property(e => e.Fin)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FIN");

                entity.Property(e => e.FlagAdd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_ADD")
                    .IsFixedLength(true);

                entity.Property(e => e.GrupTipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GRUP_TIPO_AFEC_IGV");

                entity.Property(e => e.IdDocu)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCU");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProductoParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO_PARENT");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImporteDscto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DSCTO");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Inicio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INICIO");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.MontoEmpresa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_EMPRESA");

                entity.Property(e => e.MontoTrabajador)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_TRABAJADOR");

                entity.Property(e => e.NomImp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_IMP");

                entity.Property(e => e.NumeroComanda)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COMANDA");

                entity.Property(e => e.Os)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS");

                entity.Property(e => e.Percepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PERCEPCION");

                entity.Property(e => e.PorDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_DETRACCION");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorPercepcion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_PERCEPCION");

                entity.Property(e => e.PrecioOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_ORIGINAL");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.SecProd)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SEC_PROD");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SwtDcom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_DCOM")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FREE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPigv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PIGV")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtProm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PROM")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoLista)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LISTA");

                entity.Property(e => e.UnidVen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNID_VEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorVen)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("VALOR_VEN");

                entity.Property(e => e.Vv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VV");

                entity.HasOne(d => d.IdDocumentoNavigation)
                    .WithMany(p => p.OpeDetalleDocumentoVenta)
                    .HasForeignKey(d => d.IdDocumento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLE_DOCUMENTO_VENTA_OPE_DOCUMENTO_VENTA");
            });

            modelBuilder.Entity<OpeDetalleEntre>(entity =>
            {
                entity.HasKey(e => new { e.CdgTian, e.CdgAnal, e.NumCaja, e.NumCor });

                entity.ToTable("OPE_DETALLE_ENTRE");

                entity.Property(e => e.CdgTian)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TIAN");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.NumCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.CdgAnal2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL2");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgMcja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MCJA");

                entity.Property(e => e.CdgTana2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA2");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CncDcja)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CNC_DCJA");

                entity.Property(e => e.DocDcja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DOC_DCJA");

                entity.Property(e => e.FecDcja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DCJA");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaLiquida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_LIQUIDA");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.ImpDcja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DCJA");

                entity.Property(e => e.ImpPag)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAG");

                entity.Property(e => e.MonCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_CAJA");

                entity.Property(e => e.MonDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_DOCU");

                entity.Property(e => e.NumCorb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CORB");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.RucPrv)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.SwtAct)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ACT")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeDetalleFre>(entity =>
            {
                entity.HasKey(e => new { e.NumeroFre, e.SerieGenerada, e.Secuencia })
                    .HasName("PK_OPE_DETALLE_FRE_1");

                entity.ToTable("OPE_DETALLE_FRE");

                entity.Property(e => e.NumeroFre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.SerieGenerada)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.CdgColor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COLOR");

                entity.Property(e => e.CdgEstado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.CdgMarca)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MARCA");

                entity.Property(e => e.CdgModelo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MODELO");

                entity.Property(e => e.FechaGenerada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GENERADA");

                entity.Property(e => e.IdEquipo).HasColumnName("ID_EQUIPO");

                entity.Property(e => e.Kilometraje)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("KILOMETRAJE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SwtCxg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CXG")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtTb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_TB")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpeDetalleGuia2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_GUIA2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.FechaEnvasado)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVASADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Meses).HasColumnName("MESES");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SecuenciaDoc).HasColumnName("SECUENCIA_DOC");

                entity.Property(e => e.Serie)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GEN");
            });

            modelBuilder.Entity<OpeDetalleGuia3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_GUIA3");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgCaja)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CAJA");

                entity.Property(e => e.CdgCasillero)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CASILLERO");

                entity.Property(e => e.CdgColumna)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COLUMNA");

                entity.Property(e => e.CdgMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MARCA");

                entity.Property(e => e.CdgModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MODELO");

                entity.Property(e => e.CdgUnidad)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD");

                entity.Property(e => e.CdgUnidadEqui)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD_EQUI");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<OpeDetalleGuia4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_GUIA4");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.FechaEnvasado)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVASADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Meses).HasColumnName("MESES");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SecuenciaDoc).HasColumnName("SECUENCIA_DOC");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GEN");
            });

            modelBuilder.Entity<OpeDetalleGuiaubicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_GUIAUBICACION");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.CodigoZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ZONA");

                entity.Property(e => e.Columna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COLUMNA");

                entity.Property(e => e.FechaEnvasado)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVASADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Fila)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FILA");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Meses).HasColumnName("MESES");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SecuenciaDoc).HasColumnName("SECUENCIA_DOC");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GEN");
            });

            modelBuilder.Entity<OpeDetalleHabitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_HABITACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.Hora)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEmpleado)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_EMPLEADO");

                entity.Property(e => e.IdHabitacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_HABITACION");

                entity.Property(e => e.IdSecuencia)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SECUENCIA");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.TipoDetalle)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETALLE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpeDetalleInventarioFisico>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.IdProducto });

                entity.ToTable("OPE_DETALLE_INVENTARIO_FISICO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.CantidadContada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_CONTADA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Conciliado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CONCILIADO");

                entity.Property(e => e.Contado).HasColumnName("contado");

                entity.Property(e => e.CostoPromedio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_PROMEDIO");

                entity.Property(e => e.CostoPromediod)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_PROMEDIOD");

                entity.Property(e => e.Faltante)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FALTANTE");

                entity.Property(e => e.Inventariado).HasColumnName("inventariado");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Sobrante)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SOBRANTE");

                entity.Property(e => e.UtilmoOc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("UTILMO_OC");
            });

            modelBuilder.Entity<OpeDetalleLetraCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_LETRA_CLIENTE");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CorLren)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COR_LREN");

                entity.Property(e => e.DireccionAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_AVAL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaGiro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GIRO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImpInteres)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_INTERES");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteRet)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_RET");

                entity.Property(e => e.Interes)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("INTERES");

                entity.Property(e => e.LugarGiro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_GIRO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombreAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_AVAL");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumeroBanco)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_BANCO");

                entity.Property(e => e.NumeroCuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CUENTA");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.NumeroLetra)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LETRA");

                entity.Property(e => e.NumeroLori)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LORI");

                entity.Property(e => e.NumeroLren)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LREN");

                entity.Property(e => e.Plazo).HasColumnName("PLAZO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.ReferenciaGiro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA_GIRO");

                entity.Property(e => e.RucAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_AVAL");

                entity.Property(e => e.RucCli)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CLI");

                entity.Property(e => e.Seccion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TelefonoAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_AVAL");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("VENCIMIENTO");
            });

            modelBuilder.Entity<OpeDetalleLetraProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_LETRA_PROVEEDOR");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CorLren)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COR_LREN");

                entity.Property(e => e.DireccionAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_AVAL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaGiro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GIRO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteRet)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_RET");

                entity.Property(e => e.LugarGiro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_GIRO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombreAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_AVAL");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumeroBanco)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_BANCO");

                entity.Property(e => e.NumeroCuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CUENTA");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.NumeroLetra)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LETRA");

                entity.Property(e => e.NumeroLori)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LORI");

                entity.Property(e => e.NumeroLren)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_LREN");

                entity.Property(e => e.Plazo).HasColumnName("PLAZO");

                entity.Property(e => e.ReferenciaGiro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA_GIRO");

                entity.Property(e => e.RucAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_AVAL");

                entity.Property(e => e.RucProv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PROV");

                entity.Property(e => e.Seccion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TelefonoAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_AVAL");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("VENCIMIENTO");
            });

            modelBuilder.Entity<OpeDetalleLibbco>(entity =>
            {
                entity.HasKey(e => new { e.CdgBco, e.NumCta, e.NumCor, e.NumItm });

                entity.ToTable("OPE_DETALLE_LIBBCO");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumItm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ITM");

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgTana)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.ImpDebe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DEBE");

                entity.Property(e => e.ImpHaber)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_HABER");

                entity.Property(e => e.MonOri)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON_ORI");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumItm2).HasColumnName("NUM_ITM2");

                entity.HasOne(d => d.OpeLibbco)
                    .WithMany(p => p.OpeDetalleLibbcos)
                    .HasForeignKey(d => new { d.CdgBco, d.NumCta, d.NumCor })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLE_LIBBCO_OPE_LIBBCO");
            });

            modelBuilder.Entity<OpeDetalleLiquidacionm>(entity =>
            {
                entity.HasKey(e => new { e.IdDocumento, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_LIQUIDACIONM");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.SwtFact)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FACT")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorUnitario)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("VALOR_UNITARIO");

                entity.Property(e => e.ValorUnitrarioTotal)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("VALOR_UNITRARIO_TOTAL");
            });

            modelBuilder.Entity<OpeDetalleNumeroDocumento>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.TipoDocumento, e.Serie, e.Numero });

                entity.ToTable("OPE_DETALLE_NUMERO_DOCUMENTO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.HasOne(d => d.OpeNumeroDocumento)
                    .WithMany(p => p.OpeDetalleNumeroDocumentos)
                    .HasForeignKey(d => new { d.CodigoEmpresa, d.CodigoSucursal, d.TipoDocumento, d.Serie })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLE_NUMERO_DOCUMENTO_OPE_NUMERO_DOCUMENTO");
            });

            modelBuilder.Entity<OpeDetalleOrdenCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_ORDEN_COMPRA");

                entity.Property(e => e.Afecto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO")
                    .IsFixedLength(true);

                entity.Property(e => e.Ai)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AI")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadFacturada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_FACTURADA");

                entity.Property(e => e.CantidadIngresada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INGRESADA");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CodigoUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.DescripcionExtendida)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_EXTENDIDA");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.IdOc).HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.PorDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_DETRACCION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioOri)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("PRECIO_ORI");

                entity.Property(e => e.Req)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REQ");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.SecReq).HasColumnName("SEC_REQ");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<OpeDetalleOrdenFabricacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_ORDEN_FABRICACION");

                entity.Property(e => e.CantBase)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("cant_base");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo");

                entity.Property(e => e.CostoD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_d");

                entity.Property(e => e.CostoPromedio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_promedio");

                entity.Property(e => e.CostoPromedioD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_promedio_d");

                entity.Property(e => e.DesItem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("des_item");

                entity.Property(e => e.Entregado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("entregado");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Planificado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("planificado");

                entity.Property(e => e.Ref1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ref1");

                entity.Property(e => e.Requerido)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("requerido");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("secuencia");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeDetalleOrdenServicio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_ORDEN_SERVICIO");

                entity.Property(e => e.CantReq)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANT_REQ");

                entity.Property(e => e.CantUtil)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANT_UTIL");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgServ)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.CodigoServicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SERVICIO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .HasDefaultValueSql("('G')")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");
            });

            modelBuilder.Entity<OpeDetalleOrdenTrabajo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_ORDEN_TRABAJO");

                entity.Property(e => e.CantReq)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANT_REQ");

                entity.Property(e => e.CantUtil)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANT_UTIL");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgServ)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.CodigoOrdenTrabajo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ORDEN_TRABAJO");

                entity.Property(e => e.CodigoServicio)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SERVICIO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .HasDefaultValueSql("('G')")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");
            });

            modelBuilder.Entity<OpeDetallePagoCliente>(entity =>
            {
                entity.HasKey(e => new { e.NumeroCobro, e.TipoDocumento, e.Numero, e.RucCli });

                entity.ToTable("OPE_DETALLE_PAGO_CLIENTE");

                entity.Property(e => e.NumeroCobro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COBRO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.RucCli)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CLI");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Cheque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHEQUE");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCobro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COBRO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImporteCobro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_COBRO");

                entity.Property(e => e.Interes)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INTERES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MonedaOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA_ORI");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeDetallePagoProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_PAGO_PROVEEDOR");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Caja)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAJA")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.CuentaBancaria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_BANCARIA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImportePago)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGO");

                entity.Property(e => e.LugarPago)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_PAGO");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MODULO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MonedaOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA_ORI");

                entity.Property(e => e.Num)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCor2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR2");

                entity.Property(e => e.NumCorMod)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR_MOD");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.NumeroCheque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CHEQUE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.RucProv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PROV");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Turno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeDetallePartidaPresupuesto>(entity =>
            {
                entity.HasKey(e => new { e.IdPresupuesto, e.IdProducto, e.IdItem, e.Tipo });

                entity.ToTable("OPE_DETALLE_PARTIDA_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdItem)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_ITEM");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Horas)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HORAS");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.PrecioUnitarioOri)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO_ORI");

                entity.Property(e => e.SecProd)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SEC_PROD");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<OpeDetallePedido>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_PEDIDO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.AfectoIgv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_IGV")
                    .IsFixedLength(true);

                entity.Property(e => e.CantDespachada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANT_DESPACHADA");

                entity.Property(e => e.CantFacturada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANT_FACTURADA");

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.CdgServ)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Comanda)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COMANDA");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.CostoAdic)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_ADIC");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.FechaAnula)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULA");

                entity.Property(e => e.FechaVen)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VEN");

                entity.Property(e => e.FlagC)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_C")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagColor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_COLOR")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.FlagP)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_P");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteDscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("IMPORTE_DSCTO");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Mozo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MOZO");

                entity.Property(e => e.NomImp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_IMP");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Percepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PERCEPCION");

                entity.Property(e => e.PorDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_DETRACCION");

                entity.Property(e => e.PorPercepcion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("POR_PERCEPCION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_ORIGINAL");

                entity.Property(e => e.SecProd)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SEC_PROD");

                entity.Property(e => e.SwtDcom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_DCOM")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFree)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FREE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPigv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PIGV")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtProm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PROM")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtSabor)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SWT_SABOR");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.UnidVen)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNID_VEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioAnula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_ANULA");

                entity.Property(e => e.ValorVen)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("VALOR_VEN");
            });

            modelBuilder.Entity<OpeDetallePlanFabricacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_PLAN_FABRICACION");

                entity.Property(e => e.AProducir)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("a_producir");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Producido)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("producido");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");
            });

            modelBuilder.Entity<OpeDetallePlantillaRecetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_PLANTILLA_RECETA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CostoUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_UNITARIO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Imprime)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IMPRIME")
                    .IsFixedLength(true);

                entity.Property(e => e.ListaPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LISTA_PRECIO");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetallePresupuesto>(entity =>
            {
                entity.HasKey(e => new { e.IdPresupuesto, e.IdProducto, e.CdgServ, e.Tipo, e.Secuencia });

                entity.ToTable("OPE_DETALLE_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.CdgServ)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgTemp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TEMP");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.DescTemp)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("DESC_TEMP");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.IconTemp)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("ICON_TEMP");

                entity.Property(e => e.IdProducto2)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO2");

                entity.Property(e => e.IdProveedor).HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.IdTitulo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TITULO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Importe2)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE2");

                entity.Property(e => e.JornTemp)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("JORN_TEMP");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NomTemp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_TEMP");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.OrdenHoja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_HOJA");

                entity.Property(e => e.PconTemp)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PCON_TEMP");

                entity.Property(e => e.RendTemp)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("REND_TEMP");

                entity.Property(e => e.SecOh)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SEC_OH");

                entity.Property(e => e.SecOrd).HasColumnName("SEC_ORD");

                entity.Property(e => e.SecPres).HasColumnName("SEC_PRES");

                entity.Property(e => e.TotalTemp)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("TOTAL_TEMP");

                entity.Property(e => e.UndTemp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UND_TEMP");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");

                entity.Property(e => e.ValorUnit)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_UNIT");

                entity.HasOne(d => d.IdPresupuestoNavigation)
                    .WithMany(p => p.OpeDetallePresupuestos)
                    .HasForeignKey(d => d.IdPresupuesto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLE_PRESUPUESTO_OPE_PRESUPUESTO");
            });

            modelBuilder.Entity<OpeDetallePresupuesto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_PRESUPUESTO2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgServ)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor).HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Importe2)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE2");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");

                entity.Property(e => e.ValorUnit)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_UNIT");
            });

            modelBuilder.Entity<OpeDetalleProgramacionPago>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_PROGRAMACION_PAGO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CuentaBancaria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_BANCARIA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImportePago)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MonedaOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA_ORI");

                entity.Property(e => e.Num)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.Numero)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.NumeroCheque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CHEQUE");

                entity.Property(e => e.RucProv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PROV");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 8)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeDetalleRecetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_RECETA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProducto2).HasColumnName("ID_PRODUCTO2");

                entity.Property(e => e.Intermedio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INTERMEDIO")
                    .IsFixedLength(true);

                entity.Property(e => e.ValorDol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_DOL");

                entity.Property(e => e.ValorSol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_SOL");
            });

            modelBuilder.Entity<OpeDetalleReqitem>(entity =>
            {
                entity.HasKey(e => new { e.IdRequerimiento, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_REQITEMS");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgCuso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CUSO");

                entity.Property(e => e.CdgPrioridad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PRIORIDAD");

                entity.Property(e => e.CdgResponsable)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_RESPONSABLE");

                entity.Property(e => e.CdgUso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_USO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleRequisicion>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.IdProducto, e.Secuencia, e.CdgGasto });

                entity.ToTable("OPE_DETALLE_REQUISICION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.CdgGasto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_GASTO");

                entity.Property(e => e.AfectoIgv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_IGV")
                    .HasDefaultValueSql("((1))")
                    .IsFixedLength(true);

                entity.Property(e => e.Ai)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AI")
                    .HasDefaultValueSql("('A')")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleReserva>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DETALLE_RESERVA");

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("DIAS");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.IdConcepto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ID_CONCEPTO");

                entity.Property(e => e.IdReserva)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_RESERVA");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Suplemento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUPLEMENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_AUTO")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleSolicitudDocumento>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitud, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_SOLICITUD_DOCUMENTO");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.AfectoIgv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_IGV")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.SwtPigv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PIGV")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleSolicitudRequerimiento>(entity =>
            {
                entity.HasKey(e => new { e.IdRequerimiento, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLE_SOLICITUD_REQUERIMIENTO");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpeDetalleSolicitudVjevto>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitud, e.Tipo, e.Secuencia });

                entity.ToTable("OPE_DETALLE_SOLICITUD_VJEVTO");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.CantPersona)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANT_PERSONA");

                entity.Property(e => e.CdgCeco)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.CdgPersonal)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PERSONAL");

                entity.Property(e => e.CdgVje)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VJE");

                entity.Property(e => e.CdgVto)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VTO");

                entity.Property(e => e.CostoUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_UNITARIO");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.NomVje)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VJE");

                entity.Property(e => e.NomVto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VTO");

                entity.Property(e => e.TipoAt)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AT");
            });

            modelBuilder.Entity<OpeDetalleTabla>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Numero });

                entity.ToTable("OPE_DETALLE_TABLA");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Numero)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FlagSys)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_SYS")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.Imagen1)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN1");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia10)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA10");

                entity.Property(e => e.Referencia11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA11");

                entity.Property(e => e.Referencia12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA12");

                entity.Property(e => e.Referencia13)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA13");

                entity.Property(e => e.Referencia14)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA14");

                entity.Property(e => e.Referencia15)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA15");

                entity.Property(e => e.Referencia16)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA16");

                entity.Property(e => e.Referencia17)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA17");

                entity.Property(e => e.Referencia18)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA18");

                entity.Property(e => e.Referencia19)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA19");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia20)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA20");

                entity.Property(e => e.Referencia21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA21");

                entity.Property(e => e.Referencia22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA22");

                entity.Property(e => e.Referencia23)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA23");

                entity.Property(e => e.Referencia24)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA24");

                entity.Property(e => e.Referencia25)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA25");

                entity.Property(e => e.Referencia26)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA26");

                entity.Property(e => e.Referencia27)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA27");

                entity.Property(e => e.Referencia28)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA28");

                entity.Property(e => e.Referencia29)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA29");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia30)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA30");

                entity.Property(e => e.Referencia31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA31");

                entity.Property(e => e.Referencia32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA32");

                entity.Property(e => e.Referencia33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA33");

                entity.Property(e => e.Referencia34)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA34");

                entity.Property(e => e.Referencia35)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA35");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.Referencia6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA6");

                entity.Property(e => e.Referencia7)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA7");

                entity.Property(e => e.Referencia8)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA8");

                entity.Property(e => e.Referencia9)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA9");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                //entity.HasOne(d => d.Codigo)
                //    .WithMany(p => p.OpeDetalleTablas)
                //    .HasForeignKey(d => d.Codigo)
                //    .OnDelete(DeleteBehavior.ClientSetNull)
                //    .HasConstraintName("FK_OPE_DETALLE_TABLA_OPE_TABLA");
            });

            modelBuilder.Entity<OpeDetallecc>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_DETALLECC");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Afecto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO")
                    .IsFixedLength(true);

                entity.Property(e => e.Afina)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFINA")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.CdgSceco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCECO");

                entity.Property(e => e.CodigoP)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_P");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.SecP).HasColumnName("SEC_P");

                entity.Property(e => e.SwtCom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_COM")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CodigoNavigation)
                    .WithMany(p => p.OpeDetalleccs)
                    .HasForeignKey(d => d.Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_DETALLECC_OPE_COTIZACIONC");
            });

            modelBuilder.Entity<OpeDistGastImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DIST_GAST_IMPORTACION");

                entity.Property(e => e.BaseProrrateo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("base_prorrateo")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCosteo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COSTEO");

                entity.Property(e => e.CiCodigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ci_codigo");

                entity.Property(e => e.CiCodigo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ci_codigo2");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("numero_documento");

                entity.Property(e => e.NumeroDocumentoO)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("numero_documento_o");

                entity.Property(e => e.RucProv)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ruc_prov");

                entity.Property(e => e.RucProvO)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ruc_prov_o");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");

                entity.Property(e => e.SecuenciaDocu).HasColumnName("secuencia_docu");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_documento");

                entity.Property(e => e.TipoDocumentoO)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_documento_o");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valor");
            });

            modelBuilder.Entity<OpeDocntDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DOCNT_DOC");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdDocumentoNt)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO_NT");

                entity.Property(e => e.NumCobro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COBRO");
            });

            modelBuilder.Entity<OpeDocumentoCompra>(entity =>
            {
                entity.HasKey(e => e.IdDocumento);

                entity.ToTable("OPE_DOCUMENTO_COMPRA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgCecoD)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO_D");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgOt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OT");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.CdgScecoD)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCECO_D");

                entity.Property(e => e.CertificadoInscripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CERTIFICADO_INSCRIPCION");

                entity.Property(e => e.Chofer)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CHOFER");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoEmpresaDestino)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA_DESTINO")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.CodigoSucursalDestino)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL_DESTINO")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursalOrigen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL_ORIGEN")
                    .IsFixedLength(true);

                entity.Property(e => e.DepartamentoLlegada)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_LLEGADA");

                entity.Property(e => e.DepartamentoPartida)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_PARTIDA");

                entity.Property(e => e.ErrSt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ERR_ST");

                entity.Property(e => e.EsTraslado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ES_TRASLADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAutorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AUTORIZACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaEntregaCliente)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA_CLIENTE");

                entity.Property(e => e.FechaEnvio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Flag1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG1")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.FlagEnvio).HasColumnName("FLAG_ENVIO");

                entity.Property(e => e.FlagError).HasColumnName("FLAG_ERROR");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.IdDocumentoParent).HasColumnName("ID_DOCUMENTO_PARENT");

                entity.Property(e => e.IdDocumentoParent2)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO_PARENT2");

                entity.Property(e => e.IdFormaPago)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_FORMA_PAGO");

                entity.Property(e => e.IdMoneda)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProveedor).HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.IdReqEm)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ_EM");

                entity.Property(e => e.Licencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LICENCIA");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.LugarPartida)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_PARTIDA");

                entity.Property(e => e.MError)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_ERROR");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.NodoDespacho)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NODO_DESPACHO");

                entity.Property(e => e.NumAlu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ALU");

                entity.Property(e => e.NumBultos)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_BULTOS");

                entity.Property(e => e.NumDelivery)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DELIVERY");

                entity.Property(e => e.NumFre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_FRE");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumReq)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQ");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Placa)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PLACA");

                entity.Property(e => e.ProvinciaLlegada)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_LLEGADA");

                entity.Property(e => e.ProvinciaPartida)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_PARTIDA");

                entity.Property(e => e.PuntoVenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PUNTO_VENTA")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.RucTransportista)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_TRANSPORTISTA");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.SwtAutorizacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_AUTORIZACION")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtBj)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_BJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtCuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CUO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtIng)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ING")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtWeb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WEB")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtWs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WS")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");

                entity.Property(e => e.Transportista)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TRANSPORTISTA");

                entity.Property(e => e.UbigeoLlegada)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_LLEGADA");

                entity.Property(e => e.UbigeoPartida)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_PARTIDA");

                entity.Property(e => e.UsuarioAutorizacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_AUTORIZACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioEnvio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_ENVIO");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.Vehiculo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VEHICULO");
            });

            modelBuilder.Entity<OpeDocumentoCompra2>(entity =>
            {
                entity.HasKey(e => e.IdDocumento);

                entity.ToTable("OPE_DOCUMENTO_COMPRA2");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.AfectaTotal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTA_TOTAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Anticipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.BasPorr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BAS_PORR")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAfec)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AFEC");

                entity.Property(e => e.CdgCpag)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTref)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TREF");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.EstPoli)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EST_POLI")
                    .IsFixedLength(true);

                entity.Property(e => e.FecCanc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CANC");

                entity.Property(e => e.FecCmp)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CMP");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FecPgod)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_PGOD");

                entity.Property(e => e.FecRef)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_REF");

                entity.Property(e => e.FecVcto)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VCTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDetra)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DETRA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Flete)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FLETE");

                entity.Property(e => e.IdConvenio)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONVENIO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProdlab)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODLAB");

                entity.Property(e => e.Imp2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP2");

                entity.Property(e => e.Imp3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP3");

                entity.Property(e => e.ImpIsc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_ISC");

                entity.Property(e => e.Num)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumPoli)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_POLI");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumReq)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQ");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumeroDetra)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DETRA");

                entity.Property(e => e.Numsec)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUMSEC");

                entity.Property(e => e.ObsFprv)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBS_FPRV");

                entity.Property(e => e.PorTigv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("POR_TIGV");

                entity.Property(e => e.PorTir)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_TIR");

                entity.Property(e => e.PorTper)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("POR_TPER");

                entity.Property(e => e.Ref1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REF1");

                entity.Property(e => e.RefeCorr)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFE_CORR");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.Sub2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB2");

                entity.Property(e => e.SwtEst)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_EST")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtOcom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_OCOM")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPoli)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_POLI")
                    .IsFixedLength(true);

                entity.Property(e => e.TasaDetra)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TASA_DETRA");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDscto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DSCTO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoRefImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_REF_IMP")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValFdes)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FDES");

                entity.Property(e => e.ValFigv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FIGV");

                entity.Property(e => e.ValFint)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FINT");

                entity.Property(e => e.ValFlet)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FLET");

                entity.Property(e => e.ValFpag)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FPAG");

                entity.Property(e => e.ValFper)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FPER");

                entity.Property(e => e.ValFsub)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FSUB");

                entity.Property(e => e.ValFtot)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FTOT");
            });

            modelBuilder.Entity<OpeDocumentoGuia2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DOCUMENTO_GUIA2");

                entity.Property(e => e.IdGuia).HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");
            });

            modelBuilder.Entity<OpeDocumentoGuium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DOCUMENTO_GUIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PEDIDO");
            });

            modelBuilder.Entity<OpeDocumentoVentaContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DOCUMENTO_VENTA_CONTRATO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<OpeDocumentoVentaPedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_DOCUMENTO_VENTA_PEDIDO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<OpeDocumentoVentum>(entity =>
            {
                entity.HasKey(e => e.IdDocumento);

                entity.ToTable("OPE_DOCUMENTO_VENTA");

                entity.HasIndex(e => e.NumeroSerie, "IX_OPE_DOCUMENTO_VENTA");

                entity.HasIndex(e => e.IdPersona, "IX_OPE_DOCUMENTO_VENTA_1");

                entity.HasIndex(e => e.TipoDocumento, "IX_OPE_DOCUMENTO_VENTA_2");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Abono)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ABONO");

                entity.Property(e => e.Anticipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Caja)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CAJA");

                entity.Property(e => e.CantDecimal)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CANT_DECIMAL");

                entity.Property(e => e.CantHs)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_HS");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.CdgEspe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESPE");

                entity.Property(e => e.CdgSceco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCECO");

                entity.Property(e => e.CodigoCajero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJERO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.ComisionMastercard)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_MASTERCARD");

                entity.Property(e => e.ComisionOtros)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_OTROS");

                entity.Property(e => e.ComisionRipley)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_RIPLEY");

                entity.Property(e => e.ComisionSaga)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_SAGA");

                entity.Property(e => e.ComisionVisa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_VISA");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.DireccionPersona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_PERSONA");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Dni)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DNI");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DsctoPtosVta)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("DSCTO_PTOS_VTA");

                entity.Property(e => e.Efectivo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("EFECTIVO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FecCanc)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CANC");

                entity.Property(e => e.FecVcto)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VCTO");

                entity.Property(e => e.FechaAnulacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULACION");

                entity.Property(e => e.FechaApertura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APERTURA");

                entity.Property(e => e.FechaContingencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CONTINGENCIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEnvio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENVIO");

                entity.Property(e => e.FechaIngreso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaSalida)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_SALIDA");

                entity.Property(e => e.FlagEnvio).HasColumnName("FLAG_ENVIO");

                entity.Property(e => e.FlagError).HasColumnName("FLAG_ERROR");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.Horas)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("HORAS");

                entity.Property(e => e.Horase)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("HORASE");

                entity.Property(e => e.Horasst)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("HORASST");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IdCheckinout)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CHECKINOUT");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.IdDocumento2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO2");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdMedico)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("ID_MEDICO");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.ImpOperacionExonerada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_OPERACION_EXONERADA");

                entity.Property(e => e.ImpOperacionExportacion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_OPERACION_EXPORTACION");

                entity.Property(e => e.ImpOperacionGravada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_OPERACION_GRAVADA");

                entity.Property(e => e.ImpOperacionInafecta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_OPERACION_INAFECTA");

                entity.Property(e => e.ImpRed)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("IMP_RED");

                entity.Property(e => e.ImpRetencion)
                    .HasColumnType("numeric(11, 4)")
                    .HasColumnName("IMP_RETENCION");

                entity.Property(e => e.ImpRetencionOtro)
                    .HasColumnType("numeric(11, 4)")
                    .HasColumnName("IMP_RETENCION_OTRO");

                entity.Property(e => e.MContingencia)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("M_CONTINGENCIA");

                entity.Property(e => e.MError)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_ERROR");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mastercard)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MASTERCARD");

                entity.Property(e => e.Minutos)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("MINUTOS");

                entity.Property(e => e.Minutose)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("MINUTOSE");

                entity.Property(e => e.Minutosst)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("MINUTOSST");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Mozo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOZO");

                entity.Property(e => e.NomDelivery)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOM_DELIVERY");

                entity.Property(e => e.NombreApellido)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_APELLIDO");

                entity.Property(e => e.NombrePersona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_PERSONA");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumPlaca)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PLACA");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumeroComanda)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COMANDA");

                entity.Property(e => e.NumeroMaquina)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_MAQUINA");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Otros)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("OTROS");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorRetencion)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("POR_RETENCION");

                entity.Property(e => e.PorRetencionOtro)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("POR_RETENCION_OTRO");

                entity.Property(e => e.Propina)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PROPINA");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.PtosVta)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PTOS_VTA");

                entity.Property(e => e.PtosVtaAplica)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PTOS_VTA_APLICA");

                entity.Property(e => e.Redondeo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REDONDEO")
                    .HasDefaultValueSql("('0')")
                    .IsFixedLength(true);

                entity.Property(e => e.RefZonas)
                    .IsUnicode(false)
                    .HasColumnName("REF_ZONAS");

                entity.Property(e => e.RefeCorr)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFE_CORR");

                entity.Property(e => e.Refletra)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("REFLETRA");

                entity.Property(e => e.Ripley)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RIPLEY");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Saga)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SAGA");

                entity.Property(e => e.StrMot)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("STR_MOT");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SwtBj)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_BJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtCanje)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CANJE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtCc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CC")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtCuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CUO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtGn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_GN")
                    .IsFixedLength(true);

                entity.Property(e => e.Tarifa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TARIFA");

                entity.Property(e => e.TarifaPlana)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TARIFA_PLANA");

                entity.Property(e => e.TelCelular)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TEL_CELULAR");

                entity.Property(e => e.TextoContrato)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TEXTO_CONTRATO");

                entity.Property(e => e.TextoContrato2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TEXTO_CONTRATO2");

                entity.Property(e => e.TextoImporte)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TEXTO_IMPORTE");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoDocumento2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO2");

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");

                entity.Property(e => e.TipoOperacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPERACION");

                entity.Property(e => e.TipoVenta)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VENTA");

                entity.Property(e => e.TotCob)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOT_COB");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.Turno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CAJA");

                entity.Property(e => e.UsuarioContingencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CONTINGENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioEnvio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_ENVIO");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_ANTICIPO");

                entity.Property(e => e.ValFpag)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_FPAG");

                entity.Property(e => e.ValPercepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_PERCEPCION");

                entity.Property(e => e.ValorFirma)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_FIRMA");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Visa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VISA");

                entity.Property(e => e.Vuelto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VUELTO");
            });

            modelBuilder.Entity<OpeDsctoCantidadProducto>(entity =>
            {
                entity.HasKey(e => new { e.CdgListaPrecio, e.IdProducto, e.Cantidad, e.Tipo, e.Unidad, e.FactorConversion });

                entity.ToTable("OPE_DSCTO_CANTIDAD_PRODUCTO");

                entity.Property(e => e.CdgListaPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_LISTA_PRECIO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("FACTOR_CONVERSION")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AutoP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_P")
                    .IsFixedLength(true);

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioDscto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PRECIO_DSCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<OpeEmpresa>(entity =>
            {
                entity.HasKey(e => e.CodigoEmpresa);

                entity.ToTable("OPE_EMPRESA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("C_ID");

                entity.Property(e => e.CSt)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("C_ST");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DniRepresentante)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DNI_REPRESENTANTE");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.EmpresaPrincipal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA_PRINCIPAL")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ImagenBackground)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_BACKGROUND");

                entity.Property(e => e.ImagenFooter)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_FOOTER");

                entity.Property(e => e.ImagenHeader)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_HEADER");

                entity.Property(e => e.ImagenPlan)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN_PLAN");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NombreComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_COMERCIAL");

                entity.Property(e => e.Nota)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Representante)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeEntre>(entity =>
            {
                entity.HasKey(e => new { e.CdgTian, e.NumCaja, e.CdgAnal });

                entity.ToTable("OPE_ENTRE");

                entity.Property(e => e.CdgTian)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TIAN");

                entity.Property(e => e.NumCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.FecCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdSd)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_SD");

                entity.Property(e => e.ImpCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CAJA");

                entity.Property(e => e.MaxCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MAX_CAJA");

                entity.Property(e => e.NumCheq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.SldCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SLD_CAJA");

                entity.Property(e => e.SwtCaja)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CAJA")
                    .IsFixedLength(true);

                entity.Property(e => e.TotCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOT_CAJA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeEntre2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ENTRE2");

                entity.Property(e => e.CdgAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTian)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TIAN");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.FecCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ImpCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CAJA");

                entity.Property(e => e.MaxCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MAX_CAJA");

                entity.Property(e => e.NumCaja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.NumCheq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumItem)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ITEM");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.SldCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SLD_CAJA");

                entity.Property(e => e.SwtCaja)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CAJA")
                    .IsFixedLength(true);

                entity.Property(e => e.TotCaja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOT_CAJA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeEquipoPresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_EQUIPO_PRESUPUESTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Fre)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FRE");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGenerada)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeEstablecimiento>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CdgEsta });

                entity.ToTable("OPE_ESTABLECIMIENTO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgEsta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTA");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeEstadoEquipoFre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ESTADO_EQUIPO_FRE");

                entity.Property(e => e.CdgEstado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NumeroFre)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGenerada)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeEstadoHabitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ESTADO_HABITACION");

                entity.Property(e => e.Abreviatura)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ABREVIATURA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdCheckin)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CHECKIN");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdHabitacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_HABITACION");

                entity.Property(e => e.IdReserva)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_RESERVA");

                entity.Property(e => e.SwtSucio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_SUCIO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeFcDiario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_FC_DIARIO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("banco");

                entity.Property(e => e.EstadoDocumento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado_documento")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoFlujoCaja)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado_flujo_caja")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_caja");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_documento");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_fin");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_inicio");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_vencimiento");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("importe_dolar");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("importe_soles");

                entity.Property(e => e.MovimientoBanco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("movimiento_banco");

                entity.Property(e => e.MovimientoFlujo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("movimiento_flujo");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("numero_documento");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ruc");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tipo_cambio");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_documento");

                entity.Property(e => e.TipoFlujo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("tipo_flujo");

                entity.Property(e => e.TipoOperacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_operacion")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoPersona)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_persona")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_FORM");

                entity.Property(e => e.DescripcionForm)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_FORM");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdForm).HasColumnName("ID_FORM");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MODULO");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.Operaciones)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OPERACIONES");

                entity.Property(e => e.TituloForm)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_FORM");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeFormatoLab>(entity =>
            {
                entity.HasKey(e => new { e.Formato, e.IdDocumento, e.IdProducto, e.Secuenciadoc, e.Secuenciapro });

                entity.ToTable("OPE_FORMATO_LAB");

                entity.Property(e => e.Formato)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FORMATO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuenciadoc)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIADOC");

                entity.Property(e => e.Secuenciapro)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIAPRO");

                entity.Property(e => e.AcidoAscorbico)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ACIDO_ASCORBICO");

                entity.Property(e => e.Aspecto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ASPECTO");

                entity.Property(e => e.Basofilo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BASOFILO");

                entity.Property(e => e.Bilirrubina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BILIRRUBINA");

                entity.Property(e => e.CdgRealizado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REALIZADO");

                entity.Property(e => e.CelEpiteliales)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CEL_EPITELIALES");

                entity.Property(e => e.Cilindro)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CILINDRO");

                entity.Property(e => e.Color)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COLOR");

                entity.Property(e => e.Cristales)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CRISTALES");

                entity.Property(e => e.CuerpoCetonico)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CUERPO_CETONICO");

                entity.Property(e => e.Densidad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DENSIDAD");

                entity.Property(e => e.EsterasaLeucocitania)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESTERASA_LEUCOCITANIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Glucosa)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GLUCOSA");

                entity.Property(e => e.Hematies)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HEMATIES");

                entity.Property(e => e.Hemoglobina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HEMOGLOBINA");

                entity.Property(e => e.Leucocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LEUCOCITO");

                entity.Property(e => e.Linfocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LINFOCITO");

                entity.Property(e => e.Metodo1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO1");

                entity.Property(e => e.Metodo2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO2");

                entity.Property(e => e.Metodo3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO3");

                entity.Property(e => e.Metodo4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO4");

                entity.Property(e => e.Monocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MONOCITO");

                entity.Property(e => e.Nitrito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NITRITO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Olor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OLOR");

                entity.Property(e => e.Otros)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OTROS");

                entity.Property(e => e.Piocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PIOCITO");

                entity.Property(e => e.Proteina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PROTEINA");

                entity.Property(e => e.Rango1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1");

                entity.Property(e => e.Rango2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2");

                entity.Property(e => e.Reaccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REACCION");

                entity.Property(e => e.ResultadoVerificado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RESULTADO_VERIFICADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Sangre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SANGRE");

                entity.Property(e => e.Und1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND1");

                entity.Property(e => e.Und2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND2");

                entity.Property(e => e.Und3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND3");

                entity.Property(e => e.Und4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND4");

                entity.Property(e => e.Urobilinogeno)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UROBILINOGENO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorReferencial1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL1");

                entity.Property(e => e.ValorReferencial2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL2");

                entity.Property(e => e.ValorReferencial3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL3");

                entity.Property(e => e.ValorReferencial4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL4");
            });

            modelBuilder.Entity<OpeFormatoLabvalor>(entity =>
            {
                entity.HasKey(e => new { e.Formato, e.Tipo });

                entity.ToTable("OPE_FORMATO_LABVALOR");

                entity.Property(e => e.Formato)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FORMATO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.AcidoAscorbico)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ACIDO_ASCORBICO");

                entity.Property(e => e.Aspecto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ASPECTO");

                entity.Property(e => e.Basofilo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BASOFILO");

                entity.Property(e => e.Bilirrubina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BILIRRUBINA");

                entity.Property(e => e.CelEpiteliales)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CEL_EPITELIALES");

                entity.Property(e => e.Cilindro)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CILINDRO");

                entity.Property(e => e.Color)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COLOR");

                entity.Property(e => e.Cristales)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CRISTALES");

                entity.Property(e => e.CuerpoCetonico)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CUERPO_CETONICO");

                entity.Property(e => e.Densidad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DENSIDAD");

                entity.Property(e => e.EsterasaLeucocitania)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ESTERASA_LEUCOCITANIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Glucosa)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GLUCOSA");

                entity.Property(e => e.Hematies)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HEMATIES");

                entity.Property(e => e.Hemoglobina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HEMOGLOBINA");

                entity.Property(e => e.Leucocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LEUCOCITO");

                entity.Property(e => e.Linfocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LINFOCITO");

                entity.Property(e => e.Metodo1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO1");

                entity.Property(e => e.Metodo2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO2");

                entity.Property(e => e.Metodo3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO3");

                entity.Property(e => e.Metodo4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO4");

                entity.Property(e => e.Monocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MONOCITO");

                entity.Property(e => e.Nitrito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NITRITO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Olor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OLOR");

                entity.Property(e => e.Otros)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OTROS");

                entity.Property(e => e.Piocito)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PIOCITO");

                entity.Property(e => e.Proteina)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PROTEINA");

                entity.Property(e => e.Rango1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1");

                entity.Property(e => e.Rango2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2");

                entity.Property(e => e.Reaccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REACCION");

                entity.Property(e => e.Sangre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SANGRE");

                entity.Property(e => e.T1)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.T2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.T3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.T4)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.T5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.T6)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Und1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND1");

                entity.Property(e => e.Und2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND2");

                entity.Property(e => e.Und3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND3");

                entity.Property(e => e.Und4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UND4");

                entity.Property(e => e.Urobilinogeno)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UROBILINOGENO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorReferencial1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL1");

                entity.Property(e => e.ValorReferencial2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL2");

                entity.Property(e => e.ValorReferencial3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL3");

                entity.Property(e => e.ValorReferencial4)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFERENCIAL4");
            });

            modelBuilder.Entity<OpeFre>(entity =>
            {
                entity.HasKey(e => e.NumeroFre);

                entity.ToTable("OPE_FRE");

                entity.Property(e => e.NumeroFre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.CdgEstado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.Contacto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTACTO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DniContacto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DNI_CONTACTO");

                entity.Property(e => e.EmailContacto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaComprometida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COMPROMETIDA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdCliente).HasColumnName("ID_CLIENTE");

                entity.Property(e => e.Notas)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("NOTAS");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.TelefonoContacto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeGastoAdicional>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_GASTO_ADICIONAL");

                entity.Property(e => e.CdgGasto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_GASTO");

                entity.Property(e => e.CdgMedi)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MEDI");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeGgPresupuesto>(entity =>
            {
                entity.HasKey(e => new { e.IdPresupuesto, e.Secuencia, e.CdgTabla, e.Codigo });

                entity.ToTable("OPE_GG_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.CdgTabla)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TABLA");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgUnidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD");

                entity.Property(e => e.Parcial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PARCIAL");

                entity.Property(e => e.Parcialme)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PARCIALME");

                entity.Property(e => e.Participacion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PARTICIPACION");

                entity.Property(e => e.Sueldo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUELDO");

                entity.Property(e => e.Sueldome)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUELDOME");

                entity.Property(e => e.Tiempo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIEMPO");
            });

            modelBuilder.Entity<OpeHabitacion>(entity =>
            {
                entity.HasKey(e => e.IdHabitacion);

                entity.ToTable("OPE_HABITACION");

                entity.Property(e => e.IdHabitacion)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_HABITACION");

                entity.Property(e => e.Abreviatura)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ABREVIATURA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.GrupoHabitacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_HABITACION");

                entity.Property(e => e.NoHabitacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NO_HABITACION")
                    .IsFixedLength(true);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.PaxMax)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("PAX_MAX");

                entity.Property(e => e.TipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_HABITACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeImpPresupuesto>(entity =>
            {
                entity.HasKey(e => new { e.IdPresupuesto, e.Codigo, e.Secuencia });

                entity.ToTable("OPE_IMP_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgUnidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Preciome)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIOME");

                entity.Property(e => e.Probabilidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PROBABILIDAD");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.Subtotalme)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUBTOTALME");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.Totalme)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTALME");
            });

            modelBuilder.Entity<OpeImpProdWeb>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_IMP_PROD_WEB");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreCarpeta)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CARPETA");

                entity.Property(e => e.NombreImagen)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_IMAGEN");

                entity.Property(e => e.Ruta)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("RUTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeIngresoImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_INGRESO_IMPORTACION");

                entity.Property(e => e.CdgCosteo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdg_costeo");

                entity.Property(e => e.FileImportacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("file_importacion");

                entity.Property(e => e.Ingreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ingreso");
            });

            modelBuilder.Entity<OpeInventarioFisico>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Almacen });

                entity.ToTable("OPE_INVENTARIO_FISICO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("codigo");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AnotadoPor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Anotado_por");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.ContadoPor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Contado_por");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaInventario)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_inventario");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.JefeEquipo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Jefe_equipo");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("observacion");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_KARDEX");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("mes");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("saldo");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeLabFre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_LAB_FRE");

                entity.Property(e => e.CdgEstado)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.CdgResponsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_RESPONSABLE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NumeroFre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Serie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeLetraCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_LETRA_CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoCanje)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_CANJE")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAnulacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULACION");

                entity.Property(e => e.FechaCanje)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CANJE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MonedaCanje)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA_CANJE");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumOrigA)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG_A");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumVoucA)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC_A");

                entity.Property(e => e.NumeroCanje)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CANJE");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.RucDoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_DOC");

                entity.Property(e => e.SwtCanje)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CANJE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtCuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CUO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeLetraProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_LETRA_PROVEEDOR");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoCanje)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_CANJE")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAnulacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULACION");

                entity.Property(e => e.FechaCanje)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CANJE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MonedaCanje)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA_CANJE");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumOrigA)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG_A");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.NumVoucA)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC_A");

                entity.Property(e => e.NumeroCanje)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CANJE");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.RucDoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_DOC");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeLibbco>(entity =>
            {
                entity.HasKey(e => new { e.CdgBco, e.NumCta, e.NumCor });

                entity.ToTable("OPE_LIBBCO");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Avance)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("AVANCE");

                entity.Property(e => e.CdgBco2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO2");

                entity.Property(e => e.CdgCta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.ConDocu)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CON_DOCU");

                entity.Property(e => e.DesPrv)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DES_PRV");

                entity.Property(e => e.Docs)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("DOCS");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRef1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_REF1");

                entity.Property(e => e.IdSd)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_SD");

                entity.Property(e => e.ImpDebe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DEBE");

                entity.Property(e => e.ImpHaber)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_HABER");

                entity.Property(e => e.ImpSaldo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_SALDO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MODULO")
                    .HasDefaultValueSql("('MB')")
                    .IsFixedLength(true);

                entity.Property(e => e.NumCorModulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR_MODULO");

                entity.Property(e => e.NumCta2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA2");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.SwtAtn)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ATN")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtEst)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_EST")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PRO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.Turno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeLimpiezaHabitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_LIMPIEZA_HABITACION");

                entity.Property(e => e.Entrada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENTRADA")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Habitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HABITACION");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdEmpleado)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_EMPLEADO");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Sabanas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SABANAS")
                    .IsFixedLength(true);

                entity.Property(e => e.Salida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SALIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.Toallas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TOALLAS")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeLiquidacionm>(entity =>
            {
                entity.HasKey(e => e.IdDocumento);

                entity.ToTable("OPE_LIQUIDACIONM");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.DatoProceso)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DATO_PROCESO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaAutoriza)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AUTORIZA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImpAdel1)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("IMP_ADEL1");

                entity.Property(e => e.ImpAdel2)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("IMP_ADEL2");

                entity.Property(e => e.ImpAdel3)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("IMP_ADEL3");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.SwtCobre)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_COBRE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPlomo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PLOMO")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtZinc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ZINC")
                    .IsFixedLength(true);

                entity.Property(e => e.TmhProcesado)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("TMH_PROCESADO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.TotalIngresado)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("TOTAL_INGRESADO");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_AUTORIZA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpeListaPrecio>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.CodigoEmpresa, e.CodigoSucursal, e.IdProducto, e.IdTipoCliente, e.Moneda, e.Unidad, e.FactorConversion })
                    .HasName("PK_OPE_LISTA_PRECIO$");

                entity.ToTable("OPE_LISTA_PRECIO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdTipoCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_CLIENTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.AutoP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_P")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoBase)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BASE");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.PrecioMinimo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_MINIMO");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeListaPrecio2>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.CodigoEmpresa, e.CodigoSucursal, e.IdProducto, e.IdTipoCliente, e.Moneda })
                    .HasName("PK_OPE_LISTA_PRECIO");

                entity.ToTable("OPE_LISTA_PRECIO2");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdTipoCliente)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_CLIENTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Margen2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN2");

                entity.Property(e => e.Margen3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN3");

                entity.Property(e => e.Margen4)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN4");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.PrecioVenta2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA2");

                entity.Property(e => e.PrecioVenta3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA3");

                entity.Property(e => e.PrecioVenta4)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA4");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.HasOne(d => d.CodigoNavigation)
                    .WithMany(p => p.OpeListaPrecio2s)
                    .HasForeignKey(d => d.Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_LISTA_PRECIO_OPE_CLISTA_PRECIO");
            });

            modelBuilder.Entity<OpeLote>(entity =>
            {
                entity.HasKey(e => e.Numero);

                entity.ToTable("OPE_LOTE");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<OpeMaquina>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.Numero });

                entity.ToTable("OPE_MAQUINA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeMesa>(entity =>
            {
                entity.HasKey(e => new { e.Piso, e.IdMesa });

                entity.ToTable("OPE_MESA");

                entity.Property(e => e.Piso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PISO");

                entity.Property(e => e.IdMesa).HasColumnName("ID_MESA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoTrans)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_TRANS")
                    .IsFixedLength(true);

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.NombreMozo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_MOZO")
                    .IsFixedLength(true);

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");
            });

            modelBuilder.Entity<OpeMovbcoReq>(entity =>
            {
                entity.HasKey(e => e.IdMovimiento);

                entity.ToTable("OPE_MOVBCO_REQ");

                entity.Property(e => e.IdMovimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_MOVIMIENTO");

                entity.Property(e => e.CdgBcoEmp)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO_EMP");

                entity.Property(e => e.Cmitf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CMITF");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CtaCteEmp)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTA_CTE_EMP");

                entity.Property(e => e.Detraccion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Docs)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DOCS");

                entity.Property(e => e.Docs2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DOCS2");

                entity.Property(e => e.FechMovBco)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_MOV_BCO");

                entity.Property(e => e.Girado)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GIRADO");

                entity.Property(e => e.ImpBco)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_BCO");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TC");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpeMovimientoDinero>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_MOVIMIENTO_DINERO");

                entity.Property(e => e.Cajero)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CAJERO");

                entity.Property(e => e.CdgConcepto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CONCEPTO");

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursalDestino)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL_DESTINO")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursalOrigen)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL_ORIGEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Concepto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.EsTraslado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ES_TRASLADO")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaApertura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APERTURA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRecepcion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RECEPCION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdMovimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_MOVIMIENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoMov)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOV")
                    .IsFixedLength(true);

                entity.Property(e => e.Turno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeMpDocven>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_MP_DOCVEN");

                entity.Property(e => e.CdgFp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FP");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgMp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MP");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Imp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Propina)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("PROPINA");
            });

            modelBuilder.Entity<OpeMpPedven>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_MP_PEDVEN");

                entity.Property(e => e.CdgFp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FP");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgMp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MP");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Imp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ORDEN");
            });

            modelBuilder.Entity<OpeNiGastoImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_NI_GASTO_IMPORTACION");

                entity.Property(e => e.CdgCosteo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdg_costeo");

                entity.Property(e => e.CdgGasto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cdg_gasto");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cuenta");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("glosa");

                entity.Property(e => e.NigaFileImportacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("niga_file_importacion");

                entity.Property(e => e.NigaImporteDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("niga_importe_dolar");

                entity.Property(e => e.NigaIngreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("niga_ingreso");

                entity.Property(e => e.NigaNumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("niga_num_docu");

                entity.Property(e => e.NigaPorcentaje)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("niga_porcentaje");

                entity.Property(e => e.NigaProrrateo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("niga_prorrateo")
                    .IsFixedLength(true);

                entity.Property(e => e.NigaRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("niga_ruc");

                entity.Property(e => e.NigaTc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("niga_tc");

                entity.Property(e => e.NigaTipoDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("niga_tipo_documento");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");

                entity.Property(e => e.SecuenciaDocu).HasColumnName("secuencia_docu");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<OpeNotaCobranza>(entity =>
            {
                entity.HasKey(e => e.IdSeguimiento);

                entity.ToTable("OPE_NOTA_COBRANZA");

                entity.Property(e => e.IdSeguimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SEGUIMIENTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaProximoSeg)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROXIMO_SEG");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Nota)
                    .IsRequired()
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeNotaProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_NOTA_PROYECTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Nota)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeNotasReq>(entity =>
            {
                entity.HasKey(e => e.IdNota);

                entity.ToTable("OPE_NOTAS_REQ");

                entity.Property(e => e.IdNota)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_NOTA");

                entity.Property(e => e.CodigoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REQUERIMIENTO");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("date")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .HasDefaultValueSql("('U')")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeNumeroDocumento>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.TipoDocumento, e.Serie });

                entity.ToTable("OPE_NUMERO_DOCUMENTO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.NumeroFin)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FIN");

                entity.Property(e => e.NumeroInicio)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_INICIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeOcdcProrrateo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_OCDC_PRORRATEO");

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgGasto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_GASTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("numeric(5, 3)")
                    .HasColumnName("PORCENTAJE");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeOdocumentoCompra>(entity =>
            {
                entity.HasKey(e => new { e.NumCor, e.Tdoc, e.NumDocu, e.Ruc, e.TdocComp, e.NumDocuComp, e.RucComp });

                entity.ToTable("OPE_ODOCUMENTO_COMPRA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TdocComp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TDOC_COMP");

                entity.Property(e => e.NumDocuComp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU_COMP");

                entity.Property(e => e.RucComp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_COMP");

                entity.Property(e => e.AutoG)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_G")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImporteTransaccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_TRANSACCION");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeOfprProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_OFPR_PRODUCTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cantidad2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD2");

                entity.Property(e => e.Cantidad3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD3");

                entity.Property(e => e.Cantidad4)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD4");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Descuento1)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("DESCUENTO1");

                entity.Property(e => e.Descuento2)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("DESCUENTO2");

                entity.Property(e => e.Descuento3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO3");

                entity.Property(e => e.Descuento4)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO4");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdTipoCliente)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_CLIENTE");
            });

            modelBuilder.Entity<OpeOrdenCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ORDEN_COMPRA");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Atencion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ATENCION");

                entity.Property(e => e.BillNetPriceTo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("BILL_NET_PRICE_TO");

                entity.Property(e => e.CdgCoti)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COTI");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.EntregaFactura)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ENTREGA_FACTURA");

                entity.Property(e => e.EntregaMaterial)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ENTREGA_MATERIAL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaAutorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AUTORIZACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.FechaEstimadaEmbarque)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ESTIMADA_EMBARQUE");

                entity.Property(e => e.FechaEstimadaLlegada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ESTIMADA_LLEGADA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Flete)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FLETE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IdOc)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Incoterms)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("INCOTERMS");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.MedioTransporte)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MEDIO_TRANSPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.MotiOrco)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTI_ORCO");

                entity.Property(e => e.Num)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.OrdenPedido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_PEDIDO");

                entity.Property(e => e.PagoAdelantado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGO_ADELANTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.PorcentajeDscto)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_DSCTO");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.RefNum)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("REF_NUM");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Requi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REQUI");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");

                entity.Property(e => e.ShipOrder)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SHIP_ORDER");

                entity.Property(e => e.ShipTo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SHIP_TO");

                entity.Property(e => e.ShippingMarks)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SHIPPING_MARKS");

                entity.Property(e => e.SwtIgv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IGV")
                    .HasDefaultValueSql("((1))")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(12, 6)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_AUTORIZA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorAfecto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_AFECTO");

                entity.Property(e => e.ValorCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMPRA");

                entity.Property(e => e.ValorInafecto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_INAFECTO");
            });

            modelBuilder.Entity<OpeOrdenFabricacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ORDEN_FABRICACION");

                entity.Property(e => e.AProducir)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("a_producir");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgPlan)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PLAN");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("codigo");

                entity.Property(e => e.CostoUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_unitario");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("estado")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.FechaCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_cierre");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_vencimiento");

                entity.Property(e => e.IdParent)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("id_parent");

                entity.Property(e => e.IdPedido).HasColumnName("id_pedido");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Producido)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("producido");

                entity.Property(e => e.Ref1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ref1");

                entity.Property(e => e.Ref2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ref2");

                entity.Property(e => e.Ref3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ref3");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("secuencia");

                entity.Property(e => e.TipoOf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OF")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpeOrdenFabricacionSerielote>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ORDEN_FABRICACION_SERIELOTE");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoOf)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_OF");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("('P')")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.NumEmbalaje)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_EMBALAJE");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeOrdenServicio>(entity =>
            {
                entity.HasKey(e => e.CodigoServicio);

                entity.ToTable("OPE_ORDEN_SERVICIO");

                entity.Property(e => e.CodigoServicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SERVICIO");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoProd)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PROD");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeOrdenTrabajo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_ORDEN_TRABAJO");

                entity.Property(e => e.CdgResponsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_RESPONSABLE");

                entity.Property(e => e.CodigoOrdenTrabajo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ORDEN_TRABAJO");

                entity.Property(e => e.CodigoServicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SERVICIO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeOtPedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_OT_PEDIDO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgOp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgOt)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OT");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");
            });

            modelBuilder.Entity<OpePagoCliente>(entity =>
            {
                entity.HasKey(e => e.NumeroCobro);

                entity.ToTable("OPE_PAGO_CLIENTE");

                entity.Property(e => e.NumeroCobro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COBRO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Caja)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAJA")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.Cobrador)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.ImportePaga)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGA");

                entity.Property(e => e.ImporteVuelto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_VUELTO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.RefBanc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REF_BANC");

                entity.Property(e => e.SwtCuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CUO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpePagoTrabajador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PAGO_TRABAJADOR");

                entity.Property(e => e.CdgBco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgMonOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON_ORI");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgVend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VEND");

                entity.Property(e => e.FecPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_PAGO");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImpPago)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAGO");

                entity.Property(e => e.ImpPagoDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAGO_DOLAR");

                entity.Property(e => e.ImpPagoSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAGO_SOLES");

                entity.Property(e => e.NumCheq)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR")
                    .IsFixedLength(true);

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeParametro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PARAMETRO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<OpeParqueoVehiculo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PARQUEO_VEHICULO");

                entity.Property(e => e.DescripcionVehiculo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_VEHICULO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SALIDA");

                entity.Property(e => e.HoraIatp)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("HORA_IATP");

                entity.Property(e => e.HoraIngreso)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("HORA_INGRESO")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraSalida)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("HORA_SALIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdMovimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_MOVIMIENTO");

                entity.Property(e => e.ImporteIatp)
                    .HasColumnType("numeric(8, 3)")
                    .HasColumnName("IMPORTE_IATP");

                entity.Property(e => e.MinIatp)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("MIN_IATP");

                entity.Property(e => e.NumCochera)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COCHERA");

                entity.Property(e => e.NumPlaca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PLACA");

                entity.Property(e => e.TarifaIatp)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("TARIFA_IATP");

                entity.Property(e => e.TipoVehiculo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEHICULO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpePedido>(entity =>
            {
                entity.HasKey(e => e.IdPedido)
                    .IsClustered(false);

                entity.ToTable("OPE_PEDIDO");

                entity.HasIndex(e => e.NumeroPedido, "PK_CODIGO_PEDIDO")
                    .IsClustered();

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.BancoGa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO_GA");

                entity.Property(e => e.Calendario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CALENDARIO");

                entity.Property(e => e.CantidadAnoContrato)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CANTIDAD_ANO_CONTRATO");

                entity.Property(e => e.CdgMensajero)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MENSAJERO");

                entity.Property(e => e.CdgSceco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCECO");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoCpago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CPAGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MONEDA");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR");

                entity.Property(e => e.CodigoVendedorAsignado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR_ASIGNADO");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Contacto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONTACTO");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.CreatedOnUtc).HasColumnType("datetime");

                entity.Property(e => e.CustomerId).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.CustomerIp)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Delivery)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERY")
                    .IsFixedLength(true);

                entity.Property(e => e.EmailContacto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.EstadoFactura)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_FACTURA")
                    .IsFixedLength(true);

                entity.Property(e => e.Estadoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADOC")
                    .IsFixedLength(true);

                entity.Property(e => e.Estatus)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTATUS");

                entity.Property(e => e.FacturaAdelantada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FACTURA_ADELANTADA")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAutorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AUTORIZACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFinalizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FINALIZACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PEDIDO");

                entity.Property(e => e.FechaProcesable)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROCESABLE");

                entity.Property(e => e.FechaProgramada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROGRAMADA");

                entity.Property(e => e.FechaProgramadaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROGRAMADA_ENTREGA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FormaDePago1InicialHoy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_DE_PAGO_1_INICIAL_HOY");

                entity.Property(e => e.FpGa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FP_GA");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdClienteFactura).HasColumnName("ID_CLIENTE_FACTURA");

                entity.Property(e => e.IdCotizacion).HasColumnName("ID_COTIZACION");

                entity.Property(e => e.IdOportunidad)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OPORTUNIDAD");

                entity.Property(e => e.IdOrder).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.ImporteDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DESCUENTO");

                entity.Property(e => e.ImporteIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_IGV");

                entity.Property(e => e.ImporteIsc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_ISC");

                entity.Property(e => e.ImporteStot)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_STOT");

                entity.Property(e => e.ImporteTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_TOTAL");

                entity.Property(e => e.Inicial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INICIAL");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.Mesa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MESA");

                entity.Property(e => e.MontoAFinanciar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_A_FINANCIAR");

                entity.Property(e => e.MontoCuotaMensual)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_CUOTA_MENSUAL");

                entity.Property(e => e.MontoGa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_GA");

                entity.Property(e => e.MontoInicialHoy)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_INICIAL_HOY");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.NumCuotaFinanciar)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_CUOTA_FINANCIAR");

                entity.Property(e => e.NumeroOcliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_OCLIENTE");

                entity.Property(e => e.NumeroPedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.Numpain)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMPAIN");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.OrdeStatus)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.OrderGuid)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OrderTotal).HasColumnType("numeric(14, 4)");

                entity.Property(e => e.PaidDateUtc).HasColumnType("datetime");

                entity.Property(e => e.Pax)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("PAX")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PaymentMethodAdditionalFeeExclTax).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.PaymentMethodAdditionalFeeInclTax).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.PaymentMethodSystemName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentStatusId)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Piso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PISO");

                entity.Property(e => e.PorcentajeDescuento)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("PORCENTAJE_DESCUENTO");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.PorcentajeInicial)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_INICIAL");

                entity.Property(e => e.PorcentajeInicialHoy)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_INICIAL_HOY");

                entity.Property(e => e.PorcentajeInteresMensual)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_INTERES_MENSUAL");

                entity.Property(e => e.PorcentajeMontoFinanciar)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_MONTO_FINANCIAR");

                entity.Property(e => e.PrecioPunto)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRECIO_PUNTO");

                entity.Property(e => e.PrimerAnoUso)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PRIMER_ANO_USO")
                    .IsFixedLength(true);

                entity.Property(e => e.PuntoVenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PUNTO_VENTA")
                    .HasDefaultValueSql("((0))")
                    .IsFixedLength(true);

                entity.Property(e => e.Puntos)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("PUNTOS");

                entity.Property(e => e.Redondeo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REDONDEO")
                    .HasDefaultValueSql("('0')")
                    .IsFixedLength(true);

                entity.Property(e => e.RefGa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REF_GA");

                entity.Property(e => e.Sinicial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SINICIAL");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.SwtEsta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_ESTA")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PD")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtWeb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WEB")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoContrato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CONTRATO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoDscto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DSCTO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioAutoriza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_AUTORIZA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValPercepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VAL_PERCEPCION");

                entity.Property(e => e.Validez)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALIDEZ");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.VencGa)
                    .HasColumnType("datetime")
                    .HasColumnName("VENC_GA");

                entity.Property(e => e.VencPrimeraCuota)
                    .HasColumnType("datetime")
                    .HasColumnName("VENC_PRIMERA_CUOTA");
            });

            modelBuilder.Entity<OpePedidoGiroIcomplementarium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PEDIDO_GIRO_ICOMPLEMENTARIA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.GiroIcomplementaria)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GIRO_ICOMPLEMENTARIA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.MontoGiroIcomplementaria)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_GIRO_ICOMPLEMENTARIA");

                entity.Property(e => e.NoAplica1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO_APLICA1");

                entity.Property(e => e.NoAplica2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO_APLICA2");

                entity.Property(e => e.NoAplica3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO_APLICA3");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.VencGiroIcomplementaria)
                    .HasColumnType("datetime")
                    .HasColumnName("VENC_GIRO_ICOMPLEMENTARIA");
            });

            modelBuilder.Entity<OpePedidoMesa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PEDIDO_MESA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdMesa)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("ID_MESA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPedidoo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDOO");

                entity.Property(e => e.Piso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PISO");
            });

            modelBuilder.Entity<OpePedidoPagoIhoy>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.Secuencia })
                    .HasName("PK_PEDIDO_PAGO_IHOY");

                entity.ToTable("OPE_PEDIDO_PAGO_IHOY");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.BancoTarjetaPagoInicialHoy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BANCO_TARJETA_PAGO_INICIAL_HOY");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaPagoInicialHoy)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO_INICIAL_HOY");

                entity.Property(e => e.FormaPagoInicialHoy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO_INICIAL_HOY");

                entity.Property(e => e.MontoPagoInicialHoy)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_PAGO_INICIAL_HOY");

                entity.Property(e => e.ReferenciaPagoInicialHoy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA_PAGO_INICIAL_HOY");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpePedidoPuntaje>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.Ano, e.Mes });

                entity.ToTable("OPE_PEDIDO_PUNTAJE");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Puntaje)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("PUNTAJE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpePermisoPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PERMISO_PERSONA");

                entity.Property(e => e.Almuerzo).HasColumnName("ALMUERZO");

                entity.Property(e => e.Break1).HasColumnName("BREAK1");

                entity.Property(e => e.Cena).HasColumnName("CENA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Desayuno).HasColumnName("DESAYUNO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Lonche).HasColumnName("LONCHE");

                entity.Property(e => e.Referencia1).HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2).HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3).HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4).HasColumnName("REFERENCIA4");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpePersona>(entity =>
            {
                entity.HasKey(e => e.IdPersona);

                entity.ToTable("OPE_PERSONA");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.AfectoSpot)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_SPOT")
                    .IsFixedLength(true);

                entity.Property(e => e.AgentePercepcion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AGENTE_PERCEPCION")
                    .IsFixedLength(true);

                entity.Property(e => e.AgenteRetencion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AGENTE_RETENCION")
                    .IsFixedLength(true);

                entity.Property(e => e.ApellidoMaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_MATERNO");

                entity.Property(e => e.ApellidoPaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_PATERNO");

                entity.Property(e => e.Area)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Banco1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BANCO1");

                entity.Property(e => e.BuenContribuyente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BUEN_CONTRIBUYENTE")
                    .IsFixedLength(true);

                entity.Property(e => e.CanalVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CANAL_VENTA");

                entity.Property(e => e.CargoContacto1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_CONTACTO1");

                entity.Property(e => e.CargoContacto2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_CONTACTO2");

                entity.Property(e => e.CargoContacto3)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_CONTACTO3");

                entity.Property(e => e.CategoriaTrab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA_TRAB")
                    .IsFixedLength(true);

                entity.Property(e => e.CelularContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR_CONTACTO1");

                entity.Property(e => e.CelularContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR_CONTACTO2");

                entity.Property(e => e.CelularContacto3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR_CONTACTO3");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.CodigoSucursal2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL2");

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Cuenta1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA1");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.DirrecionContacto1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRRECION_CONTACTO1");

                entity.Property(e => e.DirrecionContacto2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRRECION_CONTACTO2");

                entity.Property(e => e.DirrecionContacto3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRRECION_CONTACTO3");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.EditaPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDITA_PRECIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.EmailContacto1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO1");

                entity.Property(e => e.EmailContacto2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO2");

                entity.Property(e => e.EmailContacto3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_CONTACTO3");

                entity.Property(e => e.EmailFe)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_FE");

                entity.Property(e => e.EntregaDocumento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENTREGA_DOCUMENTO")
                    .IsFixedLength(true);

                entity.Property(e => e.Especialidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESPECIALIDAD");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoCivil)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_CIVIL");

                entity.Property(e => e.EstadoHnh)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_HNH");

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FechCese)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_CESE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_NACIMIENTO");

                entity.Property(e => e.FormaAtencion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_ATENCION");

                entity.Property(e => e.IdProspecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROSPECTO");

                entity.Property(e => e.IdReferencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REFERENCIA");

                entity.Property(e => e.Ilimitado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ILIMITADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Imagen)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN");

                entity.Property(e => e.LineaCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("LINEA_CREDITO");

                entity.Property(e => e.LineaCreditoD)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("LINEA_CREDITO_D");

                entity.Property(e => e.ListaPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LISTA_PRECIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Lote)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.NextelContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NEXTEL_CONTACTO1");

                entity.Property(e => e.NextelContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NEXTEL_CONTACTO2");

                entity.Property(e => e.NextelContacto3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NEXTEL_CONTACTO3");

                entity.Property(e => e.NivelRiesgo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_RIESGO");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NombreComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_COMERCIAL");

                entity.Property(e => e.NombreContacto1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO1");

                entity.Property(e => e.NombreContacto2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO2");

                entity.Property(e => e.NombreContacto3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO3");

                entity.Property(e => e.NumeroContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CONTACTO1");

                entity.Property(e => e.NumeroContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CONTACTO2");

                entity.Property(e => e.NumeroContacto3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CONTACTO3");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Ocupacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OCUPACION");

                entity.Property(e => e.OrigenClie)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORIGEN_CLIE");

                entity.Property(e => e.PaginaWeb)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PAGINA_WEB");

                entity.Property(e => e.Pais)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.PorPercepcion)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("POR_PERCEPCION");

                entity.Property(e => e.ProveedorAgualuz)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR_AGUALUZ")
                    .IsFixedLength(true);

                entity.Property(e => e.Provincia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.RazonSocial)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RAZON_SOCIAL");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Region)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REGION");

                entity.Property(e => e.Representante)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REPRESENTANTE");

                entity.Property(e => e.RpcContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RPC_CONTACTO1");

                entity.Property(e => e.RpcContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RPC_CONTACTO2");

                entity.Property(e => e.RpcContacto3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RPC_CONTACTO3");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Ruc2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC2");

                entity.Property(e => e.RucRef)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_REF");

                entity.Property(e => e.RutaImagen)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_IMAGEN");

                entity.Property(e => e.RutaVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_VENTA");

                entity.Property(e => e.SectorEconomico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SECTOR_ECONOMICO");

                entity.Property(e => e.Seguro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEGURO");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEXO");

                entity.Property(e => e.SubcanalVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SUBCANAL_VENTA");

                entity.Property(e => e.SubsectorEconomico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SUBSECTOR_ECONOMICO");

                entity.Property(e => e.TasaInteres)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TASA_INTERES");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.Telefono2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO2");

                entity.Property(e => e.TelefonoContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO1");

                entity.Property(e => e.TelefonoContacto2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO2");

                entity.Property(e => e.TelefonoContacto3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO3");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CLIENTE");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoPaciente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PACIENTE");

                entity.Property(e => e.TipoPersona)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PERSONA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.ZonaVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VENTA");
            });

            modelBuilder.Entity<OpePlanFabricacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PLAN_FABRICACION");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("codigo");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("estado");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_fin");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_inicio");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<OpePlanFactGasto>(entity =>
            {
                entity.HasKey(e => new { e.Tipo, e.IdProyecto, e.Ano });

                entity.ToTable("OPE_PLAN_FACT_GASTO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Abril)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ABRIL");

                entity.Property(e => e.Agosto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("AGOSTO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.Diciembre)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DICIEMBRE");

                entity.Property(e => e.Enero)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ENERO");

                entity.Property(e => e.Febrero)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FEBRERO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Julio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("JULIO");

                entity.Property(e => e.Junio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("JUNIO");

                entity.Property(e => e.Marzo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARZO");

                entity.Property(e => e.Mayo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MAYO");

                entity.Property(e => e.Noviembre)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("NOVIEMBRE");

                entity.Property(e => e.Octubre)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("OCTUBRE");

                entity.Property(e => e.Setiembre)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SETIEMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpePlanFacturacionOc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PLAN_FACTURACION_OC");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEstimada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ESTIMADA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Item)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("ITEM");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<OpePlantillaRecetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PLANTILLA_RECETA");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Imprime)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IMPRIME")
                    .IsFixedLength(true);

                entity.Property(e => e.ListaPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LISTA_PRECIO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.TipoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LISTA")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpePresupuesto>(entity =>
            {
                entity.HasKey(e => e.IdPresupuesto);

                entity.ToTable("OPE_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.CantMesesFact)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_MESES_FACT");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANTIDAD_SERVICIO");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgIng)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ING");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.EjecProy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EJEC_PROY");

                entity.Property(e => e.EstaProy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTA_PROY");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("('B')")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoAmpliacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_AMPLIACION")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacionA1)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION_A1");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO")
                    .HasDefaultValueSql("(CONVERT([char](10),getdate(),(103)))");

                entity.Property(e => e.FechaTermino)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_TERMINO");

                entity.Property(e => e.FrecuenciaServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("FRECUENCIA_SERVICIO");

                entity.Property(e => e.GananciaProyecto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("GANANCIA_PROYECTO");

                entity.Property(e => e.GastoAdministrativo)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_ADMINISTRATIVO");

                entity.Property(e => e.GastoGeneral)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_GENERAL");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdFacturar)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_FACTURAR");

                entity.Property(e => e.IdOportunidad)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OPORTUNIDAD");

                entity.Property(e => e.IdParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PARENT");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.IdRequerimiento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.ImpGgDirectome)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_GG_DIRECTOME");

                entity.Property(e => e.ImpGgDirectomn)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_GG_DIRECTOMN");

                entity.Property(e => e.ImpGgIndirectome)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_GG_INDIRECTOME");

                entity.Property(e => e.ImpGgIndirectomn)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_GG_INDIRECTOMN");

                entity.Property(e => e.ImpMe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_ME");

                entity.Property(e => e.ImpMn)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_MN");

                entity.Property(e => e.ImporteAdministrativo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_ADMINISTRATIVO");

                entity.Property(e => e.ImporteAmpliacion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_AMPLIACION");

                entity.Property(e => e.ImporteAproxFacturar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_APROX_FACTURAR");

                entity.Property(e => e.ImporteGeneral)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_GENERAL");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoAmpliacion1)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_AMPLIACION1");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.PorRentaRepartoutilidad)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_RENTA_REPARTOUTILIDAD");

                entity.Property(e => e.PorcentajeProyecto)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_PROYECTO");

                entity.Property(e => e.Renovacion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RENOVACION")
                    .HasDefaultValueSql("('NO')")
                    .IsFixedLength(true);

                entity.Property(e => e.RentaRepartoutilidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RENTA_REPARTOUTILIDAD");

                entity.Property(e => e.RespProy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RESP_PROY");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Servicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERVICIO");

                entity.Property(e => e.SubTipoServicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SUB_TIPO_SERVICIO");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.SwtFact)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FACT")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtMain)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_MAIN")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPres)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PRES")
                    .HasDefaultValueSql("('P')")
                    .IsFixedLength(true);

                entity.Property(e => e.TiempoOnside)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("TIEMPO_ONSIDE");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TotalAproxFacturar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_APROX_FACTURAR");

                entity.Property(e => e.TotalCostoOperativo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_COSTO_OPERATIVO");

                entity.Property(e => e.UsuarioAprobacionA1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION_A1");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.UtilidadAntesImpuesto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("UTILIDAD_ANTES_IMPUESTO");

                entity.Property(e => e.UtilidadNeta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("UTILIDAD_NETA");

                entity.Property(e => e.UtilidadOperativa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("UTILIDAD_OPERATIVA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpePresupuesto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PRESUPUESTO2");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgIng)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ING");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("('B')")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO")
                    .HasDefaultValueSql("(CONVERT([char](10),getdate(),(103)))");

                entity.Property(e => e.GastoAdministrativo)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_ADMINISTRATIVO");

                entity.Property(e => e.GastoGeneral)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_GENERAL");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PARENT");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdRequerimiento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.ImporteAdministrativo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_ADMINISTRATIVO");

                entity.Property(e => e.ImporteGeneral)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_GENERAL");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Servicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERVICIO");

                entity.Property(e => e.SwtMain)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_MAIN")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpeProducto>(entity =>
            {
                entity.HasKey(e => e.IdProducto);

                entity.ToTable("OPE_PRODUCTO");

                entity.HasIndex(e => e.CodigoBarra, "FK_CODIGO_BARRA_PRODUCTO");

                entity.HasIndex(e => e.Codigo, "FK_CODIGO_PRODUCTO");

                entity.HasIndex(e => e.Nombre, "FK_NOMBRE_PRODUCTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Adicional)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADICIONAL")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoIgv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_IGV")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoPercepcion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_PERCEPCION")
                    .IsFixedLength(true);

                entity.Property(e => e.Almuerzo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ALMUERZO")
                    .IsFixedLength(true);

                entity.Property(e => e.AplicaImporte)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("APLICA_IMPORTE");

                entity.Property(e => e.AplicaImporteDetraccion)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("APLICA_IMPORTE_DETRACCION");

                entity.Property(e => e.BienServicio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("BIEN_SERVICIO");

                entity.Property(e => e.Break1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BREAK1")
                    .IsFixedLength(true);

                entity.Property(e => e.CadaBulto)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CADA_BULTO");

                entity.Property(e => e.CantMinCompra)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANT_MIN_COMPRA");

                entity.Property(e => e.CantUnidadCompra)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("CANT_UNIDAD_COMPRA");

                entity.Property(e => e.CantUnidadEmpaqueCompra)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("CANT_UNIDAD_EMPAQUE_COMPRA");

                entity.Property(e => e.CantUnidadEmpaqueVenta)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("CANT_UNIDAD_EMPAQUE_VENTA");

                entity.Property(e => e.CantUnidadRec)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("CANT_UNIDAD_REC");

                entity.Property(e => e.CantUnidadVenta)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("CANT_UNIDAD_VENTA");

                entity.Property(e => e.CdgCaja)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CAJA");

                entity.Property(e => e.CdgCasillero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CASILLERO");

                entity.Property(e => e.CdgColumna)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COLUMNA");

                entity.Property(e => e.Cena)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CENA")
                    .IsFixedLength(true);

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoAnterior)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ANTERIOR");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ComisionContado)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("COMISION_CONTADO");

                entity.Property(e => e.ComisionCredito)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("COMISION_CREDITO");

                entity.Property(e => e.Compra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMPRA")
                    .IsFixedLength(true);

                entity.Property(e => e.CondicionClinica)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_CLINICA");

                entity.Property(e => e.CondicionContenedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_CONTENEDOR");

                entity.Property(e => e.CondicionMuestra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_MUESTRA");

                entity.Property(e => e.CondicionPaciente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PACIENTE");

                entity.Property(e => e.CostoConIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_CON_IGV");

                entity.Property(e => e.CuentaCompra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_COMPRA");

                entity.Property(e => e.CuentaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_VENTA");

                entity.Property(e => e.Desayuno)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DESAYUNO");

                entity.Property(e => e.DescripcionExtendida)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_EXTENDIDA");

                entity.Property(e => e.DestinoComanda)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DESTINO_COMANDA");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.EditaDescripcion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDITA_DESCRIPCION")
                    .IsFixedLength(true);

                entity.Property(e => e.EditaPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDITA_PRECIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FactorMes)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("FACTOR_MES");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.GrupUmed)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GRUP_UMED");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.GrupoPlanificacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO_PLANIFICACION");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdCategoria1)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("IdCategoria");

                entity.Property(e => e.IdEquiProd)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_EQUI_PROD");

                entity.Property(e => e.IdSubCategoria).HasColumnType("numeric(7, 0)");

                entity.Property(e => e.IdTipoProducto)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRODUCTO");

                entity.Property(e => e.IdUnidadCompra)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_COMPRA");

                entity.Property(e => e.IdUnidadEmpaqueCompra)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_EMPAQUE_COMPRA");

                entity.Property(e => e.IdUnidadEmpaqueVenta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_EMPAQUE_VENTA");

                entity.Property(e => e.IdUnidadInventario)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_INVENTARIO");

                entity.Property(e => e.IdUnidadPagoEmpresa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_PAGO_EMPRESA");

                entity.Property(e => e.IdUnidadPagoTrabajador)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_PAGO_TRABAJADOR");

                entity.Property(e => e.IdUnidadRec)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_REC");

                entity.Property(e => e.IdUnidadVenta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_VENTA");

                entity.Property(e => e.IgvCosto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV_COSTO");

                entity.Property(e => e.Indicador)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INDICADOR")
                    .IsFixedLength(true);

                entity.Property(e => e.IntervaloPedido)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("INTERVALO_PEDIDO");

                entity.Property(e => e.Inventariable)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIABLE")
                    .IsFixedLength(true);

                entity.Property(e => e.Inventario)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIO")
                    .HasDefaultValueSql("('0')")
                    .IsFixedLength(true);

                entity.Property(e => e.Lonche)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LONCHE")
                    .IsFixedLength(true);

                entity.Property(e => e.ManejaLote)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANEJA_LOTE")
                    .IsFixedLength(true);

                entity.Property(e => e.ManejaSerie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANEJA_SERIE")
                    .IsFixedLength(true);

                entity.Property(e => e.Marca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Maximo)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MAXIMO");

                entity.Property(e => e.Maxpiso)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("MAXPISO");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.MetodoAbastecimiento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("METODO_ABASTECIMIENTO");

                entity.Property(e => e.Minimo)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("MINIMO");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.ModeloGestionInventario)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MODELO_GESTION_INVENTARIO")
                    .IsFixedLength(true);

                entity.Property(e => e.Multiplicador)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MULTIPLICADOR");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumAfa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_AFA");

                entity.Property(e => e.NumAfa2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_AFA2");

                entity.Property(e => e.NumAfa3)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_AFA3");

                entity.Property(e => e.NumComp)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COMP");

                entity.Property(e => e.NumConc)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CONC");

                entity.Property(e => e.NumGen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_GEN");

                entity.Property(e => e.NumLab)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_LAB");

                entity.Property(e => e.NumLab2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_LAB2");

                entity.Property(e => e.NumPre)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PRE");

                entity.Property(e => e.NumRefmed)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REFMED");

                entity.Property(e => e.NumViad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VIAD");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PagoEmpresa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_EMPRESA");

                entity.Property(e => e.PagoTrabajador)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_TRABAJADOR");

                entity.Property(e => e.PedidoMultiple)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PEDIDO_MULTIPLE");

                entity.Property(e => e.PercepcionVenta)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PERCEPCION_VENTA");

                entity.Property(e => e.PeriodoPasado)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PERIODO_PASADO");

                entity.Property(e => e.Peso)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PESO");

                entity.Property(e => e.PesoEmpaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PESO_EMPA_VENTA");

                entity.Property(e => e.Precio1).HasColumnType("numeric(14, 4)");

                entity.Property(e => e.Precio2).HasColumnType("numeric(14, 4)");

                entity.Property(e => e.Precio3).HasColumnType("numeric(14, 4)");

                entity.Property(e => e.Precio4).HasColumnType("numeric(14, 4)");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.PrecioComprad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRAD");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Presentacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("PRESENTACION");

                entity.Property(e => e.Procedencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROCEDENCIA");

                entity.Property(e => e.Promocion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PROMOCION")
                    .IsFixedLength(true);

                entity.Property(e => e.ProveedorPreferido).HasColumnName("PROVEEDOR_PREFERIDO");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.Referencia6)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA6");

                entity.Property(e => e.Referencia7)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA7");

                entity.Property(e => e.RutaFicha)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_FICHA");

                entity.Property(e => e.RutaImagen)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_IMAGEN");

                entity.Property(e => e.StockMaximo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("STOCK_MAXIMO");

                entity.Property(e => e.StockMinimo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("STOCK_MINIMO");

                entity.Property(e => e.StockSeguridad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("STOCK_SEGURIDAD");

                entity.Property(e => e.Subgrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SUBGRUPO");

                entity.Property(e => e.SwtImp1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP1")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtReme)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_REME")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtResta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_RESTA")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtWeb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WEB")
                    .IsFixedLength(true);

                entity.Property(e => e.TamanoLote)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TAMANO_LOTE");

                entity.Property(e => e.TecnicaReposicion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TECNICA_REPOSICION");

                entity.Property(e => e.TiempoEntrega)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("TIEMPO_ENTREGA");

                entity.Property(e => e.TiempoRetraso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("TIEMPO_RETRASO");

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");

                entity.Property(e => e.UnidadValor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_VALOR");

                entity.Property(e => e.UnidadVenceEn)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_VENCE_EN");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.VenceEn)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("VENCE_EN");

                entity.Property(e => e.Vencimiento)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("VENCIMIENTO");

                entity.Property(e => e.Venta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VENTA")
                    .IsFixedLength(true);

                entity.Property(e => e.VentaMasiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VENTA_MASIVA")
                    .IsFixedLength(true);

                entity.Property(e => e.VmaH)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMA_H");

                entity.Property(e => e.VmaM)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMA_M");

                entity.Property(e => e.VmiH)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMI_H");

                entity.Property(e => e.VmiM)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMI_M");

                entity.Property(e => e.Xcm)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("XCM");

                entity.Property(e => e.XcmEmpaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("XCM_EMPA_VENTA");

                entity.Property(e => e.Ycm)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("YCM");

                entity.Property(e => e.YcmEmpaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("YCM_EMPA_VENTA");

                entity.Property(e => e.Zcm)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("ZCM");

                entity.Property(e => e.ZcmEmpaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZCM_EMPA_VENTA");
            });

            modelBuilder.Entity<OpeProductoImagen>(entity =>
            {
                entity.HasKey(e => e.IdProducto);

                entity.ToTable("OPE_PRODUCTO_IMAGEN");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Imagen1)
                    .IsRequired()
                    .HasColumnName("IMAGEN1");

                entity.Property(e => e.NombreImagen1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_IMAGEN1");
            });

            modelBuilder.Entity<OpeProductoSucursal>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.IdProducto });

                entity.ToTable("OPE_PRODUCTO_SUCURSAL");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdUnidadPagoEmpresa)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_PAGO_EMPRESA");

                entity.Property(e => e.IdUnidadPagoTrabajador)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_UNIDAD_PAGO_TRABAJADOR");

                entity.Property(e => e.PagoEmpresa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_EMPRESA");

                entity.Property(e => e.PagoTrabajador)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_TRABAJADOR");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeProgramacionMn>(entity =>
            {
                entity.HasKey(e => new { e.IdMn, e.Fecha, e.IdProducto, e.Tipo })
                    .HasName("PK_OPE_PROGRAMACION_MENU");

                entity.ToTable("OPE_PROGRAMACION_MN");

                entity.Property(e => e.IdMn)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_MN");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeProgramacionPago>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.Num });

                entity.ToTable("OPE_PROGRAMACION_PAGO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Num)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.CdgBanco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BANCO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.ImporteMe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_ME");

                entity.Property(e => e.ImporteMn)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_MN");

                entity.Property(e => e.NumCta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpePromocionProducto>(entity =>
            {
                entity.HasKey(e => e.IdPromocion);

                entity.ToTable("OPE_PROMOCION_PRODUCTO");

                entity.Property(e => e.IdPromocion)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PROMOCION");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoKit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_KIT");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeProspecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PROSPECTO");

                entity.Property(e => e.ApellidoMaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_MATERNO");

                entity.Property(e => e.ApellidoPaterno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_PATERNO");

                entity.Property(e => e.CanalVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CANAL_VENTA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.EmailFe)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL_FE");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.GiroEmpresa)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GIRO_EMPRESA");

                entity.Property(e => e.IdProspecto)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PROSPECTO");

                entity.Property(e => e.InicioEmpresa)
                    .HasColumnType("datetime")
                    .HasColumnName("INICIO_EMPRESA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PaginaWeb)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PAGINA_WEB");

                entity.Property(e => e.Pais)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.RazonSocial)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RAZON_SOCIAL");

                entity.Property(e => e.Region)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REGION");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.RutaVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUTA_VENTA");

                entity.Property(e => e.SectorEconomico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SECTOR_ECONOMICO");

                entity.Property(e => e.SubcanalVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SUBCANAL_VENTA");

                entity.Property(e => e.SubsectorEconomico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SUBSECTOR_ECONOMICO");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoPersona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PERSONA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.ZonaVenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VENTA");
            });

            modelBuilder.Entity<OpeProveedorProducto>(entity =>
            {
                entity.HasKey(e => new { e.IdPersona, e.IdProducto, e.Unidad });

                entity.ToTable("OPE_PROVEEDOR_PRODUCTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(7, 4)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.NumeroParte)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PARTE");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpePuntosVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_PUNTOS_VENTA");

                entity.Property(e => e.Descontados)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("DESCONTADOS");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Puntos)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PUNTOS");
            });

            modelBuilder.Entity<OpeRecetum>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.IdReceta, e.Tipo });

                entity.ToTable("OPE_RECETA");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdReceta).HasColumnName("ID_RECETA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Almacen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Cant)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANT")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_UNIDAD");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ListaPrecio)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LISTA_PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.TipoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LISTA")
                    .IsFixedLength(true);

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeReferenciaAdelanto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_REFERENCIA_ADELANTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.NumeroCobro)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COBRO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<OpeReferenciaBancarium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_REFERENCIA_BANCARIA");

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Cci)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CCI");

                entity.Property(e => e.Cuenta)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeReferenciaPersona>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_REFERENCIA_PERSONA");

                entity.Property(e => e.Apellidos)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDOS");

                entity.Property(e => e.CdgDst)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_DST");

                entity.Property(e => e.CdgPare)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARE");

                entity.Property(e => e.CdgSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SUCURSAL");

                entity.Property(e => e.Celular)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.Contacto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CONTACTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_NACIMIENTO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Nextel)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NEXTEL");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Rcp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RCP");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true)
                    .HasComment("1:SUCURSAL;2:LABORAL;3:FAMILIAR");
            });

            modelBuilder.Entity<OpeReprogramacionOc>(entity =>
            {
                entity.HasKey(e => e.Secuencia);

                entity.ToTable("OPE_REPROGRAMACION_OC");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(15, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Canal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CANAL");

                entity.Property(e => e.Estado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.SecOc).HasColumnName("SEC_OC");

                entity.Property(e => e.TipoFecha)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_FECHA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeReqitem>(entity =>
            {
                entity.HasKey(e => e.IdRequerimiento);

                entity.ToTable("OPE_REQITEMS");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PEDIDO");

                entity.Property(e => e.FechaRequerido)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REQUERIDO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Solicitante)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITANTE");

                entity.Property(e => e.SwtReq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_REQ")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeRequerimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_REQUERIMIENTO");

                entity.Property(e => e.CantidadIngresada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INGRESADA");

                entity.Property(e => e.CantidadPedida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_PEDIDA");

                entity.Property(e => e.CdgIngeniero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_INGENIERO");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOrd)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ORD");

                entity.Property(e => e.CdgPlan)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PLAN");

                entity.Property(e => e.CdgScc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCC");

                entity.Property(e => e.CdgServ)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.CdgVendAsignado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VEND_ASIGNADO");

                entity.Property(e => e.CdgVendCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VEND_CREACION");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REQUERIMIENTO");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ATENCION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraAtencion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_ATENCION")
                    .IsFixedLength(true);

                entity.Property(e => e.IdOc).HasColumnName("ID_OC");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProductoOf).HasColumnName("ID_PRODUCTO_OF");

                entity.Property(e => e.Motivo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Prioridad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIDAD");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SecuenciaOc).HasColumnName("SECUENCIA_OC");

                entity.Property(e => e.TipoRequ)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_REQU");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeRequisicion>(entity =>
            {
                entity.HasKey(e => e.Codigo)
                    .HasName("PK_OPE_REQUISICION_1");

                entity.ToTable("OPE_REQUISICION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CdgBcoEmp)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO_EMP");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.CtaCte)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CTA_CTE");

                entity.Property(e => e.CtaCteEmp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTA_CTE_EMP");

                entity.Property(e => e.Docs)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DOCS");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechMovBco)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_MOV_BCO");

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PEDIDO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImpBco)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_BCO");

                entity.Property(e => e.ModPago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOD_PAGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Percepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PERCEPCION");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.Solicitante)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITANTE");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.SwtReq)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SWT_REQ");

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMPRA");

                entity.Property(e => e.Vehiculo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VEHICULO");
            });

            modelBuilder.Entity<OpeRequisicionAnexo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_REQUISICION_ANEXO");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeReserva>(entity =>
            {
                entity.HasKey(e => e.IdReserva);

                entity.ToTable("OPE_RESERVA");

                entity.Property(e => e.IdReserva)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_RESERVA");

                entity.Property(e => e.Adulto)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("ADULTO");

                entity.Property(e => e.Bebe)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("BEBE");

                entity.Property(e => e.CantNoches)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CANT_NOCHES");

                entity.Property(e => e.Comida)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COMIDA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEntrada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTRADA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaSalidaPrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SALIDA_PREVISTA");

                entity.Property(e => e.Habitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HABITACION");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraSalida)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_SALIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdAgencia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_AGENCIA");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdClienteFacturar)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE_FACTURAR");

                entity.Property(e => e.IdEmpresa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_EMPRESA");

                entity.Property(e => e.IdTourOperador)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TOUR_OPERADOR");

                entity.Property(e => e.Nino)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("NINO");

                entity.Property(e => e.NoPresentado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NO_PRESENTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Regimen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN");

                entity.Property(e => e.SwtTipoHabitacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_TIPO_HABITACION")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_HABITACION");

                entity.Property(e => e.TipoTarifa)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TARIFA");

                entity.Property(e => e.Turno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeResultadoFinalLab>(entity =>
            {
                entity.HasKey(e => new { e.IdDocumento, e.IdProducto, e.Secuenciaresul });

                entity.ToTable("OPE_RESULTADO_FINAL_LAB");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuenciaresul)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIARESUL");

                entity.Property(e => e.CdgAgrupacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AGRUPACION");

                entity.Property(e => e.CdgRealizado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REALIZADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModifcacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFCACION");

                entity.Property(e => e.Metodo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("METODO");

                entity.Property(e => e.NomCampo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CAMPO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Secuenciadoc)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIADOC");

                entity.Property(e => e.TipoDato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DATO");

                entity.Property(e => e.UnidadValor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_VALOR");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorDefecto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_DEFECTO");

                entity.Property(e => e.ValorOpcion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_OPCION");

                entity.Property(e => e.ValorRango)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RANGO");

                entity.Property(e => e.ValorRefrencia)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFRENCIA");
            });

            modelBuilder.Entity<OpeResultadoProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_RESULTADO_PRODUCTO");

                entity.Property(e => e.CdgAgrupacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_AGRUPACION");

                entity.Property(e => e.Formula)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Metodo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("METODO");

                entity.Property(e => e.NomCampo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CAMPO");

                entity.Property(e => e.Opciones)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OPCIONES");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.TipoDato)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DATO");

                entity.Property(e => e.UnidadValor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_VALOR");

                entity.Property(e => e.ValorDefecto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_DEFECTO");

                entity.Property(e => e.ValorRefrencia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_REFRENCIA");

                entity.Property(e => e.VmaH)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMA_H");

                entity.Property(e => e.VmaM)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMA_M");

                entity.Property(e => e.VmiH)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMI_H");

                entity.Property(e => e.VmiM)
                    .HasColumnType("numeric(7, 3)")
                    .HasColumnName("VMI_M");
            });

            modelBuilder.Entity<OpeRlk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_RLK");

                entity.Property(e => e.Cdg)
                    .IsUnicode(false)
                    .HasColumnName("CDG");

                entity.Property(e => e.Mb)
                    .IsUnicode(false)
                    .HasColumnName("MB");

                entity.Property(e => e.Rgid)
                    .IsUnicode(false)
                    .HasColumnName("RGID");

                entity.Property(e => e.Usr)
                    .IsUnicode(false)
                    .HasColumnName("USR");
            });

            modelBuilder.Entity<OpeSeguimientoCoti>(entity =>
            {
                entity.HasKey(e => e.IdSecuencia);

                entity.ToTable("OPE_SEGUIMIENTO_COTI");

                entity.Property(e => e.IdSecuencia)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SECUENCIA");

                entity.Property(e => e.AnoCierre)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_CIERRE");

                entity.Property(e => e.AnoEntrega)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_ENTREGA");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaProxSeg)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROX_SEG");

                entity.Property(e => e.FechaSeguimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SEGUIMIENTO");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.MesCierre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_CIERRE")
                    .IsFixedLength(true);

                entity.Property(e => e.MesEntrega)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_ENTREGA")
                    .IsFixedLength(true);

                entity.Property(e => e.PorcAvance)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_AVANCE");

                entity.Property(e => e.ProbCierre)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PROB_CIERRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeSeguimientoImportacion>(entity =>
            {
                entity.HasKey(e => e.Secuencia);

                entity.ToTable("OPE_SEGUIMIENTO_IMPORTACION");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.CdgHito)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_HITO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaHito)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_HITO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeSeguimientoPedi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_SEGUIMIENTO_PEDI");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaReprogramada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REPROGRAMADA");

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProgramacion)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PROGRAMACION");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeSolicitudAnticipoProveedor>(entity =>
            {
                entity.HasKey(e => e.IdSolicitud);

                entity.ToTable("OPE_SOLICITUD_ANTICIPO_PROVEEDOR");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ANAL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRequerida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REQUERIDA");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SOLICITUD");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.TipoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANAL");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeSolicitudDinero>(entity =>
            {
                entity.HasKey(e => e.IdSolicitud);

                entity.ToTable("OPE_SOLICITUD_DINERO");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ANAL");

                entity.Property(e => e.CodigoOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_OC");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRechazo)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RECHAZO");

                entity.Property(e => e.FechaRequerida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REQUERIDA");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SOLICITUD");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.MotivoRechazo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_RECHAZO");

                entity.Property(e => e.NumComp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COMP");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumItem)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("NUM_ITEM");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Solicitante)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITANTE");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.TipoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANAL");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.UsuarioRechazo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_RECHAZO");
            });

            modelBuilder.Entity<OpeSolicitudDocumento>(entity =>
            {
                entity.HasKey(e => e.IdSolicitud);

                entity.ToTable("OPE_SOLICITUD_DOCUMENTO");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.Anticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ANTICIPO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpeSolicitudRequerimiento>(entity =>
            {
                entity.HasKey(e => e.IdRequerimiento);

                entity.ToTable("OPE_SOLICITUD_REQUERIMIENTO");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Solicitante)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SOLICITANTE");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeSolicitudVjevto>(entity =>
            {
                entity.HasKey(e => e.IdSolicitud)
                    .HasName("PK_OPE_SOLICITUD_VJECTO");

                entity.ToTable("OPE_SOLICITUD_VJEVTO");

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SOLICITUD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ANAL");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRechazo)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RECHAZO");

                entity.Property(e => e.FechaRequerida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REQUERIDA");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SOLICITUD");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.MotivoRechazo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_RECHAZO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.TipoAnal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANAL");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.TotalAdicional)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ADICIONAL");

                entity.Property(e => e.TotalViaje)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_VIAJE");

                entity.Property(e => e.TotalViatico)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_VIATICO");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.UsuarioRechazo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_RECHAZO");
            });

            modelBuilder.Entity<OpeStockLote>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_STOCK_LOTE");

                entity.Property(e => e.CantidadIngresada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INGRESADA");

                entity.Property(e => e.CantidadSalida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_SALIDA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("STOCK_ACTUAL");
            });

            modelBuilder.Entity<OpeStockProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_STOCK_PRODUCTO");

                entity.Property(e => e.CantidadActual)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_ACTUAL");

                entity.Property(e => e.CantidadIngresada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INGRESADA");

                entity.Property(e => e.CantidadInicial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INICIAL");

                entity.Property(e => e.CantidadSalida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_SALIDA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");
            });

            modelBuilder.Entity<OpeSucursal>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal });

                entity.ToTable("OPE_SUCURSAL");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Abr)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ABR");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.EsPrincipal)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ES_PRINCIPAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.ImpresoraCaja)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("IMPRESORA_CAJA");

                entity.Property(e => e.ImpresoraMatricial)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("IMPRESORA_MATRICIAL");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Pedido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.Provincia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.SwtWeb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_WEB")
                    .IsFixedLength(true);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Valoriza)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VALORIZA")
                    .HasDefaultValueSql("(0)")
                    .IsFixedLength(true);

                entity.Property(e => e.Venta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VENTA")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CodigoEmpresaNavigation)
                    .WithMany(p => p.OpeSucursals)
                    .HasForeignKey(d => d.CodigoEmpresa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OPE_SUCURSAL_OPE_EMPRESA");
            });

            modelBuilder.Entity<OpeTabla>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("OPE_TABLA");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("(1)")
                    .IsFixedLength(true);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.HasMany<OpeDetalleTabla>(m => m.detalletabla)
                            .WithOne(d => d.tabla)
                            .HasForeignKey(d => d.Codigo)
                            .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity<OpeTarifa>(entity =>
            {
                entity.HasKey(e => e.IdTarifa);

                entity.ToTable("OPE_TARIFA");

                entity.Property(e => e.IdTarifa)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_TARIFA");

                entity.Property(e => e.Ad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AD")
                    .IsFixedLength(true);

                entity.Property(e => e.AdultoMax)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ADULTO_MAX");

                entity.Property(e => e.AdultoMin)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ADULTO_MIN");

                entity.Property(e => e.Al)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AL")
                    .IsFixedLength(true);

                entity.Property(e => e.CargoDia)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_DIA")
                    .IsFixedLength(true);

                entity.Property(e => e.CargoPersona)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_PERSONA")
                    .IsFixedLength(true);

                entity.Property(e => e.ConceptoCargo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO_CARGO");

                entity.Property(e => e.DiasDscto)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("DIAS_DSCTO");

                entity.Property(e => e.Domingo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOMINGO")
                    .IsFixedLength(true);

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Jueves)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUEVES")
                    .IsFixedLength(true);

                entity.Property(e => e.Lunes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LUNES")
                    .IsFixedLength(true);

                entity.Property(e => e.Martes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MARTES")
                    .IsFixedLength(true);

                entity.Property(e => e.Miercoles)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MIERCOLES")
                    .IsFixedLength(true);

                entity.Property(e => e.Mp)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP")
                    .IsFixedLength(true);

                entity.Property(e => e.NinoMax)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NINO_MAX");

                entity.Property(e => e.NocheMax)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NOCHE_MAX");

                entity.Property(e => e.NocheMin)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NOCHE_MIN");

                entity.Property(e => e.Noches)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NOCHES");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PaxMax)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PAX_MAX");

                entity.Property(e => e.PaxMin)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PAX_MIN");

                entity.Property(e => e.Pc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PC")
                    .IsFixedLength(true);

                entity.Property(e => e.Sabado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SABADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Ti)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TI")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Viernes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VIERNES")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpeTarifaHabitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TARIFA_HABITACION");

                entity.Property(e => e.CargoPersona)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CARGO_PERSONA")
                    .IsFixedLength(true);

                entity.Property(e => e.Concepto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Regimen)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN");

                entity.Property(e => e.TipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_HABITACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTarifaPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TARIFA_PRECIO");

                entity.Property(e => e.Alojamiento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ALOJAMIENTO");

                entity.Property(e => e.Desayuno)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESAYUNO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.IdTarifa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TARIFA");

                entity.Property(e => e.MediaPension)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MEDIA_PENSION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PensionCompleta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PENSION_COMPLETA");

                entity.Property(e => e.Temporada)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TEMPORADA");

                entity.Property(e => e.TodoIncluido)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TODO_INCLUIDO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTarifaTemporadum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TARIFA_TEMPORADA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdTarifa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TARIFA");

                entity.Property(e => e.Temporada)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TEMPORADA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTarifaTipoHabitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TARIFA_TIPO_HABITACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdTarifa)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TARIFA");

                entity.Property(e => e.TipoHabitacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_HABITACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTarjetaEquipo>(entity =>
            {
                entity.HasKey(e => e.IdSerie);

                entity.ToTable("OPE_TARJETA_EQUIPO");

                entity.Property(e => e.IdSerie)
                    .HasColumnType("numeric(15, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_SERIE");

                entity.Property(e => e.CdgEstado)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTADO");

                entity.Property(e => e.CdgMarca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MARCA");

                entity.Property(e => e.CdgModelo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MODELO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdCliente).HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdGuia).HasColumnName("ID_GUIA");

                entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NumFre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_FRE");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Recordatorio).HasColumnName("RECORDATORIO");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.SerieGen)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GEN");

                entity.Property(e => e.SerieReem)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_REEM");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeTdocApertura>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoSucursal, e.CodigoCaja, e.FechaApertura, e.TipoDocumento });

                entity.ToTable("OPE_TDOC_APERTURA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJA");

                entity.Property(e => e.FechaApertura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APERTURA");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Series)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTdocPuntoVentum>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.CodigoUsuario, e.TipoDocumento });

                entity.ToTable("OPE_TDOC_PUNTO_VENTA");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUsuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_USUARIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Series)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTempComandum>(entity =>
            {
                entity.HasKey(e => new { e.IdPedido, e.IdProducto, e.Secuencia });

                entity.ToTable("OPE_TEMP_COMANDA");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Caja)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CAJA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaActualizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ACTUALIZACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mesa)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MESA");

                entity.Property(e => e.Mozo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOZO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Turno)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.Zona)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZONA");
            });

            modelBuilder.Entity<OpeTemporadum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TEMPORADA");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.TipoTemporada)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TEMPORADA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpeTicket>(entity =>
            {
                entity.HasKey(e => new { e.IdDocumento, e.IdProducto, e.NumTicket });

                entity.ToTable("OPE_TICKET");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NumTicket)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_TICKET");

                entity.Property(e => e.CodigoTurno)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TURNO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ATENCION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeTipoCambio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TIPO_CAMBIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorComercial)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMERCIAL");

                entity.Property(e => e.ValorCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_COMPRA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<OpeTmovTdoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TMOV_TDOC");

                entity.Property(e => e.CdgFlujo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FLUJO");

                entity.Property(e => e.CdgMflujo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MFLUJO");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");
            });

            modelBuilder.Entity<OpeTransferencium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_TRANSFERENCIA");

                entity.Property(e => e.BcoTran)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCO_TRAN");

                entity.Property(e => e.CdgBco)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgCta)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CTA");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CdgTmov)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CtaTran)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CTA_TRAN");

                entity.Property(e => e.FecTran)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_TRAN");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImpTran)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_TRAN");

                entity.Property(e => e.MonTran)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON_TRAN");

                entity.Property(e => e.NumCheq)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CHEQ");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumCta)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.NumRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQUI");

                entity.Property(e => e.NumTran)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_TRAN");

                entity.Property(e => e.ObsTran)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBS_TRAN");

                entity.Property(e => e.PagTran)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAG_TRAN");

                entity.Property(e => e.RefCdgTdoc)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("REF_CDG_TDOC");

                entity.Property(e => e.RefNumero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REF_NUMERO");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.SwtReq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_REQ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtTran)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_TRAN")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeUsuario>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEmpresa, e.Codigo });

                entity.ToTable("OPE_USUARIO");

                entity.HasIndex(e => e.CodigoEmpresa, "IX_OPE_USUARIO");

                entity.Property(e => e.CodigoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Administrador)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADMINISTRADOR")
                    .IsFixedLength(true);

                entity.Property(e => e.Cajero)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAJERO")
                    .IsFixedLength(true);

                entity.Property(e => e.Contrasena)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CONTRASENA");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Imagen1)
                    .HasColumnType("image")
                    .HasColumnName("IMAGEN1");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia10)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA10");

                entity.Property(e => e.Referencia11)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA11");

                entity.Property(e => e.Referencia12)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA12");

                entity.Property(e => e.Referencia13)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA13");

                entity.Property(e => e.Referencia14)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA14");

                entity.Property(e => e.Referencia15)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA15");

                entity.Property(e => e.Referencia16)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA16");

                entity.Property(e => e.Referencia17)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA17");

                entity.Property(e => e.Referencia18)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA18");

                entity.Property(e => e.Referencia19)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA19");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia20)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA20");

                entity.Property(e => e.Referencia21)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA21");

                entity.Property(e => e.Referencia22)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA22");

                entity.Property(e => e.Referencia23)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA23");

                entity.Property(e => e.Referencia24)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA24");

                entity.Property(e => e.Referencia25)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA25");

                entity.Property(e => e.Referencia26)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA26");

                entity.Property(e => e.Referencia27)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA27");

                entity.Property(e => e.Referencia28)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA28");

                entity.Property(e => e.Referencia29)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA29");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia30)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA30");

                entity.Property(e => e.Referencia31)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA31");

                entity.Property(e => e.Referencia32)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA32");

                entity.Property(e => e.Referencia33)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA33");

                entity.Property(e => e.Referencia34)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA34");

                entity.Property(e => e.Referencia35)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA35");

                entity.Property(e => e.Referencia36)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA36");

                entity.Property(e => e.Referencia37)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA37");

                entity.Property(e => e.Referencia38)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA38");

                entity.Property(e => e.Referencia39)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA39");

                entity.Property(e => e.Referencia4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Referencia40)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA40");

                entity.Property(e => e.Referencia5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA5");

                entity.Property(e => e.Referencia6)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA6");

                entity.Property(e => e.Referencia7)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA7");

                entity.Property(e => e.Referencia8)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA8");

                entity.Property(e => e.Referencia9)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA9");

                entity.Property(e => e.Superusuario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUPERUSUARIO")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<OpeUsuarioForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_USUARIO_FORM");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdForm).HasColumnName("ID_FORM");

                entity.Property(e => e.Operaciones)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OPERACIONES");
            });

            modelBuilder.Entity<OpeValorizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OPE_VALORIZACION");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo");

                entity.Property(e => e.CostoDol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_dol");

                entity.Property(e => e.CostoSol)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("costo_sol");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("mes");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<OpevwCajab>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_CAJAB");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgBcoEmp)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO_EMP");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CtaCteEmp)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTA_CTE_EMP");

                entity.Property(e => e.DesPrv)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("DES_PRV");

                entity.Property(e => e.Egresomn)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("EGRESOMN");

                entity.Property(e => e.FecDocu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_DOCU")
                    .IsFixedLength(true);

                entity.Property(e => e.FechMovBco)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_MOV_BCO");

                entity.Property(e => e.FechaTc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_TC");

                entity.Property(e => e.Girado)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GIRADO");

                entity.Property(e => e.Ingresome)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INGRESOME");

                entity.Property(e => e.Ingresomn)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("INGRESOMN");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.SaldoRestanteme).HasColumnName("SALDO_RESTANTEME");

                entity.Property(e => e.Salidame)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALIDAME");

                entity.Property(e => e.Tipo).HasColumnName("TIPO");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");
            });

            modelBuilder.Entity<OpevwCcom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_CCOM");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaGuia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GUIA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes).HasColumnName("MES");
            });

            modelBuilder.Entity<OpevwCobranzaCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_COBRANZA_CLIENTE");

                entity.Property(e => e.Cheque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHEQUE");

                entity.Property(e => e.FechaCobro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COBRO");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.FormaPagoDesc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO_DESC");

                entity.Property(e => e.IdMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.IdMonedaOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA_ORI");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.ImporteCobro)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_COBRO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeroCobro)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COBRO");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.OrdenPedido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_PEDIDO");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwComprasCentroCosto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_COMPRAS_CENTRO_COSTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgMon)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.ConSinIgv)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CON_SIN_IGV");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DebeHaber)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEBE_HABER");

                entity.Property(e => e.DescripcionConcepto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_CONCEPTO");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.FecCmp)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CMP");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.ImpPro)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMP_PRO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Importef)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTEF");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumPeriodo)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PERIODO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Tipo2)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TIPO2");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<OpevwComprasCentroCosto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_COMPRAS_CENTRO_COSTO2");

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.Importef)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTEF");

                entity.Property(e => e.Refcc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFCC");
            });

            modelBuilder.Entity<OpevwConPla>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_CON_PLA");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgPlanilla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PLANILLA");

                entity.Property(e => e.Con)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CON");

                entity.Property(e => e.Cuentaod)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUENTAOD");

                entity.Property(e => e.Cuentaoh)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUENTAOH");

                entity.Property(e => e.Cuentatd)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUENTATD");

                entity.Property(e => e.Cuentath)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUENTATH");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.TipoTrab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRAB")
                    .IsFixedLength(true);

                entity.Property(e => e.ValDet)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valDet");
            });

            modelBuilder.Entity<OpevwConsultaInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_CONSULTA_INVENTARIO");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.AlmacenDestino)
                    .HasMaxLength(2307)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_DESTINO");

                entity.Property(e => e.CantidadInout)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INOUT");

                entity.Property(e => e.CdgEsta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ESTA")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgOt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OT");

                entity.Property(e => e.CdgSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgVehi)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CDG_VEHI");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CostoTotal)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("COSTO_TOTAL");

                entity.Property(e => e.CtaExistencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTA_EXISTENCIA");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.EsTraslado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ES_TRASLADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaMovi)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MOVI");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NiNs)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NI_NS");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.Oc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OC");

                entity.Property(e => e.Op)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OP");

                entity.Property(e => e.Persona)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.Ref)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.SubCentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUB_CENTRO_COSTO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoMovi)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Vehiculo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VEHICULO");
            });

            modelBuilder.Entity<OpevwCotizacionKit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_COTIZACION_KIT");

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.CdgKit)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpevwCvtum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_CVTA");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaGuia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GUIA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes).HasColumnName("MES");
            });

            modelBuilder.Entity<OpevwDetalleSalof>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DETALLE_SALOF");

                entity.Property(e => e.CantidadInout)
                    .HasColumnType("numeric(29, 10)")
                    .HasColumnName("CANTIDAD_INOUT");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.OfId)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OF_ID");
            });

            modelBuilder.Entity<OpevwDetalleSalof2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("opevw_detalle_salof2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.OfId)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OF_ID");
            });

            modelBuilder.Entity<OpevwDevueltoReq>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DEVUELTO_REQ");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");

                entity.Property(e => e.NumReq)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REQ");
            });

            modelBuilder.Entity<OpevwDocumentoInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DOCUMENTO_INVENTARIO");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Almacen2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN2");

                entity.Property(e => e.CdgAlmacen)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ALMACEN");

                entity.Property(e => e.CdgTdoc)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Empresa)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.EsTraslado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ES_TRASLADO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaMovi)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MOVI");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdDocumentoParent).HasColumnName("ID_DOCUMENTO_PARENT");

                entity.Property(e => e.Modulo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MODULO");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumRef1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.Numdoc)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMDOC");

                entity.Property(e => e.Numref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMREF");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PuntoVenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PUNTO_VENTA");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");
            });

            modelBuilder.Entity<OpevwDpstock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCK");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(23, 8)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(23, 8)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockCcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCK_CCC");

                entity.Property(e => e.CdgCaja)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CAJA");

                entity.Property(e => e.CdgCasillero)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CASILLERO");

                entity.Property(e => e.CdgColumna)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COLUMNA");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockFv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCK_FV");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockLote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCK_LOTE");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockSerie>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCK_SERIE");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockubi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCKUBI");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.CodigoZona)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ZONA");

                entity.Property(e => e.Columna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COLUMNA");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Fila)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FILA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<OpevwDpstockubi2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DPSTOCKUBI2");

                entity.Property(e => e.Almacen)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(47)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");
            });

            modelBuilder.Entity<OpevwDstock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DSTOCK");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoUnidad)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.StkAct)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("stk_act");

                entity.Property(e => e.StkIng)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("stk_ing");

                entity.Property(e => e.StkSal)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("stk_sal");
            });

            modelBuilder.Entity<OpevwDstockCcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DSTOCK_CCC");

                entity.Property(e => e.CdgCaja)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CAJA");

                entity.Property(e => e.CdgCasillero)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CASILLERO");

                entity.Property(e => e.CdgColumna)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_COLUMNA");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.StkAct)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_act");

                entity.Property(e => e.StkIng)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_ing");

                entity.Property(e => e.StkSal)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_sal");
            });

            modelBuilder.Entity<OpevwDstockFv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DSTOCK_FV");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.StkAct)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_act");

                entity.Property(e => e.StkIng)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_ing");

                entity.Property(e => e.StkSal)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_sal");
            });

            modelBuilder.Entity<OpevwDstockLote>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DSTOCK_LOTE");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.StkAct)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_act");

                entity.Property(e => e.StkIng)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_ing");

                entity.Property(e => e.StkSal)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_sal");
            });

            modelBuilder.Entity<OpevwDstockSerie>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_DSTOCK_SERIE");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.StkAct)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_act");

                entity.Property(e => e.StkIng)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_ing");

                entity.Property(e => e.StkSal)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("stk_sal");
            });

            modelBuilder.Entity<OpevwEgreso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_EGRESOS");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.NomOperacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OPERACION");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Operacion)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("OPERACION");

                entity.Property(e => e.Persona)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.Registro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REGISTRO");

                entity.Property(e => e.Turno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");
            });

            modelBuilder.Entity<OpevwGastoCatproducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_GASTO_CATPRODUCTO");

                entity.Property(e => e.Gp)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GP");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");
            });

            modelBuilder.Entity<OpevwGastoCc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_GASTO_CC");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.Importef)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTEF");
            });

            modelBuilder.Entity<OpevwGuiaDremision>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_GUIA_DREMISION");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OC");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgProd)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.CoocId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("COOC_ID");

                entity.Property(e => e.CostoAutomatico)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COSTO_AUTOMATICO");

                entity.Property(e => e.CostoCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_COMPRA");

                entity.Property(e => e.CostoDocu)
                    .HasColumnType("numeric(38, 14)")
                    .HasColumnName("COSTO_DOCU");

                entity.Property(e => e.CostoDolar)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO_DOLAR");

                entity.Property(e => e.CostoOc)
                    .HasColumnType("numeric(38, 16)")
                    .HasColumnName("COSTO_OC");

                entity.Property(e => e.DvegrCosto)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("DVEGR_COSTO");

                entity.Property(e => e.DvegrDgui)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEGR_DGUI");

                entity.Property(e => e.DvegrPrecio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEGR_PRECIO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumentoParent).HasColumnName("ID_DOCUMENTO_PARENT");

                entity.Property(e => e.IdMoneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.IdMonedaOc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdRela)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_RELA");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.NomProd)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.Numero)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.NumeroDocu)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU");

                entity.Property(e => e.OfId)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OF_ID");

                entity.Property(e => e.Ofs)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFS");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Persona)
                    .HasMaxLength(353)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioDolar)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_DOLAR");

                entity.Property(e => e.PvDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PV_DOLAR");

                entity.Property(e => e.PvSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PV_SOLES");

                entity.Property(e => e.Rea)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REA");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovi)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");

                entity.Property(e => e.Tra)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA");

                entity.Property(e => e.VegrFechaSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("VEGR_FECHA_SALIDA");

                entity.Property(e => e.VegrId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("VEGR_ID");
            });

            modelBuilder.Entity<OpevwGuiaDremisionp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_GUIA_DREMISIONP");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.VegrFechaSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("VEGR_FECHA_SALIDA");
            });

            modelBuilder.Entity<OpevwGuiaFechaalmacenguium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_GUIA_FECHAALMACENGUIA");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwItemsProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_ITEMS_PROYECTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");
            });

            modelBuilder.Entity<OpevwKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_KARDEX");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.DvegrCosto)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("DVEGR_COSTO");

                entity.Property(e => e.DvegrPrecio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEGR_PRECIO");

                entity.Property(e => e.IdDoco)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCO");

                entity.Property(e => e.IdDocumentoParent).HasColumnName("ID_DOCUMENTO_PARENT");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Numero)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Persona)
                    .HasMaxLength(353)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.Saldo).HasColumnName("SALDO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovi)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");

                entity.Property(e => e.VegrFechaSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("VEGR_FECHA_SALIDA");

                entity.Property(e => e.VegrId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("VEGR_ID");
            });

            modelBuilder.Entity<OpevwLineaGastoCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_LINEA_GASTO_COMPRA");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgConcepto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CONCEPTO");

                entity.Property(e => e.Concepto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.CostoDolar)
                    .HasColumnType("numeric(38, 16)")
                    .HasColumnName("COSTO_DOLAR");

                entity.Property(e => e.CostoSoles)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("COSTO_SOLES");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NomCc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CC");
            });

            modelBuilder.Entity<OpevwLineaPresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_LINEA_PRESUPUESTO");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgConcepto)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CONCEPTO");

                entity.Property(e => e.Concepto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.CostoDolar)
                    .HasColumnType("numeric(36, 21)")
                    .HasColumnName("COSTO_DOLAR");

                entity.Property(e => e.CostoSoles)
                    .HasColumnType("numeric(31, 10)")
                    .HasColumnName("COSTO_SOLES");

                entity.Property(e => e.FecDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_DOCU");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NomCc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CC");

                entity.Property(e => e.VvDolar)
                    .HasColumnType("numeric(36, 21)")
                    .HasColumnName("VV_DOLAR");

                entity.Property(e => e.VvSoles)
                    .HasColumnType("numeric(31, 10)")
                    .HasColumnName("VV_SOLES");
            });

            modelBuilder.Entity<OpevwListadoProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_LISTADO_PRODUCTO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");
            });

            modelBuilder.Entity<OpevwMeproyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_MEPROYECTO");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.TotalProducto)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("TOTAL_PRODUCTO");
            });

            modelBuilder.Entity<OpevwMovimienoValorizado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_MOVIMIENO_VALORIZADO");

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.CantDoc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANT_DOC");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OC");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.CostoUnitDolar)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO_UNIT_DOLAR");

                entity.Property(e => e.CostoUnitSoles)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO_UNIT_SOLES");

                entity.Property(e => e.DdFechaTransaccion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_TRANSACCION");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.NomProd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.NumDoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOC");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioDoc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_DOC");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovi)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");
            });

            modelBuilder.Entity<OpevwMovimientoImportacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_MOVIMIENTO_IMPORTACION");

                entity.Property(e => e.AdValorem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("AD_VALOREM");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(35, 19)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Carpeta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CARPETA");

                entity.Property(e => e.CfobTotal)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CFOB_TOTAL");

                entity.Property(e => e.Cfr)
                    .HasColumnType("numeric(17, 6)")
                    .HasColumnName("CFR");

                entity.Property(e => e.Cif)
                    .HasColumnType("numeric(37, 10)")
                    .HasColumnName("CIF");

                entity.Property(e => e.CimpTotal)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("CIMP_TOTAL");

                entity.Property(e => e.CimpUnit)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CIMP_UNIT");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CoocEstado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COOC_ESTADO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaOc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_OC");

                entity.Property(e => e.Flete)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("FLETE");

                entity.Property(e => e.FobUnit)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FOB_UNIT");

                entity.Property(e => e.IdMoneda)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Ipm)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IPM");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.NomCarpeta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CARPETA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NotaIngreso)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOTA_INGRESO");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PA");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.RatioImp)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("RATIO_IMP");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Seguro)
                    .HasColumnType("numeric(36, 10)")
                    .HasColumnName("SEGURO");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<OpevwMovimientoUbicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_MOVIMIENTO_UBICACION");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.DdFechaMovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_MOVIMIENTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Mov)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOV");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(47)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");
            });

            modelBuilder.Entity<OpevwNsGuiasRemision>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_NS_GUIAS_REMISION");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProveedor)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Numdoc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMDOC");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");
            });

            modelBuilder.Entity<OpevwObtenerConsumoProducto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_CONSUMO_PRODUCTO2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.FechaRegistro)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_REGISTRO")
                    .IsFixedLength(true);

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdTipoProducto)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRODUCTO");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Producto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.SubTotalDolar)
                    .HasColumnType("numeric(33, 19)")
                    .HasColumnName("SUB_TOTAL_DOLAR");

                entity.Property(e => e.SubTotalSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("SUB_TOTAL_SOLES");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Trab2)
                    .HasMaxLength(354)
                    .IsUnicode(false)
                    .HasColumnName("TRAB2");
            });

            modelBuilder.Entity<OpevwObtenerDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_DOCUMENTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Modulo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MODULO");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwObtenerDocumento2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_DOCUMENTO2");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal2)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL2");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.FechaRegistro)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_REGISTRO")
                    .IsFixedLength(true);

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.Trab2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TRAB2");
            });

            modelBuilder.Entity<OpevwObtenerDocumentoCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_DOCUMENTO_COMPRA");

                entity.Property(e => e.CantidadInout)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD_INOUT");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");
            });

            modelBuilder.Entity<OpevwObtenerKitDocumentoVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_KIT_DOCUMENTO_VENTA");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwObtenerVentaMasiva>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_VENTA_MASIVA");

                entity.Property(e => e.Almuerzo).HasColumnName("ALMUERZO");

                entity.Property(e => e.Break1).HasColumnName("BREAK1");

                entity.Property(e => e.Cena).HasColumnName("CENA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Desayuno).HasColumnName("DESAYUNO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Lonche).HasColumnName("LONCHE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1).HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2).HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3).HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4).HasColumnName("REFERENCIA4");
            });

            modelBuilder.Entity<OpevwObtenerVentaMasiva2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_VENTA_MASIVA2");

                entity.Property(e => e.Almuerzo).HasColumnName("ALMUERZO");

                entity.Property(e => e.Break1).HasColumnName("BREAK1");

                entity.Property(e => e.Cena).HasColumnName("CENA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Desayuno).HasColumnName("DESAYUNO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Lonche).HasColumnName("LONCHE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1).HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2).HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3).HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4).HasColumnName("REFERENCIA4");
            });

            modelBuilder.Entity<OpevwObtenerVentaMasiva3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_VENTA_MASIVA3");

                entity.Property(e => e.Almuerzo).HasColumnName("ALMUERZO");

                entity.Property(e => e.Break1).HasColumnName("BREAK1");

                entity.Property(e => e.Cena).HasColumnName("CENA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(4000)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Desayuno).HasColumnName("DESAYUNO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Lonche).HasColumnName("LONCHE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Referencia1).HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2).HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3).HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4).HasColumnName("REFERENCIA4");
            });

            modelBuilder.Entity<OpevwObtenerVentaMasivaConsolidado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_OBTENER_VENTA_MASIVA_CONSOLIDADO");

                entity.Property(e => e.Almuerzo)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("ALMUERZO");

                entity.Property(e => e.Break1)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("BREAK1");

                entity.Property(e => e.Cena)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("CENA");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Desayuno)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("DESAYUNO");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Lonche)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("LONCHE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia1)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.Referencia4)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("REFERENCIA4");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.TipoTrab)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRAB");
            });

            modelBuilder.Entity<OpevwOrdenCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_ORDEN_COMPRA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.IdOc).HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");
            });

            modelBuilder.Entity<OpevwPagoBanco>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PAGO_BANCO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.FormaPagoDesc)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO_DESC");

                entity.Property(e => e.IdMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.IdMonedaOri)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA_ORI");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.ImportePago)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumCor)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumeroCheque)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CHEQUE");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.ProveedorCodigo).HasColumnName("PROVEEDOR_CODIGO");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwPagoProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PAGO_PROVEEDOR");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgFpag)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_FPAG");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.FormaPagoDesc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO_DESC");

                entity.Property(e => e.IdMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA");

                entity.Property(e => e.IdMonedaOri)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_MONEDA_ORI");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.ImportePago)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PAGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumeroCheque)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CHEQUE");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.ProveedorCodigo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PROVEEDOR_CODIGO");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<OpevwPorcentajeCotizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PORCENTAJE_COTIZACION");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CodigoVendedorAsignado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR_ASIGNADO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCotizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COTIZACION");

                entity.Property(e => e.IdCotizacion)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_COTIZACION");

                entity.Property(e => e.Mes)
                    .HasMaxLength(30)
                    .HasColumnName("MES");

                entity.Property(e => e.Nmes).HasColumnName("NMES");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<OpevwPorcentajeCotizacion2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PORCENTAJE_COTIZACION2");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cotizado).HasColumnName("COTIZADO");

                entity.Property(e => e.Ganada).HasColumnName("GANADA");

                entity.Property(e => e.Mes)
                    .HasMaxLength(30)
                    .HasColumnName("MES");

                entity.Property(e => e.Nmes).HasColumnName("NMES");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");
            });

            modelBuilder.Entity<OpevwProductoMasVendido>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PRODUCTO_MAS_VENDIDO");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<OpevwProductoMasVendidoMonto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PRODUCTO_MAS_VENDIDO_MONTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Mesa)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MESA");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Mozo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOZO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");
            });

            modelBuilder.Entity<OpevwProyectoServ>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_PROYECTO_SERV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Vv)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VV");
            });

            modelBuilder.Entity<OpevwResumenCierreDiario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_RESUMEN_CIERRE_DIARIO");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Cp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CP");

                entity.Property(e => e.FechaOperacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_OPERACION");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.TipoOperacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPERACION");
            });

            modelBuilder.Entity<OpevwResumenCierreDiario2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_RESUMEN_CIERRE_DIARIO2");

                entity.Property(e => e.FechaOperacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_OPERACION");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.TipoOperacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPERACION");
            });

            modelBuilder.Entity<OpevwSalInvPorMov>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SAL_INV_POR_MOV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Ingreso2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("INGRESO2");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Salida2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("SALIDA2");
            });

            modelBuilder.Entity<OpevwSalInvPorMov2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SAL_INV_POR_MOV2");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CentroCosto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.CodigoUnidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_UNIDAD");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Costod)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOD");

                entity.Property(e => e.Costof)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOF");

                entity.Property(e => e.Costol)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOL");

                entity.Property(e => e.Docu)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("DOCU");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(14, 6)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Ingreso2)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("INGRESO2");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NomAlmacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ALMACEN");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Oc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OC");

                entity.Property(e => e.Op)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OP");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.PrecioComprad)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_COMPRAD");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Salida2)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("SALIDA2");

                entity.Property(e => e.ScdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubCentroCosto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUB_CENTRO_COSTO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");

                entity.Property(e => e.U1)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.U2)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.UnidadEqui)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_EQUI");
            });

            modelBuilder.Entity<OpevwSalInvPorMov3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SAL_INV_POR_MOV3");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdOc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_OC");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Loteserie)
                    .IsRequired()
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("LOTESERIE");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Oc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OC");

                entity.Property(e => e.Op)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OP");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioCompra)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PRECIO_COMPRA");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVIMIENTO");
            });

            modelBuilder.Entity<OpevwSalInvPorMovCc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SAL_INV_POR_MOV_CC");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CentroCosto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Stock)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK");

                entity.Property(e => e.SubCentroCosto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUB_CENTRO_COSTO");
            });

            modelBuilder.Entity<OpevwSolReq>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SOL_REQ");

                entity.Property(e => e.CodigoRequerimiento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REQUERIMIENTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.IdProducto).HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdReq)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQ");
            });

            modelBuilder.Entity<OpevwStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCK");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.StockActual2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL2");

                entity.Property(e => e.StockIngreso)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_INGRESO");

                entity.Property(e => e.StockIngreso2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_INGRESO2");

                entity.Property(e => e.StockInicial).HasColumnName("STOCK_INICIAL");

                entity.Property(e => e.StockSalio)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_SALIO");

                entity.Property(e => e.StockSalio2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_SALIO2");
            });

            modelBuilder.Entity<OpevwStock2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCK2");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.StockActual2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL2");

                entity.Property(e => e.StockIngreso)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_INGRESO");

                entity.Property(e => e.StockIngreso2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_INGRESO2");

                entity.Property(e => e.StockInicial).HasColumnName("STOCK_INICIAL");

                entity.Property(e => e.StockSalio)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_SALIO");

                entity.Property(e => e.StockSalio2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_SALIO2");
            });

            modelBuilder.Entity<OpevwStockIntermedio>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCK_INTERMEDIO");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");
            });

            modelBuilder.Entity<OpevwStockaLp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCKA_LP");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.NomAlmacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ALMACEN");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("SALIDA");
            });

            modelBuilder.Entity<OpevwStockaLpag>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCKA_LPAG");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.NomAlmacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOM_ALMACEN");

                entity.Property(e => e.Stock)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK");
            });

            modelBuilder.Entity<OpevwStockall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCKALL");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");
            });

            modelBuilder.Entity<OpevwStockcproyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCKCPROYECTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");
            });

            modelBuilder.Entity<OpevwStockrestum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_STOCKRESTA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Salida)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALIDA");
            });

            modelBuilder.Entity<OpevwSumrecetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_SUMRECETA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaApertura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APERTURA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<OpevwVentaCentroCosto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_CENTRO_COSTO");

                entity.Property(e => e.CdgCeco)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CECO");

                entity.Property(e => e.Vv)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VV");
            });

            modelBuilder.Entity<OpevwVentaComensal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_COMENSAL");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Comensal)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("COMENSAL");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<OpevwVentaRentabilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_RENTABILIDAD");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CostopromDolar)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("COSTOPROM_DOLAR");

                entity.Property(e => e.CostopromSoles)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("COSTOPROM_SOLES");

                entity.Property(e => e.CostotDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_DOLAR");

                entity.Property(e => e.CostotSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_SOLES");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_GRUPO");

                entity.Property(e => e.IdMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MARCA");

                entity.Property(e => e.IdModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MODELO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdSubgrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_SUBGRUPO");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.IdTipoProducto)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRODUCTO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.MargenDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_DOLAR");

                entity.Property(e => e.MargenSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_SOLES");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_DOCUMENTO");

                entity.Property(e => e.PorMargen)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("POR_MARGEN");

                entity.Property(e => e.PrecioD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("PRECIO_D");

                entity.Property(e => e.PrecioS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("PRECIO_S");

                entity.Property(e => e.Refvend)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFVEND");

                entity.Property(e => e.Semestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Subgrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUBGRUPO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoProd)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PROD");

                entity.Property(e => e.Trimestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRIMESTRE");

                entity.Property(e => e.ValorVentaConNcD)
                    .HasColumnType("numeric(38, 17)")
                    .HasColumnName("VALOR_VENTA_CON_NC_D");

                entity.Property(e => e.ValorVentaConNcS)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALOR_VENTA_CON_NC_S");

                entity.Property(e => e.ValorVentaSinNcD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_D");

                entity.Property(e => e.ValorVentaSinNcS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_S");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<OpevwVentaRentabilidadVv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_RENTABILIDAD_VV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Anomes)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("ANOMES");

                entity.Property(e => e.CostotDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_DOLAR");

                entity.Property(e => e.CostotSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_SOLES");

                entity.Property(e => e.MargenDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_DOLAR");

                entity.Property(e => e.MargenSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_SOLES");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Semestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Trimestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRIMESTRE");

                entity.Property(e => e.ValorVentaConNcD)
                    .HasColumnType("numeric(38, 16)")
                    .HasColumnName("VALOR_VENTA_CON_NC_D");

                entity.Property(e => e.ValorVentaConNcS)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("VALOR_VENTA_CON_NC_S");
            });

            modelBuilder.Entity<OpevwVentaRentabilidadce>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_RENTABILIDADCE");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CostopromDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTOPROM_DOLAR");

                entity.Property(e => e.CostopromSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTOPROM_SOLES");

                entity.Property(e => e.CostotDolar)
                    .HasColumnType("numeric(30, 8)")
                    .HasColumnName("COSTOT_DOLAR");

                entity.Property(e => e.CostotSoles)
                    .HasColumnType("numeric(30, 8)")
                    .HasColumnName("COSTOT_SOLES");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_GRUPO");

                entity.Property(e => e.IdMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MARCA");

                entity.Property(e => e.IdModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MODELO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdSubgrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_SUBGRUPO");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.IdTipoProducto)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRODUCTO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.MargenDolar)
                    .HasColumnType("numeric(38, 16)")
                    .HasColumnName("MARGEN_DOLAR");

                entity.Property(e => e.MargenSoles)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("MARGEN_SOLES");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_DOCUMENTO");

                entity.Property(e => e.PorMargen)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("POR_MARGEN");

                entity.Property(e => e.PrecioD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("PRECIO_D");

                entity.Property(e => e.PrecioS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("PRECIO_S");

                entity.Property(e => e.Refvend)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFVEND");

                entity.Property(e => e.Semestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Subgrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUBGRUPO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoProd)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PROD");

                entity.Property(e => e.Trimestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRIMESTRE");

                entity.Property(e => e.ValorVentaConNcD)
                    .HasColumnType("numeric(38, 17)")
                    .HasColumnName("VALOR_VENTA_CON_NC_D");

                entity.Property(e => e.ValorVentaConNcS)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALOR_VENTA_CON_NC_S");

                entity.Property(e => e.ValorVentaSinNcD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_D");

                entity.Property(e => e.ValorVentaSinNcS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_S");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<OpevwVentaRentabilidaduc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OPEVW_VENTA_RENTABILIDADUC");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CostopromDolar)
                    .HasColumnType("numeric(38, 16)")
                    .HasColumnName("COSTOPROM_DOLAR");

                entity.Property(e => e.CostopromSoles)
                    .HasColumnType("numeric(38, 9)")
                    .HasColumnName("COSTOPROM_SOLES");

                entity.Property(e => e.CostotDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_DOLAR");

                entity.Property(e => e.CostotSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTOT_SOLES");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.IdCategoria)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_GRUPO");

                entity.Property(e => e.IdMarca)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MARCA");

                entity.Property(e => e.IdModelo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_MODELO");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdSubgrupo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_SUBGRUPO");

                entity.Property(e => e.IdTipoDocumento)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_DOCUMENTO");

                entity.Property(e => e.IdTipoProducto)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRODUCTO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.MargenDolar)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_DOLAR");

                entity.Property(e => e.MargenSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MARGEN_SOLES");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_DOCUMENTO");

                entity.Property(e => e.PorMargen)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("POR_MARGEN");

                entity.Property(e => e.PrecioD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("PRECIO_D");

                entity.Property(e => e.PrecioS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("PRECIO_S");

                entity.Property(e => e.Refvend)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFVEND");

                entity.Property(e => e.Semestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SEMESTRE");

                entity.Property(e => e.Subgrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUBGRUPO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoProd)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PROD");

                entity.Property(e => e.Trimestre)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRIMESTRE");

                entity.Property(e => e.ValorVentaConNcD)
                    .HasColumnType("numeric(38, 17)")
                    .HasColumnName("VALOR_VENTA_CON_NC_D");

                entity.Property(e => e.ValorVentaConNcS)
                    .HasColumnType("numeric(38, 10)")
                    .HasColumnName("VALOR_VENTA_CON_NC_S");

                entity.Property(e => e.ValorVentaSinNcD)
                    .HasColumnType("numeric(38, 18)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_D");

                entity.Property(e => e.ValorVentaSinNcS)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALOR_VENTA_SIN_NC_S");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<PlanDetallePresupuesto>(entity =>
            {
                entity.HasKey(e => new { e.IdPresupuesto, e.IdProducto, e.CdgServ, e.Tipo, e.Secuencia });

                entity.ToTable("PLAN_DETALLE_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.CdgServ)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.IdProveedor).HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Importe2)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE2");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");

                entity.Property(e => e.ValorUnit)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_UNIT");

                entity.HasOne(d => d.IdPresupuestoNavigation)
                    .WithMany(p => p.PlanDetallePresupuestos)
                    .HasForeignKey(d => d.IdPresupuesto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PLAN_DETALLE_PRESUPUESTO_OPE_PRESUPUESTO");
            });

            modelBuilder.Entity<PlanPresupuesto>(entity =>
            {
                entity.HasKey(e => e.IdPresupuesto);

                entity.ToTable("PLAN_PRESUPUESTO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.CantMesesFact)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_MESES_FACT");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANTIDAD_SERVICIO");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgIng)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ING");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .HasDefaultValueSql("('B')")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO")
                    .HasDefaultValueSql("(CONVERT([char](10),getdate(),(103)))");

                entity.Property(e => e.FechaTermino)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_TERMINO");

                entity.Property(e => e.FrecuenciaServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("FRECUENCIA_SERVICIO");

                entity.Property(e => e.GastoAdministrativo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("GASTO_ADMINISTRATIVO");

                entity.Property(e => e.GastoGeneral)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("GASTO_GENERAL");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdFacturar)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_FACTURAR");

                entity.Property(e => e.IdOportunidad)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_OPORTUNIDAD");

                entity.Property(e => e.IdParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PARENT");

                entity.Property(e => e.IdRequerimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.ImporteAdministrativo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_ADMINISTRATIVO");

                entity.Property(e => e.ImporteGeneral)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_GENERAL");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Renovacion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RENOVACION")
                    .HasDefaultValueSql("('NO')")
                    .IsFixedLength(true);

                entity.Property(e => e.Servicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERVICIO");

                entity.Property(e => e.SubTipoServicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SUB_TIPO_SERVICIO");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.SwtMain)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_MAIN")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtPres)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PRES")
                    .HasDefaultValueSql("('P')")
                    .IsFixedLength(true);

                entity.Property(e => e.TiempoOnside)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("TIEMPO_ONSIDE");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<QueryDocumentoCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_DOCUMENTO_CLIENTE");

                entity.Property(e => e.Banco)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdTd)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TD");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.PagoDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_DOCUMENTO");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(26, 4)")
                    .HasColumnName("SALDO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");
            });

            modelBuilder.Entity<QueryDocumentoProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_DOCUMENTO_PROVEEDOR");

                entity.Property(e => e.Banco)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdTd)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_TD");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.PagoDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_DOCUMENTO");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(26, 4)")
                    .HasColumnName("SALDO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Ubicacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBICACION");
            });

            modelBuilder.Entity<QueryKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_KARDEX");

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OC");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgProd)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Costod)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("COSTOD");

                entity.Property(e => e.CostounitDolares)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOUNIT_DOLARES");

                entity.Property(e => e.CostounitSoles)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOUNIT_SOLES");

                entity.Property(e => e.FechaTransacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_TRANSACION");

                entity.Property(e => e.ImpdolarVenta)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("IMPDOLAR_VENTA");

                entity.Property(e => e.ImpsolesVenta)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("IMPSOLES_VENTA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NomProd)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.NumeroDocu)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU");

                entity.Property(e => e.NumeroRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_REF");

                entity.Property(e => e.Persona)
                    .HasMaxLength(353)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoTransacion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRANSACION");
            });

            modelBuilder.Entity<QueryKardexSeries>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_KARDEX_SERIES");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Costod)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTOD");

                entity.Property(e => e.FechaTransacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_TRANSACION");

                entity.Property(e => e.Lote)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.NomProd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovi)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");

                entity.Property(e => e.TipoTransacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRANSACION");
            });

            modelBuilder.Entity<RepVwAnticiposCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_ANTICIPOS_CLIENTE");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.FecVcto)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_VCTO");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.NombrePersona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_PERSONA");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("SALDO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<RepVwAsignacionActivoFijo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_ASIGNACION_ACTIVO_FIJO");

                entity.Property(e => e.ActivoFijo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO_FIJO");

                entity.Property(e => e.Clase)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.DdFechaInicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_INICIO")
                    .IsFixedLength(true);

                entity.Property(e => e.DdFechaRetorno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_RETORNO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoFisico)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_FISICO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.NivelObs)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_OBS");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Serie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.Uso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("USO");
            });

            modelBuilder.Entity<RepVwAtencionTicket>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_ATENCION_TICKET");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.DdDfechaAtencion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_DFECHA_ATENCION");

                entity.Property(e => e.DdFechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_EMISION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumTicket)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_TICKET");

                entity.Property(e => e.Persona)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");
            });

            modelBuilder.Entity<RepVwCajaChica>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_CAJA_CHICA");

                entity.Property(e => e.Area)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumCaja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");
            });

            modelBuilder.Entity<RepVwComandaAnulado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_COMANDA_ANULADO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cpago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CPAGO");

                entity.Property(e => e.DdFechaAnulacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_ANULACION");

                entity.Property(e => e.DdFechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_PEDIDO");

                entity.Property(e => e.FechaAnula)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mesa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MESA");

                entity.Property(e => e.Mozo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOZO");

                entity.Property(e => e.NumeroPedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.SimboloMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SIMBOLO_MONEDA");

                entity.Property(e => e.UsuarioAnula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_ANULA");

                entity.Property(e => e.Zona)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ZONA");
            });

            modelBuilder.Entity<RepVwComisionesVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_COMISIONES_VENTA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Cobrado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COBRADO");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionPagada)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COMISION_PAGADA");

                entity.Property(e => e.ComisionPorPagar)
                    .HasColumnType("numeric(34, 12)")
                    .HasColumnName("COMISION_POR_PAGAR");

                entity.Property(e => e.DdFechaDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.DdFechaVencimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_VENCIMIENTO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.NumeroDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCU");

                entity.Property(e => e.NumeroPedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.PorCobrar)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("POR_COBRAR");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwCompromisoFinanciero>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_COMPROMISO_FINANCIERO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Compromiso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMPROMISO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.DdFechaDesembolso)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DESEMBOLSO");

                entity.Property(e => e.DdFechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VENCIMIENTO");

                entity.Property(e => e.FechaDocu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_DOCU")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaVencDocu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_VENC_DOCU")
                    .IsFixedLength(true);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumComp)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_comp");

                entity.Property(e => e.NumCor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COR");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("num_docu");

                entity.Property(e => e.NumItm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("num_itm");

                entity.Property(e => e.Pago)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("PAGO");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Saldo)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("SALDO");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");
            });

            modelBuilder.Entity<RepVwConsumoComensal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_CONSUMO_COMENSAL");

                entity.Property(e => e.Area)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgTt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TT");

                entity.Property(e => e.CodCc)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("COD_CC");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoCc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CC");

                entity.Property(e => e.Comensal)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("COMENSAL");

                entity.Property(e => e.DdFechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_REGISTRO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Local)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCAL");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NombreCc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CC");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoMenu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MENU");

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<RepVwConsumoComensal2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_CONSUMO_COMENSAL2");

                entity.Property(e => e.Area)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgTt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TT");

                entity.Property(e => e.CodCc)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("COD_CC");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoCc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CC");

                entity.Property(e => e.Comensal)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("COMENSAL");

                entity.Property(e => e.DdFechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_REGISTRO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Local)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOCAL");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NombreCc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CC");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Ref1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REF1");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoMenu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MENU");

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<RepVwContabilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_CONTABILIDAD");

                entity.Property(e => e.Analitica)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANALITICA");

                entity.Property(e => e.AnoVouc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgAnal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ANAL");

                entity.Property(e => e.CdgCct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CCT");

                entity.Property(e => e.CdgTana)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TANA");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCU");

                entity.Property(e => e.DdFechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VENC");

                entity.Property(e => e.DdFechaVouc)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VOUC");

                entity.Property(e => e.DebeDolares)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_DOLARES");

                entity.Property(e => e.DebeSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE_SOLES");

                entity.Property(e => e.Gerencial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GERENCIAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.HaberDolares)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_DOLARES");

                entity.Property(e => e.HaberSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER_SOLES");

                entity.Property(e => e.MesVouc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES_VOUC")
                    .IsFixedLength(true);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombreAnalitica)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ANALITICA");

                entity.Property(e => e.NombreCta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CTA");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.NumeroRegistro)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_REGISTRO");

                entity.Property(e => e.Oficial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFICIAL")
                    .IsFixedLength(true);

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Referencia3)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA3");

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("tip_cmb");

                entity.Property(e => e.TipoAnalitica)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANALITICA");

                entity.Property(e => e.TipoAsiento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ASIENTO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoOperacion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPERACION");
            });

            modelBuilder.Entity<RepVwContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_CONTRATO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.DdFechaCreacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_CREACION")
                    .IsFixedLength(true);

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.Deparmento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARMENTO");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Dni)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DNI");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.ImporteDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_DOCUMENTO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Nro)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO");

                entity.Property(e => e.NroContrato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_CONTRATO");

                entity.Property(e => e.PagoDocumento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGO_DOCUMENTO");

                entity.Property(e => e.PagoPendiente)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("PAGO_PENDIENTE");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Tdoc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");
            });

            modelBuilder.Entity<RepVwCostoValorventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_COSTO_VALORVENTA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoCajero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_CAJERO");

                entity.Property(e => e.CostoTotal)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("COSTO_TOTAL");

                entity.Property(e => e.CostoUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_UNITARIO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.Mesano)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("MESANO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCENTAJE");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Td)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TD");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TotalVenta)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("TOTAL_VENTA");

                entity.Property(e => e.Tp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TP");

                entity.Property(e => e.Utilidad)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("UTILIDAD");
            });

            modelBuilder.Entity<RepVwDaotVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DAOT_VENTA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.DdFechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCU");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MontoDolar)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("MONTO_DOLAR");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TC");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(26, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<RepVwDetalleDocumentoCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DETALLE_DOCUMENTO_COMPRA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.ConSinIgv)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CON_SIN_IGV");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaContabilizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CONTABILIZACION");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.DdFechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VENCIMIENTO");

                entity.Property(e => e.DebeHaber)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEBE_HABER");

                entity.Property(e => e.DescripcionConcepto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_CONCEPTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(26, 13)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RepVwDetalleEntregaRendir>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DETALLE_ENTREGA_RENDIR");

                entity.Property(e => e.Analitica)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ANALITICA");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CAJA");

                entity.Property(e => e.DdFechaLiquida)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_LIQUIDA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.ImpDcja)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DCJA");

                entity.Property(e => e.ImpPag)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_PAG");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.MonCaja)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_CAJA");

                entity.Property(e => e.MonDocu)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_DOCU");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumCaja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.TipCmb)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIP_CMB");

                entity.Property(e => e.TipoAnalitica)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANALITICA");
            });

            modelBuilder.Entity<RepVwDocumentoCompraFe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DOCUMENTO_COMPRA_FE");

                entity.Property(e => e.DdFechaContable)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CONTABLE");

                entity.Property(e => e.FormatoFe)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("FORMATO_FE");
            });

            modelBuilder.Entity<RepVwDocumentoCompraPercepcion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DOCUMENTO_COMPRA_PERCEPCION");

                entity.Property(e => e.DdFechaContabilizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CONTABILIZACION");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.FechaComprobante)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_COMPROBANTE");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.ImportePercepcion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE_PERCEPCION");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumeroComprobante)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_COMPROBANTE");

                entity.Property(e => e.NumeroRegistro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_REGISTRO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");
            });

            modelBuilder.Entity<RepVwDocumentoVenta2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DOCUMENTO_VENTA2");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano)
                    .HasColumnType("datetime")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.DdFechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VENCIMIENTO");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Mes)
                    .HasColumnType("datetime")
                    .HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.Refletra)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("REFLETRA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwDocumentoVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_DOCUMENTO_VENTA");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano)
                    .HasColumnType("datetime")
                    .HasColumnName("ANO");

                entity.Property(e => e.BaseCalculada)
                    .HasColumnType("numeric(33, 19)")
                    .HasColumnName("BASE_CALCULADA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CostoEstandarSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("COSTO_ESTANDAR_SOLES");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.DdFechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_VENCIMIENTO");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.MargenBrutoSoles)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("MARGEN_BRUTO_SOLES");

                entity.Property(e => e.Mes)
                    .HasColumnType("datetime")
                    .HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MontoDoc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_DOC");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Nroop)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NROOP");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.PorcentajeMargen)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCENTAJE_MARGEN");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoCambioDoc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO_DOC");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwEntregaRendir>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_ENTREGA_RENDIR");

                entity.Property(e => e.Analitica)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ANALITICA");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaCaja)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CAJA");

                entity.Property(e => e.FecCierre)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CIERRE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumCaja)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CAJA");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.TipoAnalitica)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ANALITICA");
            });

            modelBuilder.Entity<RepVwGastosCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_GASTOS_COMPRAS");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgGasto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_GASTO");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.CuentaReferenciaGasto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_REFERENCIA_GASTO");

                entity.Property(e => e.DdFechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_EMISION");

                entity.Property(e => e.FecCmp)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_CMP");

                entity.Property(e => e.Glosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.IdDocumento).HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.NombreCuenta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CUENTA");

                entity.Property(e => e.NombreGasto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_GASTO");

                entity.Property(e => e.Num)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumSec)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NUM_SEC");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.RucPrv)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_PRV");

                entity.Property(e => e.Tdoc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<RepVwInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_INVENTARIO");

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CategoriaProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA_PRODUCTO");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OC");

                entity.Property(e => e.CdgOp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OP");

                entity.Property(e => e.CdgOs)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OS");

                entity.Property(e => e.CdgOt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OT");

                entity.Property(e => e.CdgProd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.CodigoGenerado)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GENERADO");

                entity.Property(e => e.CostoCompra)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_COMPRA");

                entity.Property(e => e.CostoDocu)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("COSTO_DOCU");

                entity.Property(e => e.CostoOc)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("COSTO_OC");

                entity.Property(e => e.CostoUnitDolar)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO_UNIT_DOLAR");

                entity.Property(e => e.CostoUnitSoles)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("COSTO_UNIT_SOLES");

                entity.Property(e => e.CtaExistencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTA_EXISTENCIA");

                entity.Property(e => e.DdFechaTransaccion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_TRANSACCION");

                entity.Property(e => e.Documento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.ImporteDolar)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_DOLAR");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(33, 12)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.NomProd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.Persona)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA");

                entity.Property(e => e.PrecioCompraSoles)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_COMPRA_SOLES");

                entity.Property(e => e.PrecioDolar)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_DOLAR");

                entity.Property(e => e.Rea)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoMovi)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MOVI");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Tra)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA");

                entity.Property(e => e.Vehiculo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VEHICULO");
            });

            modelBuilder.Entity<RepVwLetraCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_LETRA_CLIENTE");

                entity.Property(e => e.Aceptante)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ACEPTANTE");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaGiro)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_GIRO");

                entity.Property(e => e.DdVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_VENCIMIENTO");

                entity.Property(e => e.DireccionAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_AVAL");

                entity.Property(e => e.Estado)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Facturas)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("FACTURAS");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombreAval)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_AVAL");

                entity.Property(e => e.NroBanco)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_BANCO");

                entity.Property(e => e.NroCanje)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_CANJE");

                entity.Property(e => e.NroDocumento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_DOCUMENTO");

                entity.Property(e => e.Plazo).HasColumnName("PLAZO");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.RucAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC_AVAL");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TelefonoAval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_AVAL");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");
            });

            modelBuilder.Entity<RepVwLetraCliente2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_LETRA_CLIENTE2");

                entity.Property(e => e.Contrato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONTRATO");

                entity.Property(e => e.DiasVencidos).HasColumnName("DIAS_VENCIDOS");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Garante)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GARANTE");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Letra)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LETRA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.TelefonoGarante)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_GARANTE");
            });

            modelBuilder.Entity<RepVwLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_LOG");

                entity.Property(e => e.DdFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CREACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Nota)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RepVwObtenerRegistroVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_OBTENER_REGISTRO_VENTA");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoPedido)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PEDIDO");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.DdFechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCU");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.ImporteDscto)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("IMPORTE_DSCTO");

                entity.Property(e => e.ImporteItem)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("IMPORTE_ITEM");

                entity.Property(e => e.ImporteItemConDscto)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTE_ITEM_CON_DSCTO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.MontoDolar)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("MONTO_DOLAR");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumOperacion)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_OPERACION");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.PorDscto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("POR_DSCTO");

                entity.Property(e => e.PrecioConDscto)
                    .HasColumnType("numeric(34, 12)")
                    .HasColumnName("PRECIO_CON_DSCTO");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.SubGrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUB_GRUPO");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TC");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.TipoRegistro)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_REGISTRO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(25, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(26, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<RepVwObtenerVentaUtil>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_OBTENER_VENTA_UTIL");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgProd)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.CostoTotal)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("COSTO_TOTAL");

                entity.Property(e => e.CostoUnit)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO_UNIT");

                entity.Property(e => e.DdFechaDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCU");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCENTAJE");

                entity.Property(e => e.PrecioUnit)
                    .HasColumnType("numeric(33, 19)")
                    .HasColumnName("PRECIO_UNIT");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.SubGrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUB_GRUPO");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TC");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TotalVenta)
                    .HasColumnType("numeric(38, 13)")
                    .HasColumnName("TOTAL_VENTA");

                entity.Property(e => e.TotalVentaSinIgv)
                    .HasColumnType("numeric(38, 7)")
                    .HasColumnName("TOTAL_VENTA_SIN_IGV");

                entity.Property(e => e.UtilidadBrutaSinIgv)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("UTILIDAD_BRUTA_SIN_IGV");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwOrdenPedidoLetra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_ORDEN_PEDIDO_LETRA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.DdFechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_PEDIDO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Letras)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LETRAS");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumeroPedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");
            });

            modelBuilder.Entity<RepVwPagoConsumoComensal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PAGO_CONSUMO_COMENSAL");

                entity.Property(e => e.Comensal)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENSAL");

                entity.Property(e => e.DdFechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_PAGO");

                entity.Property(e => e.DdFechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_REGISTRO");

                entity.Property(e => e.ImportePagado)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("IMPORTE_PAGADO");

                entity.Property(e => e.MontoEmpresa)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_EMPRESA");

                entity.Property(e => e.MontoTrabajador)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO_TRABAJADOR");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.TipoMenu)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_MENU");
            });

            modelBuilder.Entity<RepVwPagoProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PAGO_PROVEEDOR");

                entity.Property(e => e.Banco)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.ContadoCredito)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONTADO_CREDITO");

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.CuentaCci)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA_CCI");

                entity.Property(e => e.DdFechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_EMISION");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.FechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_EMISION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.NombreContacto1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CONTACTO1");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.TelefonoContacto1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO_CONTACTO1");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");
            });

            modelBuilder.Entity<RepVwPorcotizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PORCOTIZACION");

                entity.Property(e => e.DdFechaHoy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DD_FECHA_HOY")
                    .IsFixedLength(true);

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("numeric(25, 11)")
                    .HasColumnName("PORCENTAJE");

                entity.Property(e => e.TipoOferta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OFERTA");

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(59)
                    .IsUnicode(false)
                    .HasColumnName("TITULO");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PRODUCTO");

                entity.Property(e => e.Ancho)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("ANCHO");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.DdFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CREACION");

                entity.Property(e => e.DdFechaUltimaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_ULTIMA_MODIFICACION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Inventariable)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIABLE");

                entity.Property(e => e.Largo)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("LARGO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Peso)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PESO");

                entity.Property(e => e.Subgrupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SUBGRUPO");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.UnidadAlmacen)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_ALMACEN");

                entity.Property(e => e.UnidadCompra)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_COMPRA");

                entity.Property(e => e.UnidadVenta)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_VENTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RepVwProducto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PRODUCTO2");

                entity.Property(e => e.Almacen1)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("ALMACEN1");

                entity.Property(e => e.Almacen2)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("ALMACEN2");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.DdFechaHoy)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_HOY");

                entity.Property(e => e.FactorConversion)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("FACTOR_CONVERSION");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.PrecioMinimo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_MINIMO");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<RepVwProductoNoInventariable>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_PRODUCTO_NO_INVENTARIABLE");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.DdFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_CREACION");

                entity.Property(e => e.DdFechaUltimaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_ULTIMA_MODIFICACION");

                entity.Property(e => e.Inventariable)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIABLE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RepVwReqOcCc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_REQ_OC_CC");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.DdFechaOc)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_OC");

                entity.Property(e => e.EstadoOc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_OC");

                entity.Property(e => e.IngAlmacen)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ING_ALMACEN");

                entity.Property(e => e.MonOc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON_OC");

                entity.Property(e => e.MonOp)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON_OP");

                entity.Property(e => e.NroCheque)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NRO_CHEQUE");

                entity.Property(e => e.NumeroPedido)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.TotalOc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_OC");

                entity.Property(e => e.TotalOp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_OP");
            });

            modelBuilder.Entity<RepVwReqOpCob>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_REQ_OP_COB");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.DdFechaOp)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_OP");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.MonOp)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON_OP");

                entity.Property(e => e.NumeroPedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_PEDIDO");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.TotalCheque)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_CHEQUE");

                entity.Property(e => e.TotalCobrado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_COBRADO");

                entity.Property(e => e.TotalGcc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_GCC");

                entity.Property(e => e.TotalOc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_OC");

                entity.Property(e => e.TotalOp)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_OP");

                entity.Property(e => e.TotalXCobrar)
                    .HasColumnType("numeric(15, 4)")
                    .HasColumnName("TOTAL_X_COBRAR");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");
            });

            modelBuilder.Entity<RepVwRq>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_RQS");

                entity.Property(e => e.CantDevuelta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("CANT_DEVUELTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgOc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_OC");

                entity.Property(e => e.CdgRq)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_RQ");

                entity.Property(e => e.CdgSol)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SOL");

                entity.Property(e => e.DdFechapedido)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHAPEDIDO");

                entity.Property(e => e.EstadoSol)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_SOL");

                entity.Property(e => e.FechaPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PEDIDO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Prioridad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIDAD");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.ResponsableComp)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE_COMP");

                entity.Property(e => e.ResponsableRqs)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE_RQS");

                entity.Property(e => e.Stock)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK");

                entity.Property(e => e.Uso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("USO");
            });

            modelBuilder.Entity<RepVwSaldoKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_SALDO_KARDEX");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.AñO).HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.DdFechaFinMes)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_FIN_MES");

                entity.Property(e => e.FechaProcesoUltimaValorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROCESO_ULTIMA_VALORIZACION");

                entity.Property(e => e.Inventariable)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIABLE");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.SaldoMes)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO_MES");

                entity.Property(e => e.UsuarioProcesoUltimaValorizacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_PROCESO_ULTIMA_VALORIZACION");
            });

            modelBuilder.Entity<RepVwSaldoNegativo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_SALDO_NEGATIVOS");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.AñO).HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.DdFechaFinMes)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_FIN_MES");

                entity.Property(e => e.FechaProcesoUltimaValorizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROCESO_ULTIMA_VALORIZACION");

                entity.Property(e => e.Inventariable)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INVENTARIABLE");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.SaldoMes)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SALDO_MES");

                entity.Property(e => e.UsuarioProcesoUltimaValorizacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_PROCESO_ULTIMA_VALORIZACION");
            });

            modelBuilder.Entity<RepVwServicioOt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_SERVICIO_OTS");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodRef)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COD_REF");

                entity.Property(e => e.Codact)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODACT");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Cuadrilla)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUADRILLA");

                entity.Property(e => e.DdFechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_REGISTRO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.TipoServ)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_SERV");

                entity.Property(e => e.TotalValorPunto)
                    .HasColumnType("numeric(31, 10)")
                    .HasColumnName("TOTAL_VALOR_PUNTO");

                entity.Property(e => e.ValorPunto)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_PUNTO");
            });

            modelBuilder.Entity<RepVwStockUbicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_STOCK_UBICACION");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.DdFechaActual)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_ACTUAL");

                entity.Property(e => e.Diferencia)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("DIFERENCIA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.TotalStockUbicacion)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("TOTAL_STOCK_UBICACION");

                entity.Property(e => e.Ubicacion01)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("UBICACION_01");

                entity.Property(e => e.Ubicacion02)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("UBICACION_02");

                entity.Property(e => e.Ubicacion03)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("UBICACION_03");

                entity.Property(e => e.Ubicacion04)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("UBICACION_04");
            });

            modelBuilder.Entity<RepVwTesoreriaDet>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_TESORERIA_DET");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgBco)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.Cheque)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CHEQUE");

                entity.Property(e => e.Concepto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.Cuenta)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.Debe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE");

                entity.Property(e => e.DebeSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("DEBE_SOLES");

                entity.Property(e => e.Debec)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBEC");

                entity.Property(e => e.FechaRef1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_REF1");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Haber)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER");

                entity.Property(e => e.HaberSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("HABER_SOLES");

                entity.Property(e => e.Haberc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABERC");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.Numero)
                    .HasMaxLength(1021)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");
            });

            modelBuilder.Entity<RepVwTesorerium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_TESORERIA");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Banco)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.CdgBco)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BCO");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgTmov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TMOV");

                entity.Property(e => e.Cheque)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHEQUE");

                entity.Property(e => e.Concepto)
                    .HasMaxLength(702)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO");

                entity.Property(e => e.Cuenta)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.Debe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE");

                entity.Property(e => e.DebeSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("DEBE_SOLES");

                entity.Property(e => e.FechaRef1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_REF1");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Haber)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER");

                entity.Property(e => e.HaberSoles)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("HABER_SOLES");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Movimiento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO");

                entity.Property(e => e.NumRef)
                    .HasMaxLength(23)
                    .IsUnicode(false)
                    .HasColumnName("NUM_REF");

                entity.Property(e => e.Numero)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");
            });

            modelBuilder.Entity<RepVwValorizacionProd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_VALORIZACION_PROD");

                entity.Property(e => e.AlmacenNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN_NOMBRE");

                entity.Property(e => e.CdgBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CDG_BARRA");

                entity.Property(e => e.CdgProd)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROD");

                entity.Property(e => e.CostoTotalDolares)
                    .HasColumnType("numeric(38, 12)")
                    .HasColumnName("COSTO_TOTAL_DOLARES");

                entity.Property(e => e.CostoTotalSoles)
                    .HasColumnType("numeric(38, 12)")
                    .HasColumnName("COSTO_TOTAL_SOLES");

                entity.Property(e => e.NomProd)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PROD");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RepVwVentaExportar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VW_VENTA_EXPORTAR");

                entity.Property(e => e.Abono)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ABONO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CondicionPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.DdFechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_EMISION");

                entity.Property(e => e.Descuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DESCUENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.Efectivo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("EFECTIVO");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Igvitem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGVITEM");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumeroMaquina)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_MAQUINA");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorIgvitem)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGVITEM");

                entity.Property(e => e.PrecioOriginal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_ORIGINAL");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Reftdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFTDOC");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SubTotalitem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTALITEM");

                entity.Property(e => e.SwtPigv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PIGV")
                    .IsFixedLength(true);

                entity.Property(e => e.TextoImporte)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("TEXTO_IMPORTE");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.Turno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TURNO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.Vuelto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VUELTO");
            });

            modelBuilder.Entity<RepVwutilAlmacen>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VWUTIL_ALMACEN");

                entity.Property(e => e.CantidadCompra)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CANTIDAD_COMPRA");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCTO");

                entity.Property(e => e.DdFechaMovimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_MOVIMIENTO");

                entity.Property(e => e.FactorAlmacen)
                    .HasColumnType("numeric(14, 6)")
                    .HasColumnName("FACTOR_ALMACEN");

                entity.Property(e => e.FactorProducto)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("FACTOR_PRODUCTO");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DOCUMENTO");

                entity.Property(e => e.FechaMovimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_MOVIMIENTO");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MovimientoAlmacen)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOVIMIENTO_ALMACEN");

                entity.Property(e => e.NumDocu)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.PrecioUnitarioSoles)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("PRECIO_UNITARIO_SOLES");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tdoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.UnidadAlmacen)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_ALMACEN");

                entity.Property(e => e.UnidadAlmacenProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_ALMACEN_PRODUCTO");

                entity.Property(e => e.UnidadCompraProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_COMPRA_PRODUCTO");
            });

            modelBuilder.Entity<RepVwutilCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REP_VWUTIL_COMPRAS");

                entity.Property(e => e.AñoPeriodo).HasColumnName("AÑO_PERIODO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCTO");

                entity.Property(e => e.Correlativo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.DdFechaDocumento)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_DOCUMENTO");

                entity.Property(e => e.DdFechaPeriodo)
                    .HasColumnType("datetime")
                    .HasColumnName("DD_FECHA_PERIODO");

                entity.Property(e => e.Factor)
                    .HasColumnType("numeric(8, 4)")
                    .HasColumnName("FACTOR");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.ImporteSoles)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IMPORTE_SOLES");

                entity.Property(e => e.MesPeriodo).HasColumnName("MES_PERIODO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_DOCU");

                entity.Property(e => e.NumGuia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_GUIA");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("PROVEEDOR");

                entity.Property(e => e.Ruc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC");

                entity.Property(e => e.Tdoc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TDOC");

                entity.Property(e => e.UnidadCompraDocumento)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_COMPRA_DOCUMENTO");

                entity.Property(e => e.UnidadCompraProducto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_COMPRA_PRODUCTO");
            });

            modelBuilder.Entity<ReqAlmacen>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REQ_ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.CoocId)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cooc_id");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ReqId)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("req_id");

                entity.Property(e => e.SecuenciaGuia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("secuencia_guia");

                entity.Property(e => e.SecuenciaOc)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("secuencia_oc");

                entity.Property(e => e.SecuenciaReq)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("secuencia_req");
            });

            modelBuilder.Entity<ReqOc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REQ_OC");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.CoocId)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("cooc_id");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.ReqId)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("req_id");

                entity.Property(e => e.SecuenciaOc)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("secuencia_oc");

                entity.Property(e => e.SecuenciaReq)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("secuencia_req");
            });

            modelBuilder.Entity<RqDetalleCcPresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RQ_DETALLE_CC_PRESUPUESTO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Mes)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES")
                    .IsFixedLength(true);

                entity.Property(e => e.NumPre)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PRE");

                entity.Property(e => e.NumeroConcepto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CONCEPTO");

                entity.Property(e => e.Presupuestado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRESUPUESTADO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RqDetallePresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RQ_DETALLE_PRESUPUESTO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Mes)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES")
                    .IsFixedLength(true);

                entity.Property(e => e.NumPre)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PRE");

                entity.Property(e => e.NumeroConcepto)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_CONCEPTO");

                entity.Property(e => e.Presupuestado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRESUPUESTADO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RqPresupuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RQ_PRESUPUESTO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Nota)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.NumPre)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PRE");

                entity.Property(e => e.NumPreP)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PRE_P");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhAnexoPersonal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_ANEXO_PERSONAL");

                entity.Property(e => e.Archivo)
                    .HasColumnType("image")
                    .HasColumnName("ARCHIVO");

                entity.Property(e => e.CdgTdoc)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TDOC");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Extension)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXTENSION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaEmision)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_EMISION");

                entity.Property(e => e.FechaVencimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.NombreArchivo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ARCHIVO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RrhhAsignacionRecurso>(entity =>
            {
                entity.HasKey(e => e.IdAsignacion);

                entity.ToTable("RRHH_ASIGNACION_RECURSO");

                entity.Property(e => e.IdAsignacion)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_ASIGNACION");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaDevolucion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DEVOLUCION");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.Serie)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RrhhCapacitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CAPACITACION");

                entity.Property(e => e.CantidadHora)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CANTIDAD_HORA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFrealizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FREALIZACION");

                entity.Property(e => e.FechaIrealizacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_IREALIZACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Lugar)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR");

                entity.Property(e => e.NombreCurso)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CURSO");

                entity.Property(e => e.Nota)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOTA");

                entity.Property(e => e.Organizacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ORGANIZACION");

                entity.Property(e => e.TipoCurso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CURSO");

                entity.Property(e => e.TipoEvento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_EVENTO");

                entity.Property(e => e.TipoOrganizacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ORGANIZACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhConceptoPersona>(entity =>
            {
                entity.HasKey(e => new { e.CdgPara, e.IdPersona, e.Ano, e.Mes, e.Semana, e.CdgProy });

                entity.ToTable("RRHH_CONCEPTO_PERSONA");

                entity.Property(e => e.CdgPara)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhConsolidadoAsistenciaTareo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CONSOLIDADO_ASISTENCIA_TAREO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgScc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SCC");

                entity.Property(e => e.CdgTurno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TURNO");

                entity.Property(e => e.DiasTrab).HasColumnName("DIAS_TRAB");

                entity.Property(e => e.Faltas).HasColumnName("FALTAS");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Feriado)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("FERIADO");

                entity.Property(e => e.He100)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_100");

                entity.Property(e => e.He25)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_25");

                entity.Property(e => e.He35)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_35");

                entity.Property(e => e.He60)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_60");

                entity.Property(e => e.HoraTrab)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("HORA_TRAB");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MinuTard)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("MINU_TARD");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhConsolidadoAsistencium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CONSOLIDADO_ASISTENCIA");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.DiasTrab).HasColumnName("DIAS_TRAB");

                entity.Property(e => e.Faltas).HasColumnName("FALTAS");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Feriado)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("FERIADO");

                entity.Property(e => e.He100)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_100");

                entity.Property(e => e.He25)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_25");

                entity.Property(e => e.He35)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_35");

                entity.Property(e => e.He60)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_60");

                entity.Property(e => e.HoraTrab)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("HORA_TRAB");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MinuTard)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("MINU_TARD");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CONTRATO");

                entity.Property(e => e.Contrato).HasColumnName("CONTRATO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaInscripcion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INSCRIPCION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FinPrueba)
                    .HasColumnType("datetime")
                    .HasColumnName("FIN_PRUEBA");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.InicioPrueba)
                    .HasColumnType("datetime")
                    .HasColumnName("INICIO_PRUEBA");

                entity.Property(e => e.Renovacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RENOVACION")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoContrato)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CONTRATO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhControlVacacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CONTROL_VACACION");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.AnoPago).HasColumnName("ANO_PAGO");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.DiasEfectivo)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("DIAS_EFECTIVO");

                entity.Property(e => e.DiasVaca)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("DIAS_VACA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRetorno)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RETORNO");

                entity.Property(e => e.FechaSalida)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_SALIDA");

                entity.Property(e => e.IdControl)
                    .HasColumnType("numeric(15, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CONTROL");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.MesPago).HasColumnName("MES_PAGO");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.TipoVaca)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VACA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhCta5taCat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CTA_5TA_CAT");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgPara)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.SwtTipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RrhhCtaCteTrabajador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_CTA_CTE_TRABAJADOR");

                entity.Property(e => e.CdgPara)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Pagado)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PAGADO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhDerechoHabiente>(entity =>
            {
                entity.HasKey(e => new { e.IdPersona, e.IdDh });

                entity.ToTable("RRHH_DERECHO_HABIENTE");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.IdDh)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_DH");

                entity.Property(e => e.AltaDh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ALTA_DH")
                    .IsFixedLength(true);

                entity.Property(e => e.ApellidoMaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_MATERNO");

                entity.Property(e => e.ApellidoPaterno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("APELLIDO_PATERNO");

                entity.Property(e => e.BajaDh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BAJA_DH")
                    .IsFixedLength(true);

                entity.Property(e => e.Departamento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DomicilioDh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOMICILIO_DH")
                    .IsFixedLength(true);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaAlta)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ALTA");

                entity.Property(e => e.FechaBaja)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_BAJA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_NACIMIENTO");

                entity.Property(e => e.Incapacidad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INCAPACIDAD")
                    .IsFixedLength(true);

                entity.Property(e => e.Interior)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INTERIOR");

                entity.Property(e => e.MotivoBaja)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_BAJA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NombreVia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VIA");

                entity.Property(e => e.NombreZona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ZONA");

                entity.Property(e => e.NroAcreditaPaternidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_ACREDITA_PATERNIDAD");

                entity.Property(e => e.NroDocumento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_DOCUMENTO");

                entity.Property(e => e.NroVia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NRO_VIA");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.ResolucionDirectoral)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RESOLUCION_DIRECTORAL");

                entity.Property(e => e.Sexo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SEXO");

                entity.Property(e => e.SituacionDh)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SITUACION_DH");

                entity.Property(e => e.TdAcreditaPaternidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TD_ACREDITA_PATERNIDAD");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.Ubigeo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Via)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VIA");

                entity.Property(e => e.VinculoFamiliar)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VINCULO_FAMILIAR");

                entity.Property(e => e.Zona)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ZONA");
            });

            modelBuilder.Entity<RrhhDetalleHorario>(entity =>
            {
                entity.HasKey(e => new { e.CdgHorario, e.Dia });

                entity.ToTable("RRHH_DETALLE_HORARIO");

                entity.Property(e => e.CdgHorario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_HORARIO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaLimite)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DIA_LIMITE");

                entity.Property(e => e.EntradaRefrigerio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENTRADA_REFRIGERIO");

                entity.Property(e => e.Ingreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INGRESO");

                entity.Property(e => e.LimiteFin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIMITE_FIN");

                entity.Property(e => e.LimiteInicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIMITE_INICIO");

                entity.Property(e => e.Salida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALIDA");

                entity.Property(e => e.SalidaRefrigerio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SALIDA_REFRIGERIO");
            });

            modelBuilder.Entity<RrhhDetalleIncidenciaMemo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_DETALLE_INCIDENCIA_MEMO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Secuencia2)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA2");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Tipo2)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO2");
            });

            modelBuilder.Entity<RrhhDetallePlanilla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_DETALLE_PLANILLA");

                entity.Property(e => e.AfectoConafovicer)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_CONAFOVICER")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoCts)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_CTS")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoEssalud)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_ESSALUD")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoEssaludSctr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_ESSALUD_SCTR")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoGratificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_GRATIFICACION")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoLiquidacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_LIQUIDACION")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoOnpSctr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_ONP_SCTR")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoQuintaCategoria)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_QUINTA_CATEGORIA")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoSenati)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_SENATI")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoSistemaPension)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_SISTEMA_PENSION")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoSistemaPrivadoPension)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_SISTEMA_PRIVADO_PENSION")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoUtil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_UTIL")
                    .IsFixedLength(true);

                entity.Property(e => e.AfectoVacacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFECTO_VACACION")
                    .IsFixedLength(true);

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.AnoRef1)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REF1");

                entity.Property(e => e.Asistencia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ASISTENCIA")
                    .IsFixedLength(true);

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgParam)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARAM");

                entity.Property(e => e.CdgPlanilla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PLANILLA");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Ida)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IDA")
                    .IsFixedLength(true);

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesRef1)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REF1");

                entity.Property(e => e.NombreParam)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_PARAM");

                entity.Property(e => e.Nrnr)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NRNR");

                entity.Property(e => e.RefeParam)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFE_PARAM");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.SemanaRef1)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMANA_REF1");

                entity.Property(e => e.SwtPla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PLA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAsistencia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_ASISTENCIA")
                    .IsFixedLength(true);

                entity.Property(e => e.Unidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });

            modelBuilder.Entity<RrhhDetallePrestamo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_DETALLE_PRESTAMO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Item)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("ITEM");

                entity.Property(e => e.Mes)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhDistribucionCentrocosto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_DISTRIBUCION_CENTROCOSTO");

                entity.Property(e => e.CentroCosto)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.CodigoEstablecimiento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ESTABLECIMIENTO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Porcentaje)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PORCENTAJE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RrhhHorario>(entity =>
            {
                entity.HasKey(e => e.CdgHorario);

                entity.ToTable("RRHH_HORARIO");

                entity.Property(e => e.CdgHorario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_HORARIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhIncidenciaMemo>(entity =>
            {
                entity.HasKey(e => new { e.Secuencia, e.IdPersona, e.Tipo });

                entity.ToTable("RRHH_INCIDENCIA_MEMO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RrhhMarcacionAsistencium>(entity =>
            {
                entity.HasKey(e => e.IdMarcacion)
                    .HasName("PK_RRHH_MARCACION_ASISTENCIA_1");

                entity.ToTable("RRHH_MARCACION_ASISTENCIA");

                entity.Property(e => e.IdMarcacion)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_MARCACION");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgProy)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.Faltas).HasColumnName("FALTAS");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.He100)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_100");

                entity.Property(e => e.He25)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_25");

                entity.Property(e => e.He35)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_35");

                entity.Property(e => e.He60)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HE_60");

                entity.Property(e => e.HoraIngreso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_INGRESO")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraSalida)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORA_SALIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.HoraTrab)
                    .HasColumnType("numeric(8, 2)")
                    .HasColumnName("HORA_TRAB");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("datetime")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MinuTard)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("MINU_TARD");

                entity.Property(e => e.Salida)
                    .HasColumnType("datetime")
                    .HasColumnName("SALIDA");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhPermisoSancion>(entity =>
            {
                entity.HasKey(e => new { e.IdPersona, e.TipoPermiso, e.Ano, e.Mes, e.Semana, e.CdgProy })
                    .HasName("PK_RRHH_PERMISO_SANCION_1");

                entity.ToTable("RRHH_PERMISO_SANCION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.TipoPermiso)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PERMISO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MES");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Horas)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("HORAS");

                entity.Property(e => e.Referencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhPlanilla>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_PLANILLA");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.AnoRef1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO_REF1")
                    .IsFixedLength(true);

                entity.Property(e => e.Area)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Cargo)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CARGO");

                entity.Property(e => e.CdgMon)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MON");

                entity.Property(e => e.CdgPlanilla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PLANILLA");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.Cuspp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CUSPP");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.EstableContratado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLE_CONTRATADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCese)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CESE");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFinS)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_S");

                entity.Property(e => e.FechaFinVaca)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_VACA");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaInicioS)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_S");

                entity.Property(e => e.FechaInicioVaca)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_VACA");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.FechaProceso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PROCESO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.ImpAportacion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_APORTACION");

                entity.Property(e => e.ImpDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_DESCUENTO");

                entity.Property(e => e.ImpIngreso)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_INGRESO");

                entity.Property(e => e.ImpNeto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_NETO");

                entity.Property(e => e.ImpNoremunerativo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_NOREMUNERATIVO");

                entity.Property(e => e.ImpRemunerativo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_REMUNERATIVO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.NumOrig)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_ORIG");

                entity.Property(e => e.NumVouc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_VOUC");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Obra)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("OBRA");

                entity.Property(e => e.RegimenPensionario)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN_PENSIONARIO");

                entity.Property(e => e.Semana).HasColumnName("SEMANA");

                entity.Property(e => e.SwtPago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_PAGO")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhPrestamo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_PRESTAMO");

                entity.Property(e => e.CdgPara)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaOperacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_OPERACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Interes)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("INTERES");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhRecordVacacional>(entity =>
            {
                entity.HasKey(e => new { e.IdPersona, e.Ano });

                entity.ToTable("RRHH_RECORD_VACACIONAL");

                entity.Property(e => e.IdPersona).HasColumnName("ID_PERSONA");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhReferenciaCuentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_REFERENCIA_CUENTA");

                entity.Property(e => e.Activo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("BANCO");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NumCta)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CTA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.TipoCta)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CTA");
            });

            modelBuilder.Entity<RrhhReferenciaTrabajador>(entity =>
            {
                entity.HasKey(e => e.IdPersona);

                entity.ToTable("RRHH_REFERENCIA_TRABAJADOR");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.AfiliacionEssaludVida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFILIACION_ESSALUD_VIDA")
                    .IsFixedLength(true);

                entity.Property(e => e.AfiliadoEpsServicioPropio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AFILIADO_EPS_SERVICIO_PROPIO")
                    .IsFixedLength(true);

                entity.Property(e => e.AptitudHabilidad)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("APTITUD_HABILIDAD");

                entity.Property(e => e.Area)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.AtencionSalud)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATENCION_SALUD")
                    .IsFixedLength(true);

                entity.Property(e => e.Cargo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CARGO");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CategoriaOcupacional)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA_OCUPACIONAL")
                    .IsFixedLength(true);

                entity.Property(e => e.CategoriaTrabajador)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA_TRABAJADOR");

                entity.Property(e => e.Complexion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("COMPLEXION");

                entity.Property(e => e.CondicionDomicilio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_DOMICILIO")
                    .IsFixedLength(true);

                entity.Property(e => e.ControlaAsistencia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CONTROLA_ASISTENCIA")
                    .IsFixedLength(true);

                entity.Property(e => e.Cuspp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUSPP");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Discapacidad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DISCAPACIDAD")
                    .IsFixedLength(true);

                entity.Property(e => e.EnfermedadDiscapacidad)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("ENFERMEDAD_DISCAPACIDAD");

                entity.Property(e => e.Eps)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("EPS");

                entity.Property(e => e.EstableContratado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLE_CONTRATADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Estatura)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("ESTATURA");

                entity.Property(e => e.FechaInscripcion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INSCRIPCION");

                entity.Property(e => e.Horario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HORARIO");

                entity.Property(e => e.Intermitente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INTERMITENTE")
                    .IsFixedLength(true);

                entity.Property(e => e.JornadaTrabajoMaximo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JORNADA_TRABAJO_MAXIMO")
                    .IsFixedLength(true);

                entity.Property(e => e.JubilacionAnticipada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JUBILACION_ANTICIPADA")
                    .IsFixedLength(true);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelEducativo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_EDUCATIVO");

                entity.Property(e => e.NoDsctaTardanza)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NO_DSCTA_TARDANZA")
                    .IsFixedLength(true);

                entity.Property(e => e.Notas)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("NOTAS");

                entity.Property(e => e.Ocupacion)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("OCUPACION");

                entity.Property(e => e.PeriocidadIngreso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PERIOCIDAD_INGRESO");

                entity.Property(e => e.Peso)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PESO");

                entity.Property(e => e.RegimenAlternativo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN_ALTERNATIVO")
                    .IsFixedLength(true);

                entity.Property(e => e.RegimenPensionario)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("REGIMEN_PENSIONARIO");

                entity.Property(e => e.RemuneracionBasica)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("REMUNERACION_BASICA");

                entity.Property(e => e.SinAporte)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SIN_APORTE")
                    .IsFixedLength(true);

                entity.Property(e => e.Sindicalizado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SINDICALIZADO")
                    .IsFixedLength(true);

                entity.Property(e => e.SistemaPension)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SISTEMA_PENSION")
                    .IsFixedLength(true);

                entity.Property(e => e.SituacionEspecial)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SITUACION_ESPECIAL");

                entity.Property(e => e.SituacionTrabajador)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SITUACION_TRABAJADOR");

                entity.Property(e => e.TipoCategoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CATEGORIA")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoComision)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_COMISION")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoContrato)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CONTRATO");

                entity.Property(e => e.TipoPago)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAGO");

                entity.Property(e => e.TipoSangre)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_SANGRE");

                entity.Property(e => e.TipoTrabajador)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_TRABAJADOR");

                entity.Property(e => e.TrabajoHorarioNocturno)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRABAJO_HORARIO_NOCTURNO")
                    .IsFixedLength(true);

                entity.Property(e => e.Universidad)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIVERSIDAD");
            });

            modelBuilder.Entity<RrhhSemana>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.Semana, e.CdgProy })
                    .HasName("PK_RRHH_SEMANA_1");

                entity.ToTable("RRHH_SEMANA");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Semana)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("SEMANA");

                entity.Property(e => e.CdgProy)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PROY");

                entity.Property(e => e.DiasFeriado)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("DIAS_FERIADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaPago)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_PAGO");

                entity.Property(e => e.NumeroFeriado)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("NUMERO_FERIADO");

                entity.Property(e => e.NumeroHora)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("NUMERO_HORA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<RrhhUtil>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RRHH_UTIL");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<RrhhVigenciaReintegro>(entity =>
            {
                entity.HasKey(e => new { e.CdgPara, e.TipoObrero, e.Ano, e.Mes });

                entity.ToTable("RRHH_VIGENCIA_REINTEGRO");

                entity.Property(e => e.CdgPara)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA");

                entity.Property(e => e.TipoObrero)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OBRERO");

                entity.Property(e => e.Ano)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Anof)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANOF")
                    .IsFixedLength(true);

                entity.Property(e => e.Anoi)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANOI")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgParaAplica)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_PARA_APLICA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Mesf).HasColumnName("MESF");

                entity.Property(e => e.Mesi).HasColumnName("MESI");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<ServActividadProyecto>(entity =>
            {
                entity.HasKey(e => new { e.IdProyecto, e.Secuencia, e.IdActividad });

                entity.ToTable("SERV_ACTIVIDAD_PROYECTO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.IdActividad)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_ACTIVIDAD");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.HoraEstimada)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("HORA_ESTIMADA");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombreActividad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_ACTIVIDAD");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TC");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.VvUnit)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VV_UNIT");
            });

            modelBuilder.Entity<ServActividadTecnico>(entity =>
            {
                entity.HasKey(e => new { e.IdProyecto, e.Secuencia, e.IdTecnico });

                entity.ToTable("SERV_ACTIVIDAD_TECNICO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.IdTecnico)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_TECNICO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<ServContrato>(entity =>
            {
                entity.HasKey(e => e.IdContrato);

                entity.ToTable("SERV_CONTRATO");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.CantMesesFact)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_MESES_FACT");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANTIDAD_SERVICIO");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.CdgIng)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_ING");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_INICIO");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaTermino)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_TERMINO");

                entity.Property(e => e.FrecuenciaServicio)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("FRECUENCIA_SERVICIO");

                entity.Property(e => e.GastoAdministrativo)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_ADMINISTRATIVO");

                entity.Property(e => e.GastoGeneral)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("GASTO_GENERAL");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdFacturar)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_FACTURAR");

                entity.Property(e => e.IdParent)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PARENT");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.ImporteAdministrativo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_ADMINISTRATIVO");

                entity.Property(e => e.ImporteGeneral)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_GENERAL");

                entity.Property(e => e.ImporteMargen)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE_MARGEN");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(6, 3)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(3000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Renovacion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RENOVACION")
                    .IsFixedLength(true);

                entity.Property(e => e.Servicio)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SERVICIO");

                entity.Property(e => e.SubTipoServicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SUB_TIPO_SERVICIO");

                entity.Property(e => e.Sucursal)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SUCURSAL");

                entity.Property(e => e.SwtMain)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_MAIN")
                    .IsFixedLength(true);

                entity.Property(e => e.TiempoOnside)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("TIEMPO_ONSIDE");

                entity.Property(e => e.TipoCambio)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("TIPO_CAMBIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<ServControlCalidadProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_CONTROL_CALIDAD_PROYECTO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.SwtCheck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_CHECK")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<ServDetalleContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_DETALLE_CONTRATO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgServ)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERV");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Dscto)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("DSCTO");

                entity.Property(e => e.IdContrato)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CONTRATO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProveedor).HasColumnName("ID_PROVEEDOR");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Importe2)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("IMPORTE2");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(10, 5)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.ValorOri)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_ORI");

                entity.Property(e => e.ValorUnit)
                    .HasColumnType("numeric(15, 5)")
                    .HasColumnName("VALOR_UNIT");
            });

            modelBuilder.Entity<ServDetallePlantillaCc>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Secuencia });

                entity.ToTable("SERV_DETALLE_PLANTILLA_CC");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<ServDetalleServicioTecnico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_DETALLE_SERVICIO_TECNICO");

                entity.Property(e => e.Falla)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FALLA");

                entity.Property(e => e.IdDescripcion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_DESCRIPCION");

                entity.Property(e => e.IdDiagnostico)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_DIAGNOSTICO");

                entity.Property(e => e.IdRecomendacion)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_RECOMENDACION");

                entity.Property(e => e.IdRevisionInterna)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_REVISION_INTERNA");

                entity.Property(e => e.IdTipoPrueba)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_PRUEBA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.NumeroFre)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.SerieGenerada)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ServEquipoMaterialProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_EQUIPO_MATERIAL_PROYECTO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.IdRequerimiento)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_REQUERIMIENTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<ServItemsProyecto>(entity =>
            {
                entity.HasKey(e => new { e.IdProyecto, e.IdProducto, e.Secuencia });

                entity.ToTable("SERV_ITEMS_PROYECTO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD");
            });

            modelBuilder.Entity<ServPlanFacturacionContrato>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_PLAN_FACTURACION_CONTRATO");

                entity.Property(e => e.CdgMoneda)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MONEDA");

                entity.Property(e => e.CdgResponsable)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_RESPONSABLE");

                entity.Property(e => e.CdgServicio)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_SERVICIO");

                entity.Property(e => e.DescripcionFactura)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_FACTURA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFacturacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHA_FACTURACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.TipoCuota)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_CUOTA")
                    .HasDefaultValueSql("('F')")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ServPlanFacturacionProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_PLAN_FACTURACION_PROYECTO");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.PorFact)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_FACT");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<ServPlantillaCc>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("SERV_PLANTILLA_CC");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ServProyecto>(entity =>
            {
                entity.HasKey(e => e.IdProyecto);

                entity.ToTable("SERV_PROYECTO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionServicio)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SERVICIO");

                entity.Property(e => e.Distrito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoAmpliacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_AMPLIACION")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoProyecto)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_PROYECTO");

                entity.Property(e => e.FechaAmpliacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AMPLIACION");

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaAprobacionA1)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION_A1");

                entity.Property(e => e.FechaAprobacionA2)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION_A2");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaFinEstimada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_ESTIMADA");

                entity.Property(e => e.FechaFinReal)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_REAL");

                entity.Property(e => e.FechaFinRealAmpliacion1)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_REAL_AMPLIACION1");

                entity.Property(e => e.FechaFinRealAmpliacion2)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FIN_REAL_AMPLIACION2");

                entity.Property(e => e.FechaInicioEstimada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_ESTIMADA");

                entity.Property(e => e.FechaInicioReal)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INICIO_REAL");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdCliente)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_CLIENTE");

                entity.Property(e => e.IdPedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PEDIDO");

                entity.Property(e => e.IdPresupuesto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRESUPUESTO");

                entity.Property(e => e.Latitud)
                    .HasColumnType("numeric(20, 14)")
                    .HasColumnName("LATITUD");

                entity.Property(e => e.Longitud)
                    .HasColumnType("numeric(20, 14)")
                    .HasColumnName("LONGITUD");

                entity.Property(e => e.Margen)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MARGEN");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoAmpliacion1)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_AMPLIACION1");

                entity.Property(e => e.MotivoAmpliacion2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_AMPLIACION2");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Numcor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMCOR");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.Prioridad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRIORIDAD");

                entity.Property(e => e.Provincia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Referencia1)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA1");

                entity.Property(e => e.Referencia2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCIA2");

                entity.Property(e => e.Responsable1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE1");

                entity.Property(e => e.Responsable2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE2");

                entity.Property(e => e.TipoOt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OT");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioAprobacionA1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION_A1");

                entity.Property(e => e.UsuarioAprobacionA2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION_A2");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<ServServicioTecnico>(entity =>
            {
                entity.HasKey(e => new { e.NumeroFre, e.IdPersona, e.SerieGenerada, e.Tipo })
                    .HasName("PK_SERV_SERVICIO_TECNICO_1");

                entity.ToTable("SERV_SERVICIO_TECNICO");

                entity.Property(e => e.NumeroFre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.SerieGenerada)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength(true);

                entity.Property(e => e.AccionSeguir)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ACCION_SEGUIR");

                entity.Property(e => e.CondicionEquipo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CONDICION_EQUIPO");

                entity.Property(e => e.Diagnostico)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DIAGNOSTICO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_modificacion");

                entity.Property(e => e.IdProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PRODUCTO");

                entity.Property(e => e.IdResultado)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESULTADO");

                entity.Property(e => e.IdTecnico)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ID_TECNICO");

                entity.Property(e => e.Inicio)
                    .HasColumnType("datetime")
                    .HasColumnName("INICIO");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION");

                entity.Property(e => e.SerieEquipo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_EQUIPO");

                entity.Property(e => e.Termino)
                    .HasColumnType("datetime")
                    .HasColumnName("TERMINO");

                entity.Property(e => e.TipoServicio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_SERVICIO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_modificacion");
            });

            modelBuilder.Entity<ServServicioTecnicoImagen>(entity =>
            {
                entity.HasKey(e => new { e.NumeroFre, e.SerieGenerada, e.NombreImagen });

                entity.ToTable("SERV_SERVICIO_TECNICO_IMAGEN");

                entity.Property(e => e.NumeroFre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_FRE");

                entity.Property(e => e.SerieGenerada)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_GENERADA");

                entity.Property(e => e.NombreImagen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_IMAGEN");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.ImgImagen)
                    .HasColumnType("image")
                    .HasColumnName("IMG_IMAGEN");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TITULO");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<ServTareaProyecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_TAREA_PROYECTO");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.DescripcionTarea)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_TAREA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.EstadoAprobacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO_APROBACION")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaAprobacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_APROBACION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REGISTRO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.UsuarioAprobacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_APROBACION");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");
            });

            modelBuilder.Entity<ServTareo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SERV_TAREO");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.CdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.CdgTurno)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TURNO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.IdPersona)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PERSONA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.ScdgCc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SCDG_CC");

                entity.Property(e => e.TipoDia)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DIA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<ServTransporteProyecto>(entity =>
            {
                entity.HasKey(e => new { e.IdProyecto, e.Secuencia });

                entity.ToTable("SERV_TRANSPORTE_PROYECTO");

                entity.Property(e => e.IdProyecto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ID_PROYECTO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Certificado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CERTIFICADO");

                entity.Property(e => e.Chofer)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CHOFER");

                entity.Property(e => e.DepartamentoDe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_DE");

                entity.Property(e => e.DepartamentoHasta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_HASTA");

                entity.Property(e => e.DistritoDe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO_DE");

                entity.Property(e => e.DistritoHasta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO_HASTA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Kilometraje)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("KILOMETRAJE");

                entity.Property(e => e.Licencia)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LICENCIA");

                entity.Property(e => e.Placa)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PLACA");

                entity.Property(e => e.ProvinciaDe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_DE");

                entity.Property(e => e.ProvinciaHasta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_HASTA");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Vehiculo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEHICULO");
            });

            modelBuilder.Entity<SiFiltroIndicador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SI_FILTRO_INDICADOR");

                entity.Property(e => e.CdgIndicador)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_INDICADOR");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.Valor)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("VALOR");
            });

            modelBuilder.Entity<SiIndicador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SI_INDICADOR");

                entity.Property(e => e.Abreviatura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ABREVIATURA");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.Critico)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("CRITICO");

                entity.Property(e => e.Definicion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DEFINICION");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_MODIFICACION");

                entity.Property(e => e.Formula)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Frecuencia)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FRECUENCIA");

                entity.Property(e => e.Meta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("META");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.Objetivo)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("OBJETIVO");

                entity.Property(e => e.OrigenDb)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ORIGEN_DB");

                entity.Property(e => e.PrecaucionDe)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PRECAUCION_DE");

                entity.Property(e => e.PrecaucionHasta)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PRECAUCION_HASTA");

                entity.Property(e => e.ProcedimientoCalculo)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("PROCEDIMIENTO_CALCULO");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSABLE");

                entity.Property(e => e.TipoIndicador)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_INDICADOR");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.UsuarioModificacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_MODIFICACION");

                entity.Property(e => e.Vista)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VISTA");
            });

            modelBuilder.Entity<SptApp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SPT_APP");

                entity.Property(e => e.AppVersion)
                    .IsUnicode(false)
                    .HasColumnName("APP_VERSION");

                entity.Property(e => e.AppVersion2)
                    .IsUnicode(false)
                    .HasColumnName("APP_VERSION2");
            });

            modelBuilder.Entity<TPleCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ple_compras");

                entity.Property(e => e.Pmoneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PMONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.X01)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("X_01");

                entity.Property(e => e.X02)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("X_02");

                entity.Property(e => e.X03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_03");

                entity.Property(e => e.X04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_04");

                entity.Property(e => e.X05)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_05");

                entity.Property(e => e.X06)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_06");

                entity.Property(e => e.X07)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_07");

                entity.Property(e => e.X08)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("X_08");

                entity.Property(e => e.X09)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_09");

                entity.Property(e => e.X10)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_10");

                entity.Property(e => e.X11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_11");

                entity.Property(e => e.X12)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_12");

                entity.Property(e => e.X13)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("X_13");

                entity.Property(e => e.X14)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_14");

                entity.Property(e => e.X15)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_15");

                entity.Property(e => e.X16)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_16");

                entity.Property(e => e.X17)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_17");

                entity.Property(e => e.X18)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_18");

                entity.Property(e => e.X19)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_19");

                entity.Property(e => e.X20)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_20");

                entity.Property(e => e.X21)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_21");

                entity.Property(e => e.X22)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_22");

                entity.Property(e => e.X23)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_23");

                entity.Property(e => e.X24)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_24");

                entity.Property(e => e.X25)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("X_25");

                entity.Property(e => e.X26)
                    .HasColumnType("numeric(4, 3)")
                    .HasColumnName("X_26");

                entity.Property(e => e.X27)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_27");

                entity.Property(e => e.X28)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_28");

                entity.Property(e => e.X29)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_29");

                entity.Property(e => e.X30)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("X_30");

                entity.Property(e => e.X31)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_31");

                entity.Property(e => e.X32)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_32");

                entity.Property(e => e.X33)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("X_33");

                entity.Property(e => e.X34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_34");

                entity.Property(e => e.X35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_35");

                entity.Property(e => e.X36)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("X_36");

                entity.Property(e => e.X37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_37");

                entity.Property(e => e.X38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_38");

                entity.Property(e => e.X39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_39");

                entity.Property(e => e.X40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_40");

                entity.Property(e => e.X41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_41");

                entity.Property(e => e.X42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_42");
            });

            modelBuilder.Entity<TPleComprasNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ple_compras_ND");

                entity.Property(e => e.Pmoneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PMONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.X01)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("X_01");

                entity.Property(e => e.X02)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("X_02");

                entity.Property(e => e.X03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_03");

                entity.Property(e => e.X04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_04");

                entity.Property(e => e.X05)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_05");

                entity.Property(e => e.X06)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_06");

                entity.Property(e => e.X07)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_07");

                entity.Property(e => e.X08)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_08");

                entity.Property(e => e.X09)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_09");

                entity.Property(e => e.X10)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_10");

                entity.Property(e => e.X11)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_11");

                entity.Property(e => e.X12)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_12");

                entity.Property(e => e.X13)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("X_13");

                entity.Property(e => e.X14)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_14");

                entity.Property(e => e.X15)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_15");

                entity.Property(e => e.X16)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("X_16");

                entity.Property(e => e.X17)
                    .HasColumnType("numeric(4, 3)")
                    .HasColumnName("X_17");

                entity.Property(e => e.X18)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("X_18");

                entity.Property(e => e.X19)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("X_19");

                entity.Property(e => e.X20)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("X_20");

                entity.Property(e => e.X21)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_21");

                entity.Property(e => e.X22)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_22");

                entity.Property(e => e.X23)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("X_23");

                entity.Property(e => e.X24)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("X_24");

                entity.Property(e => e.X25)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_25");

                entity.Property(e => e.X26)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_26");

                entity.Property(e => e.X27)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_27");

                entity.Property(e => e.X28)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_28");

                entity.Property(e => e.X29)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_29");

                entity.Property(e => e.X30)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_30");

                entity.Property(e => e.X31)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_31");

                entity.Property(e => e.X32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_32");

                entity.Property(e => e.X33)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_33");

                entity.Property(e => e.X34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_34");

                entity.Property(e => e.X35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_35");

                entity.Property(e => e.X36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_36");
            });

            modelBuilder.Entity<TPleComprasV1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("t_ple_comprasV1");

                entity.Property(e => e.Pmoneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PMONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.X01)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("X_01");

                entity.Property(e => e.X02)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("X_02");

                entity.Property(e => e.X03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_03");

                entity.Property(e => e.X04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_04");

                entity.Property(e => e.X05)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_05");

                entity.Property(e => e.X06)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_06");

                entity.Property(e => e.X07)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_07");

                entity.Property(e => e.X08)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("X_08");

                entity.Property(e => e.X09)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_09");

                entity.Property(e => e.X10)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_10");

                entity.Property(e => e.X11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_11");

                entity.Property(e => e.X12)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_12");

                entity.Property(e => e.X13)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("X_13");

                entity.Property(e => e.X14)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_14");

                entity.Property(e => e.X15)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_15");

                entity.Property(e => e.X16)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_16");

                entity.Property(e => e.X17)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_17");

                entity.Property(e => e.X18)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_18");

                entity.Property(e => e.X19)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_19");

                entity.Property(e => e.X20)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_20");

                entity.Property(e => e.X21)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_21");

                entity.Property(e => e.X22)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_22");

                entity.Property(e => e.X23)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_23");

                entity.Property(e => e.X24)
                    .HasColumnType("numeric(4, 3)")
                    .HasColumnName("X_24");

                entity.Property(e => e.X25)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_25");

                entity.Property(e => e.X26)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_26");

                entity.Property(e => e.X27)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_27");

                entity.Property(e => e.X28)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("X_28");

                entity.Property(e => e.X29)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_29");

                entity.Property(e => e.X30)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_30");

                entity.Property(e => e.X31)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_31");

                entity.Property(e => e.X32)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("X_32");

                entity.Property(e => e.X33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_33");

                entity.Property(e => e.X34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_34");
            });

            modelBuilder.Entity<TbAccesoEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_acceso_empresa");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.CodiGrupUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_grup_usua");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");
            });

            modelBuilder.Entity<TbAccesoOpcion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_acceso_opcion");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.CodiGrupUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_grup_usua");

                entity.Property(e => e.CodiOpcion).HasColumnName("codi_opcion");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FlagAnul).HasColumnName("flag_anul");

                entity.Property(e => e.FlagBusc).HasColumnName("flag_busc");

                entity.Property(e => e.FlagElim).HasColumnName("flag_elim");

                entity.Property(e => e.FlagModi).HasColumnName("flag_modi");

                entity.Property(e => e.FlagNuevo).HasColumnName("flag_nuevo");

                entity.Property(e => e.FlagPrint).HasColumnName("flag_print");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbCampoDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_campo_documento");

                entity.Property(e => e.CantDeci).HasColumnName("cant_deci");

                entity.Property(e => e.CodiCampo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("codi_campo");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.DescCampo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("desc_campo");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FlagAlfaNume).HasColumnName("flag_alfa_nume");

                entity.Property(e => e.FlagCabDet).HasColumnName("flag_cab_det");

                entity.Property(e => e.FlagObli).HasColumnName("flag_obli");

                entity.Property(e => e.LongCampo).HasColumnName("long_campo");

                entity.Property(e => e.NombCampo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nomb_campo");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbCatalogo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_catalogo");

                entity.Property(e => e.CampoUbl)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("campo_ubl");

                entity.Property(e => e.CodiCata)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_cata");

                entity.Property(e => e.DescCata)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("desc_cata");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.OrigCata)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("orig_cata");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbCatalogoDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_catalogo_detalle");

                entity.Property(e => e.CodiCata)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_cata");

                entity.Property(e => e.CodiCataDeta)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_cata_deta");

                entity.Property(e => e.CodiEqui)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_equi");

                entity.Property(e => e.DescCataDeta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("desc_cata_deta");
            });

            modelBuilder.Entity<TbConfigAdic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_config_adic");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.IdCriterio).HasColumnName("id_criterio");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("valor");
            });

            modelBuilder.Entity<TbConfigDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_config_documento");

                entity.Property(e => e.Cadena)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("cadena");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.NombDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nomb_docu");

                entity.Property(e => e.NombVista)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nomb_vista");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbCsrv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_csrv");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.NumeDocuClie)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu_clie");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu_clie");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<TbDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_documento");

                entity.Property(e => e.CodiCampo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("codi_campo");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_docu");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.SecuDocu).HasColumnName("secu_docu");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");

                entity.Property(e => e.ValorA)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("valor_a");

                entity.Property(e => e.ValorN)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("valor_n");
            });

            modelBuilder.Entity<TbDocumentoBkp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_documento_BKP");

                entity.Property(e => e.CodiCampo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("codi_campo");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_docu");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.SecuDocu).HasColumnName("secu_docu");

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");

                entity.Property(e => e.ValorA)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("valor_a");

                entity.Property(e => e.ValorN)
                    .HasColumnType("numeric(18, 8)")
                    .HasColumnName("valor_n");
            });

            modelBuilder.Entity<TbDocumentoSunat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_documento_sunat");

                entity.HasIndex(e => new { e.CodiEmpr, e.TipoDocu, e.NumeDocu }, "ClusteredIndex-20191217-184501")
                    .IsClustered();

                entity.Property(e => e.CodiBarra).HasColumnName("codi_barra");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_docu");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FlagEnvio).HasColumnName("flag_envio");

                entity.Property(e => e.FlagError).HasColumnName("flag_error");

                entity.Property(e => e.Mensaje)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("mensaje");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(50)
                    .HasColumnName("moneda");

                entity.Property(e => e.NombClie)
                    .HasMaxLength(1000)
                    .HasColumnName("nomb_clie");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.NumeDocuClie)
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu_clie");

                entity.Property(e => e.NumeTicket)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_ticket");

                entity.Property(e => e.PdfFile).HasColumnName("pdf_file");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu_clie");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");

                entity.Property(e => e.ValoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_igv");

                entity.Property(e => e.ValoTota)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_tota");

                entity.Property(e => e.ValoVent)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_vent");

                entity.Property(e => e.XmlFile).HasColumnName("xml_file");

                entity.Property(e => e.ZipFile).HasColumnName("zip_file");

                entity.Property(e => e.ZipRpta).HasColumnName("zip_rpta");
            });

            modelBuilder.Entity<TbDocumentoSunatBkerror>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_documento_sunat_bkerror");

                entity.Property(e => e.CodiBarra).HasColumnName("codi_barra");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_docu");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FlagEnvio).HasColumnName("flag_envio");

                entity.Property(e => e.FlagError).HasColumnName("flag_error");

                entity.Property(e => e.Mensaje)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnName("mensaje");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(50)
                    .HasColumnName("moneda");

                entity.Property(e => e.NombClie)
                    .HasMaxLength(1000)
                    .HasColumnName("nomb_clie");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.NumeDocuClie)
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu_clie");

                entity.Property(e => e.NumeTicket)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_ticket");

                entity.Property(e => e.PdfFile).HasColumnName("pdf_file");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu_clie");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");

                entity.Property(e => e.ValoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_igv");

                entity.Property(e => e.ValoTota)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_tota");

                entity.Property(e => e.ValoVent)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("valo_vent");

                entity.Property(e => e.XmlFile).HasColumnName("xml_file");

                entity.Property(e => e.ZipFile).HasColumnName("zip_file");

                entity.Property(e => e.ZipRpta).HasColumnName("zip_rpta");
            });

            modelBuilder.Entity<TbEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_empresa");

                entity.Property(e => e.Alto).HasColumnName("alto");

                entity.Property(e => e.Ancho).HasColumnName("ancho");

                entity.Property(e => e.CcCorreo)
                    .HasMaxLength(50)
                    .HasColumnName("cc_correo");

                entity.Property(e => e.ClaveFirma)
                    .HasMaxLength(4000)
                    .HasColumnName("clave_firma");

                entity.Property(e => e.ClaveSol)
                    .HasMaxLength(50)
                    .HasColumnName("clave_sol");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.CorreoEmpr)
                    .HasMaxLength(100)
                    .HasColumnName("correo_empr");

                entity.Property(e => e.Correofe)
                    .HasMaxLength(50)
                    .HasColumnName("correofe");

                entity.Property(e => e.DireEmpr)
                    .HasMaxLength(500)
                    .HasColumnName("dire_empr");

                entity.Property(e => e.DistEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("dist_empr");

                entity.Property(e => e.DniReprLega)
                    .HasMaxLength(100)
                    .HasColumnName("dni_repr_lega");

                entity.Property(e => e.DptoEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("dpto_empr");

                entity.Property(e => e.Estado)
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FaxEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("fax_empr");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FirmaDigi).HasColumnName("firma_digi");

                entity.Property(e => e.Fono1)
                    .HasMaxLength(50)
                    .HasColumnName("fono1");

                entity.Property(e => e.Fono2)
                    .HasMaxLength(50)
                    .HasColumnName("fono2");

                entity.Property(e => e.LogoEmpr).HasColumnName("logo_empr");

                entity.Property(e => e.NombCome)
                    .HasMaxLength(100)
                    .HasColumnName("nomb_come");

                entity.Property(e => e.NombFirm)
                    .HasMaxLength(200)
                    .HasColumnName("nomb_firm");

                entity.Property(e => e.NombLogo)
                    .HasMaxLength(200)
                    .HasColumnName("nomb_logo");

                entity.Property(e => e.PassCorr)
                    .HasMaxLength(50)
                    .HasColumnName("pass_corr");

                entity.Property(e => e.ProvEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("prov_empr");

                entity.Property(e => e.Puerto)
                    .HasMaxLength(50)
                    .HasColumnName("puerto");

                entity.Property(e => e.RazoSoci)
                    .HasMaxLength(200)
                    .HasColumnName("razo_soci");

                entity.Property(e => e.ReprLega)
                    .HasMaxLength(100)
                    .HasColumnName("repr_lega");

                entity.Property(e => e.Resolucion)
                    .HasMaxLength(50)
                    .HasColumnName("resolucion");

                entity.Property(e => e.RucEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("ruc_empr");

                entity.Property(e => e.RutaArchivo)
                    .HasMaxLength(4000)
                    .HasColumnName("ruta_archivo");

                entity.Property(e => e.ServSmtp)
                    .HasMaxLength(100)
                    .HasColumnName("serv_smtp");

                entity.Property(e => e.Ssl)
                    .HasColumnType("numeric(1, 0)")
                    .HasColumnName("ssl");

                entity.Property(e => e.Ubigeo)
                    .HasMaxLength(50)
                    .HasColumnName("ubigeo");

                entity.Property(e => e.UrbaEmpr)
                    .HasMaxLength(50)
                    .HasColumnName("urba_empr");

                entity.Property(e => e.UsuaCrea)
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");

                entity.Property(e => e.UsuarioSol)
                    .HasMaxLength(50)
                    .HasColumnName("usuario_sol");

                entity.Property(e => e.WebEmpr)
                    .HasMaxLength(4000)
                    .HasColumnName("web_empr");
            });

            modelBuilder.Entity<TbGrupoUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_grupo_usuario");

                entity.Property(e => e.CodiGrupUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_grup_usua");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.NombGrupUsua)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nomb_grup_usua");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbOpcion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_opcion");

                entity.Property(e => e.CodiOpcion).HasColumnName("codi_opcion");

                entity.Property(e => e.FlagActi).HasColumnName("flag_acti");

                entity.Property(e => e.NombOpcion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("nomb_opcion");
            });

            modelBuilder.Entity<TbPassCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_pass_cliente");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.PassClie)
                    .IsRequired()
                    .HasColumnName("pass_clie");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");
            });

            modelBuilder.Entity<TbUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_usuario");

                entity.Property(e => e.CodiGrupUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("codi_grup_usua");

                entity.Property(e => e.CorreoUsua)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("correo_usua");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado");

                entity.Property(e => e.FechCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_crea");

                entity.Property(e => e.FechModi)
                    .HasColumnType("datetime")
                    .HasColumnName("fech_modi");

                entity.Property(e => e.FlagPass).HasColumnName("flag_pass");

                entity.Property(e => e.LoginUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("login_usua");

                entity.Property(e => e.NombUsua)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nomb_usua");

                entity.Property(e => e.PassUsua)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("pass_usua");

                entity.Property(e => e.UsuaCrea)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("usua_crea");

                entity.Property(e => e.UsuaModi)
                    .HasMaxLength(50)
                    .HasColumnName("usua_modi");
            });

            modelBuilder.Entity<TbWsrv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tb_wsrv");

                entity.Property(e => e.CodiEmpr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("codi_empr");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_creacion");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu");

                entity.Property(e => e.NumeDocuClie)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("nume_docu_clie");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tipo_docu_clie");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usuario_creacion");
            });

            modelBuilder.Entity<TempLibmayor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_LIBMAYOR");

                entity.Property(e => e.Anexo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANEXO");

                entity.Property(e => e.Cuenta)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("CUENTA");

                entity.Property(e => e.Debe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DEBE");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaOper)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_OPER");

                entity.Property(e => e.Glosa)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GLOSA");

                entity.Property(e => e.Haber)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("HABER");

                entity.Property(e => e.NomCta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_CTA");

                entity.Property(e => e.NumComp)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUM_COMP");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Secuencia)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("SECUENCIA");

                entity.Property(e => e.Td)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TD");
            });

            modelBuilder.Entity<TempNumero>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_NUMERO");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSucursal)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.NumeroDocumento)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCUMENTO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<TempPleVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_PLE_VENTAS");

                entity.Property(e => e.Pestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Pmoneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PMONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.X01)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("X_01");

                entity.Property(e => e.X02)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("X_02");

                entity.Property(e => e.X03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_03");

                entity.Property(e => e.X04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_04");

                entity.Property(e => e.X05)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_05");

                entity.Property(e => e.X06)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_06");

                entity.Property(e => e.X07)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_07");

                entity.Property(e => e.X08)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_08");

                entity.Property(e => e.X09)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_09");

                entity.Property(e => e.X10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_10");

                entity.Property(e => e.X11)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_11");

                entity.Property(e => e.X12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("X_12");

                entity.Property(e => e.X13)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_13");

                entity.Property(e => e.X14)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_14");

                entity.Property(e => e.X15)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_15");

                entity.Property(e => e.X16)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_16");

                entity.Property(e => e.X17)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_17");

                entity.Property(e => e.X18)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_18");

                entity.Property(e => e.X19)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_19");

                entity.Property(e => e.X20)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_20");

                entity.Property(e => e.X21)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_21");

                entity.Property(e => e.X22)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_22");

                entity.Property(e => e.X23)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_23");

                entity.Property(e => e.X24)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_24");

                entity.Property(e => e.X25)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_25");

                entity.Property(e => e.X26)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("X_26");

                entity.Property(e => e.X27)
                    .HasColumnType("numeric(4, 3)")
                    .HasColumnName("X_27");

                entity.Property(e => e.X28)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_28");

                entity.Property(e => e.X29)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_29");

                entity.Property(e => e.X30)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_30");

                entity.Property(e => e.X31)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_31");

                entity.Property(e => e.X32)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("X_32");

                entity.Property(e => e.X33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_33");

                entity.Property(e => e.X34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_34");

                entity.Property(e => e.X35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_35");
            });

            modelBuilder.Entity<TempPleVentasv1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temp_PLE_VENTASV1");

                entity.Property(e => e.Pestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PESTADO")
                    .IsFixedLength(true);

                entity.Property(e => e.Pmoneda)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PMONEDA")
                    .IsFixedLength(true);

                entity.Property(e => e.X01)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("X_01");

                entity.Property(e => e.X02)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("X_02");

                entity.Property(e => e.X03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_03");

                entity.Property(e => e.X04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_04");

                entity.Property(e => e.X05)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_05");

                entity.Property(e => e.X06)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_06");

                entity.Property(e => e.X07)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_07");

                entity.Property(e => e.X08)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_08");

                entity.Property(e => e.X09)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_09");

                entity.Property(e => e.X10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_10");

                entity.Property(e => e.X11)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("X_11");

                entity.Property(e => e.X12)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("X_12");

                entity.Property(e => e.X13)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_13");

                entity.Property(e => e.X14)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_14");

                entity.Property(e => e.X15)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_15");

                entity.Property(e => e.X16)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_16");

                entity.Property(e => e.X17)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_17");

                entity.Property(e => e.X18)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_18");

                entity.Property(e => e.X19)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_19");

                entity.Property(e => e.X20)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_20");

                entity.Property(e => e.X21)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_21");

                entity.Property(e => e.X22)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_22");

                entity.Property(e => e.X23)
                    .HasColumnType("numeric(4, 3)")
                    .HasColumnName("X_23");

                entity.Property(e => e.X24)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("X_24");

                entity.Property(e => e.X25)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("X_25");

                entity.Property(e => e.X26)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_26");

                entity.Property(e => e.X27)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("X_27");

                entity.Property(e => e.X28)
                    .HasColumnType("numeric(20, 2)")
                    .HasColumnName("X_28");

                entity.Property(e => e.X29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("X_29");

                entity.Property(e => e.X30)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("X_30");
            });

            modelBuilder.Entity<UtilFiltro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UTIL_FILTRO");

                entity.Property(e => e.Consulta)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CONSULTA");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.Filtro)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("FILTRO");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<UtilMp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UTIL_MP");

                entity.Property(e => e.CdgMovi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MOVI");

                entity.Property(e => e.CdgTabla)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TABLA");

                entity.Property(e => e.CodigoSucursal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUCURSAL");

                entity.Property(e => e.Estado)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.MotivoMp)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_MP");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.ProbCierre)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PROB_CIERRE");

                entity.Property(e => e.TipoIs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_IS")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoUtil)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_UTIL")
                    .IsFixedLength(true);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");
            });

            modelBuilder.Entity<VwEstructuraRemunerativa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_ESTRUCTURA_REMUNERATIVA");

                entity.Property(e => e.CdgCc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CDG_CC");

                entity.Property(e => e.Cts)
                    .HasColumnType("numeric(17, 7)")
                    .HasColumnName("CTS");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Grati)
                    .HasColumnType("numeric(16, 6)")
                    .HasColumnName("GRATI");

                entity.Property(e => e.NumeroDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_DOCUMENTO");

                entity.Property(e => e.ProvAporta).HasColumnName("PROV_APORTA");

                entity.Property(e => e.Remuneracion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("REMUNERACION");

                entity.Property(e => e.Trabajador)
                    .HasMaxLength(355)
                    .IsUnicode(false)
                    .HasColumnName("TRABAJADOR");

                entity.Property(e => e.Vaca)
                    .HasColumnType("numeric(18, 7)")
                    .HasColumnName("VACA");
            });

            modelBuilder.Entity<VwFaelBaja>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BAJA");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.IdBaja)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_BAJA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.Serie)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBajaV01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BAJA_V01");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.IdBaja)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_BAJA");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.Serie)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletaV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA_V02");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(1702)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletaV03>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA_V03");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletaV04>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA_V04");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(127)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocuRefe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Imgalm)
                    .HasColumnType("image")
                    .HasColumnName("IMGALM");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomKit)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_KIT");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumPlaca)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PLACA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SubtotalItem).HasColumnName("SUBTOTAL_ITEM");

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP");

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletaV04a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA_V04A");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC")
                    .IsFixedLength(true);

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SubtotalItem).HasColumnName("SUBTOTAL_ITEM");

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletaV04sunat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA_V04SUNAT");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC")
                    .IsFixedLength(true);

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelBoletum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_BOLETA");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelContingencium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_CONTINGENCIA");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.Igv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IGV");

                entity.Property(e => e.Isc).HasColumnName("ISC");

                entity.Property(e => e.MContingencia)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("M_CONTINGENCIA");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuModi)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_MODI");

                entity.Property(e => e.NumeDocuMreg)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_MREG");

                entity.Property(e => e.NumeFinal)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_FINAL");

                entity.Property(e => e.OtroTributo).HasColumnName("OTRO_TRIBUTO");

                entity.Property(e => e.SerieDocuModi)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SERIE_DOCU_MODI");

                entity.Property(e => e.TipoDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuModi)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_MODI");

                entity.Property(e => e.Total)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL");

                entity.Property(e => e.ValorInafecta).HasColumnName("VALOR_INAFECTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<VwFaelFactura>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(119)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelFacturaV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA_V02");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(119)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelFacturaV03>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA_V03");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(119)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelFacturaV04>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA_V04");

                entity.Property(e => e.APagar)
                    .HasColumnType("numeric(38, 12)")
                    .HasColumnName("A_PAGAR");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.CantKit)
                    .HasColumnType("numeric(5, 0)")
                    .HasColumnName("CANT_KIT");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_ANTICIPO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoRetencion)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_RETENCION");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(127)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocuRefe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Imgalm)
                    .HasColumnType("image")
                    .HasColumnName("IMGALM");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.ImpRetencion)
                    .HasColumnType("numeric(11, 4)")
                    .HasColumnName("IMP_RETENCION");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomKit)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOM_KIT");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumPlaca)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PLACA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorRetencion)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("POR_RETENCION");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.RefeCorr)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFE_CORR");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal1)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.Subtotal)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("SUBTOTAL");

                entity.Property(e => e.SubtotalItem).HasColumnName("SUBTOTAL_ITEM");

                entity.Property(e => e.Subtotaligv)
                    .HasColumnType("numeric(38, 12)")
                    .HasColumnName("SUBTOTALIGV");

                entity.Property(e => e.SwtBj)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_BJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP");

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuIden)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_IDEN");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.TotalAnticipo2)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO2");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VedvMontoIgv3).HasColumnName("VEDV_MONTO_IGV_3");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelFacturaV04a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA_V04A");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(119)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC")
                    .IsFixedLength(true);

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.RefeCorr)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REFE_CORR");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SubtotalItem).HasColumnName("SUBTOTAL_ITEM");

                entity.Property(e => e.SwtBj)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_BJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelFacturaV04sunat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_FACTURA_V04SUNAT");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DETRACCION");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoTipoDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_TIPO_DETRACCION");

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DescripcionDetraccion)
                    .IsRequired()
                    .HasMaxLength(127)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_DETRACCION");

                entity.Property(e => e.DescripcionLeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION_LEYENDA_CTA_BN");

                entity.Property(e => e.Detraccion)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DETRACCION");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(2608)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC")
                    .IsFixedLength(true);

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaCtaBn)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_CTA_BN");

                entity.Property(e => e.LeyendaDetraccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_DETRACCION");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcDetraccion)
                    .HasColumnType("numeric(7, 2)")
                    .HasColumnName("PORC_DETRACCION");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SwtBj)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_BJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDetraccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DETRACCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelGr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_GR");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(35, 19)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgMg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MG");

                entity.Property(e => e.CdgMt)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MT");

                entity.Property(e => e.CdgTdChofer)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TD_CHOFER");

                entity.Property(e => e.CdgTdTran)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TD_TRAN");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCTO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DepartamentoPartida)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_PARTIDA");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DistritoPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO_PARTIDA");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.LicenciaChofer)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LICENCIA_CHOFER");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(2303)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.LugarPartida)
                    .HasMaxLength(2303)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_PARTIDA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NomMg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MG");

                entity.Property(e => e.NomTransportista)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_TRANSPORTISTA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.Numdoc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMDOC");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Peso)
                    .HasColumnType("numeric(10, 4)")
                    .HasColumnName("PESO");

                entity.Property(e => e.PesoTotal).HasColumnName("PESO_TOTAL");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.ProvinciaPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_PARTIDA");

                entity.Property(e => e.RucChofer)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CHOFER");

                entity.Property(e => e.RucTransportista)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_TRANSPORTISTA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.UbigeoLlegada)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_LLEGADA");

                entity.Property(e => e.UbigeoPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_PARTIDA");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UnidadPeso)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_PESO");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelGrsunat>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_GRSUNAT");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(35, 19)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.CdgMg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MG");

                entity.Property(e => e.CdgMt)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CDG_MT");

                entity.Property(e => e.CdgTdChofer)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TD_CHOFER");

                entity.Property(e => e.CdgTdTran)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_TD_TRAN");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CENTRO_COSTO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCTO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DepartamentoPartida)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO_PARTIDA");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DistritoPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO_PARTIDA");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdGuia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_GUIA");

                entity.Property(e => e.LicenciaChofer)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LICENCIA_CHOFER");

                entity.Property(e => e.LugarEntrega)
                    .HasMaxLength(2303)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_ENTREGA");

                entity.Property(e => e.LugarPartida)
                    .HasMaxLength(2303)
                    .IsUnicode(false)
                    .HasColumnName("LUGAR_PARTIDA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NomMg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MG");

                entity.Property(e => e.NomTransportista)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_TRANSPORTISTA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.PesoTotal).HasColumnName("PESO_TOTAL");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.ProvinciaPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA_PARTIDA");

                entity.Property(e => e.RucChofer)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RUC_CHOFER");

                entity.Property(e => e.RucTransportista)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RUC_TRANSPORTISTA");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.UbigeoLlegada)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_LLEGADA");

                entity.Property(e => e.UbigeoPartida)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO_PARTIDA");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.UnidadPeso)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_PESO");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcBo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_BO");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcBoV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_BO_V02");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgKit)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcBoV02a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_BO_V02A");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento).HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_V02");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcV03>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_V03");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.CdgKit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CDG_KIT");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNcV03a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_NC_V03A");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoNoOnerItem).HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdBo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_BO");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdBoV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_BO_V02");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdBoV02a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_BO_V02A");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_V02");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoMotivoNota)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdV03>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_V03");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMotivoNota)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.Establecimiento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ESTABLECIMIENTO");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.ImpCredito)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMP_CREDITO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(110)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelNdV03a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_ND_V03A");

                entity.Property(e => e.AfecIgv)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.CodigoMotivoNota)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_MOTIVO_NOTA");

                entity.Property(e => e.CodigoSunat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUNAT");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOC_REF");

                entity.Property(e => e.DocuRefe)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.MotivoNota)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MOTIVO_NOTA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NombComercial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Precio)
                    .HasColumnType("numeric(26, 10)")
                    .HasColumnName("PRECIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuClie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRefe)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REFE");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.ValoUnit)
                    .HasColumnType("numeric(32, 16)")
                    .HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota).HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelPv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_PV");

                entity.Property(e => e.AfecIgv)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("AFEC_IGV");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoV).HasColumnName("ANO_V");

                entity.Property(e => e.AnticipoRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPO_RUC");

                entity.Property(e => e.Anticipos)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ANTICIPOS");

                entity.Property(e => e.ClienteNombre)
                    .HasMaxLength(352)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_NOMBRE");

                entity.Property(e => e.ClienteRuc)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_RUC");

                entity.Property(e => e.ClienteUbigeo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE_UBIGEO");

                entity.Property(e => e.CodiDcto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_DCTO");

                entity.Property(e => e.CodiIgv)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInte)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.CodigoEmpresa)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_EMPRESA")
                    .IsFixedLength(true);

                entity.Property(e => e.Comentario)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("COMENTARIO");

                entity.Property(e => e.ConfDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONF_DIRECCION");

                entity.Property(e => e.ConfRazonSocial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.CorreoCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO_CLIENTE");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaV).HasColumnName("DIA_V");

                entity.Property(e => e.DireccionCliente)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_CLIENTE");

                entity.Property(e => e.DireccionSucursal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION_SUCURSAL");

                entity.Property(e => e.Distrito)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("DISTRITO");

                entity.Property(e => e.DocuRefe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOCU_REFE");

                entity.Property(e => e.DvedvCantidad)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("DVEDV_CANTIDAD");

                entity.Property(e => e.DvedvSecuencia).HasColumnName("DVEDV_SECUENCIA");

                entity.Property(e => e.ExistenciaCodactual)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_CODACTUAL");

                entity.Property(e => e.ExistenciaNombre)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE");

                entity.Property(e => e.ExistenciaNombre2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EXISTENCIA_NOMBRE2");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_CREACION");

                entity.Property(e => e.FechaReferencia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_REFERENCIA");

                entity.Property(e => e.FechaVenc)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_VENC");

                entity.Property(e => e.Fecvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECVENC")
                    .IsFixedLength(true);

                entity.Property(e => e.FonoCliente)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FONO_CLIENTE");

                entity.Property(e => e.FormaPago)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Grado)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("GRADO");

                entity.Property(e => e.Guias)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("GUIAS");

                entity.Property(e => e.HoraEmision)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HORA_EMISION");

                entity.Property(e => e.Icbper)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("ICBPER");

                entity.Property(e => e.IcbperTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("ICBPER_TOTAL");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IgvItem).HasColumnName("IGV_ITEM");

                entity.Property(e => e.IgvItem2).HasColumnName("IGV_ITEM_2");

                entity.Property(e => e.Laborat0rio)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("LABORAT0RIO");

                entity.Property(e => e.LeyendaMonto)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_MONTO");

                entity.Property(e => e.LeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("LEYENDA_TTG");

                entity.Property(e => e.Lote)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("LOTE");

                entity.Property(e => e.MExito)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("M_EXITO");

                entity.Property(e => e.Marca)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesV).HasColumnName("MES_V");

                entity.Property(e => e.MesesGarantia).HasColumnName("MESES_GARANTIA");

                entity.Property(e => e.Modelo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MODELO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.NivelAcademico)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NIVEL_ACADEMICO");

                entity.Property(e => e.NomMoneda)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_MONEDA");

                entity.Property(e => e.NomUnidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("NOM_UNIDAD");

                entity.Property(e => e.NombComercial)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_COMERCIAL");

                entity.Property(e => e.NombIgv)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV");

                entity.Property(e => e.NombIgvInt)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NumPlaca)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NUM_PLACA");

                entity.Property(e => e.NumeDocu)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAIS");

                entity.Property(e => e.Pedido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.PorIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("POR_IGV");

                entity.Property(e => e.PorcentajeIgv)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("PORCENTAJE_IGV");

                entity.Property(e => e.Precio).HasColumnName("PRECIO");

                entity.Property(e => e.PrecioUnitario)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_UNITARIO");

                entity.Property(e => e.Provincia)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PROVINCIA");

                entity.Property(e => e.RefeCorr)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REFE_CORR");

                entity.Property(e => e.Seccion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("SECCION");

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");

                entity.Property(e => e.Series)
                    .HasMaxLength(5000)
                    .IsUnicode(false)
                    .HasColumnName("SERIES");

                entity.Property(e => e.SubTotal)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("SUB_TOTAL");

                entity.Property(e => e.SubtotalItem).HasColumnName("SUBTOTAL_ITEM");

                entity.Property(e => e.SwtFe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_FE")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP")
                    .IsFixedLength(true);

                entity.Property(e => e.SwtImp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SWT_IMP2")
                    .IsFixedLength(true);

                entity.Property(e => e.TipoAfecIgv)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_AFEC_IGV");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuAnticipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_ANTICIPO");

                entity.Property(e => e.TipoDocuClie)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_CLIE");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRucAnticipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_RUC_ANTICIPO");

                entity.Property(e => e.TipoGuia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_GUIA");

                entity.Property(e => e.TipoLeyendaMonto)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_MONTO");

                entity.Property(e => e.TipoLeyendaTtg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_LEYENDA_TTG");

                entity.Property(e => e.TipoOper)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_OPER");

                entity.Property(e => e.TipoPrecio)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRECIO");

                entity.Property(e => e.TipoValoNoOnerItem)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VALO_NO_ONER_ITEM");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGratTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAT_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalAnticipo)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("TOTAL_ANTICIPO");

                entity.Property(e => e.Ubigeo)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UBIGEO");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");

                entity.Property(e => e.Urbanizacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("URBANIZACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.UsuarioCreacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO_CREACION");

                entity.Property(e => e.ValoNoOnerItem)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALO_NO_ONER_ITEM");

                entity.Property(e => e.ValoUnit).HasColumnName("VALO_UNIT");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGratTota).HasColumnName("VALO_VENT_GRAT_TOTA");

                entity.Property(e => e.ValoVentGravTota).HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.ValoVentItem).HasColumnName("VALO_VENT_ITEM");

                entity.Property(e => e.ValorInafectoItem)
                    .HasColumnType("numeric(29, 8)")
                    .HasColumnName("VALOR_INAFECTO_ITEM");

                entity.Property(e => e.ValorResumen)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("VALOR_RESUMEN");

                entity.Property(e => e.VedvGlosa)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("VEDV_GLOSA");

                entity.Property(e => e.VedvMonto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO");

                entity.Property(e => e.VedvMontoDescuento)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_DESCUENTO");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResuman>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.FinRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("FIN_RANGO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.InicioRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("INICIO_RANGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResumen2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN2");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.FinRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("FIN_RANGO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.InicioRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("INICIO_RANGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResumen2V02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN2_V02");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResumen3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN3");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.FinRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("FIN_RANGO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.InicioRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("INICIO_RANGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResumen3V02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN3_V02");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });

            modelBuilder.Entity<VwFaelResumenV02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FAEL_RESUMEN_V02");

                entity.Property(e => e.CodiIgvTota)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_IGV_TOTA");

                entity.Property(e => e.CodiInteIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CODI_INTE_ISC");

                entity.Property(e => e.CodiIsc)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODI_ISC");

                entity.Property(e => e.CodigoOperacion).HasColumnName("CODIGO_OPERACION");

                entity.Property(e => e.ConfRazonSocial)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RAZON_SOCIAL");

                entity.Property(e => e.ConfRuc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONF_RUC");

                entity.Property(e => e.FechDocu)
                    .HasColumnType("datetime")
                    .HasColumnName("FECH_DOCU");

                entity.Property(e => e.FechGene)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECH_GENE");

                entity.Property(e => e.FinRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("FIN_RANGO");

                entity.Property(e => e.IdDocumento)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ID_DOCUMENTO");

                entity.Property(e => e.IdResumen)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ID_RESUMEN");

                entity.Property(e => e.IdTipoIdentidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID_TIPO_IDENTIDAD");

                entity.Property(e => e.IndicadorSumOtroCargo).HasColumnName("INDICADOR_SUM_OTRO_CARGO");

                entity.Property(e => e.InicioRango)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("INICIO_RANGO");

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MONEDA");

                entity.Property(e => e.Monto)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NombIgvIntTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_INT_TOTA");

                entity.Property(e => e.NombIgvTota)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_IGV_TOTA");

                entity.Property(e => e.NombIsc)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ISC");

                entity.Property(e => e.NumeDocu)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU");

                entity.Property(e => e.NumeDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUME_DOCU_REF");

                entity.Property(e => e.NumeItem).HasColumnName("NUME_ITEM");

                entity.Property(e => e.NumeroIdentidad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_IDENTIDAD");

                entity.Property(e => e.Serie)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDocu)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU");

                entity.Property(e => e.TipoDocuDocu)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_DOCU");

                entity.Property(e => e.TipoDocuEmpr)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_EMPR");

                entity.Property(e => e.TipoDocuRef)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_DOCU_REF");

                entity.Property(e => e.TotaOperExonTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_EXON_TIPO");

                entity.Property(e => e.TotaOperGravTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_GRAV_TIPO");

                entity.Property(e => e.TotaOperInafTipo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TOTA_OPER_INAF_TIPO");

                entity.Property(e => e.TotalIsc).HasColumnName("TOTAL_ISC");

                entity.Property(e => e.TotalIsc2).HasColumnName("TOTAL_ISC_2");

                entity.Property(e => e.TotalSumOtroCargo).HasColumnName("TOTAL_SUM_OTRO_CARGO");

                entity.Property(e => e.ValoVentExonTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_EXON_TOTA");

                entity.Property(e => e.ValoVentGravTota)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("VALO_VENT_GRAV_TOTA");

                entity.Property(e => e.ValoVentInafTota)
                    .HasColumnType("numeric(38, 8)")
                    .HasColumnName("VALO_VENT_INAF_TOTA");

                entity.Property(e => e.VedvMontoIgv)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV");

                entity.Property(e => e.VedvMontoIgv2)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VEDV_MONTO_IGV_2");

                entity.Property(e => e.VersionEstructura)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_ESTRUCTURA");

                entity.Property(e => e.VersionUbl)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VERSION_UBL");
            });




            modelBuilder.Entity<VwNetoPagar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_NETO_PAGAR");

                entity.Property(e => e.Ano)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ANO")
                    .IsFixedLength(true);

                entity.Property(e => e.Ida)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IDA")
                    .IsFixedLength(true);

                entity.Property(e => e.Importe)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes).HasColumnName("MES");
            });


            modelBuilder.Entity<VwGetstockAllwarehousePricelist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_GETSTOCK_ALLWAREHOUSE_PRICELIST");

                entity.Property(e => e.Almacen)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ALMACEN");

                entity.Property(e => e.CdgRef)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CDG_REF");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO");

                entity.Property(e => e.CodigoBarra)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_BARRA");

                entity.Property(e => e.ListaPrecio)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LISTA_PRECIO");

                entity.Property(e => e.Mon)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MON");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.StockActual)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("STOCK_ACTUAL");

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD");
            });


            modelBuilder.Entity<VwMbGetCuotasInmobiliarium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_MB_GET_CUOTAS_INMOBILIARIA");

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaVencimiento)
                    .HasMaxLength(4000)
                    .HasColumnName("FECHA_VENCIMIENTO");

                entity.Property(e => e.Importe)
                    .IsRequired()
                    .HasMaxLength(1042)
                    .IsUnicode(false)
                    .HasColumnName("IMPORTE");

                entity.Property(e => e.Mes)
                    .HasMaxLength(4000)
                    .HasColumnName("MES");

                entity.Property(e => e.NumeroSerie)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO_SERIE");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RUC");
            });

            /*

                        modelBuilder.Entity<V_OPEVW_VENTA_NETA>(entity =>
                        {
                            entity.HasNoKey();

                            entity.ToView("OPEVW_VENTA_NETA");

                            entity.Property(e => e.Ano)
                           .IsRequired()
                           .HasMaxLength(4)
                           .IsUnicode(false)
                           .HasColumnName("ANO")
                           .IsFixedLength(true);



                            entity.Property(e => e.CdgRef)
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnName("CDG_REF");

                            entity.Property(e => e.Codigo)
                                .IsRequired()
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnName("CODIGO");

                            entity.Property(e => e.CodigoBarra)
                                .HasMaxLength(500)
                                .IsUnicode(false)
                                .HasColumnName("CODIGO_BARRA");

                            entity.Property(e => e.ListaPrecio)
                                .HasMaxLength(200)
                                .IsUnicode(false)
                                .HasColumnName("LISTA_PRECIO");

                            entity.Property(e => e.Mon)
                                .HasMaxLength(1000)
                                .IsUnicode(false)
                                .HasColumnName("MON");

                            entity.Property(e => e.Nombre)
                                .IsRequired()
                                .HasMaxLength(200)
                                .IsUnicode(false)
                                .HasColumnName("NOMBRE");

                            entity.Property(e => e.PrecioVenta)
                                .HasColumnType("numeric(14, 4)")
                                .HasColumnName("PRECIO_VENTA");

                            entity.Property(e => e.StockActual)
                                .HasColumnType("numeric(38, 2)")
                                .HasColumnName("STOCK_ACTUAL");

                            entity.Property(e => e.Unidad)
                                .HasMaxLength(1000)
                                .IsUnicode(false)
                                .HasColumnName("UNIDAD");
                        });
            */


            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
